{"version":3,"sources":["webpack:///bundle.98fc2a338d525f462ea1.js","webpack:///webpack/bootstrap a5b2fe9dc8cb8141395f","webpack:///./src/index.js","webpack:///../tooling/~/core-js/library/modules/$.wks.js","webpack:///../tooling/~/core-js/library/modules/$.js","webpack:///../tooling/~/core-js/library/modules/$.core.js","webpack:///../tooling/~/core-js/library/modules/$.export.js","webpack:///../tooling/~/core-js/library/modules/$.global.js","webpack:///../tooling/~/core-js/library/modules/$.hide.js","webpack:///../tooling/~/core-js/library/modules/$.iterators.js","webpack:///./~/flux-standard-action/lib/index.js","webpack:///./~/lodash.isarguments/index.js","webpack:///./~/lodash/isPlainObject.js","webpack:///./~/redux-actions/lib/handleAction.js","webpack:///./~/redux-actions/lib/index.js","webpack:///./~/redux/lib/compose.js","webpack:///./~/redux/lib/createStore.js","webpack:///./~/redux/lib/index.js","webpack:///./~/redux/lib/utils/warning.js","webpack:///../tooling/~/core-js/library/modules/$.cof.js","webpack:///../tooling/~/core-js/library/modules/$.ctx.js","webpack:///../tooling/~/core-js/library/modules/$.defined.js","webpack:///../tooling/~/core-js/library/modules/$.fails.js","webpack:///../tooling/~/core-js/library/modules/$.has.js","webpack:///../tooling/~/core-js/library/modules/$.property-desc.js","webpack:///../tooling/~/core-js/library/modules/$.set-to-string-tag.js","webpack:///../tooling/~/core-js/library/modules/$.to-integer.js","webpack:///../tooling/~/core-js/library/modules/$.to-object.js","webpack:///../tooling/~/vue/dist/vue.common.js","webpack:///./~/hammerjs/hammer.js","webpack:///./~/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./~/lodash._basefor/index.js","webpack:///./~/lodash.isarray/index.js","webpack:///./~/lodash.isplainobject/index.js","webpack:///./~/lodash.keysin/index.js","webpack:///./~/lodash/_isHostObject.js","webpack:///./~/lodash/isObjectLike.js","webpack:///./~/object-path/index.js","webpack:///./~/reduce-reducers/lib/index.js","webpack:///./~/redux-actions/lib/createAction.js","webpack:///./~/redux-actions/lib/handleActions.js","webpack:///./~/redux-actions/lib/ownKeys.js","webpack:///./~/redux-promise/lib/index.js","webpack:///./~/redux-thunk/lib/index.js","webpack:///./~/redux/lib/applyMiddleware.js","webpack:///./~/redux/lib/bindActionCreators.js","webpack:///./~/redux/lib/combineReducers.js","webpack:///./~/revue/revue.common.js","webpack:///./~/vue-touch/vue-touch.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/actions.js","webpack:///./src/api.js","webpack:///./src/reducers/images.js","webpack:///./src/reducers/index.js","webpack:///./src/store.js","webpack:///app.vue","webpack:///../tooling/~/babel-runtime/core-js/array/from.js","webpack:///../tooling/~/babel-runtime/core-js/object/assign.js","webpack:///../tooling/~/babel-runtime/helpers/extends.js","webpack:///../tooling/~/babel-runtime/helpers/toConsumableArray.js","webpack:///../tooling/~/core-js/library/fn/array/from.js","webpack:///../tooling/~/core-js/library/fn/object/assign.js","webpack:///../tooling/~/core-js/library/modules/$.a-function.js","webpack:///../tooling/~/core-js/library/modules/$.an-object.js","webpack:///../tooling/~/core-js/library/modules/$.classof.js","webpack:///../tooling/~/core-js/library/modules/$.descriptors.js","webpack:///../tooling/~/core-js/library/modules/$.iobject.js","webpack:///../tooling/~/core-js/library/modules/$.is-array-iter.js","webpack:///../tooling/~/core-js/library/modules/$.is-object.js","webpack:///../tooling/~/core-js/library/modules/$.iter-call.js","webpack:///../tooling/~/core-js/library/modules/$.iter-create.js","webpack:///../tooling/~/core-js/library/modules/$.iter-define.js","webpack:///../tooling/~/core-js/library/modules/$.iter-detect.js","webpack:///../tooling/~/core-js/library/modules/$.library.js","webpack:///../tooling/~/core-js/library/modules/$.object-assign.js","webpack:///../tooling/~/core-js/library/modules/$.redefine.js","webpack:///../tooling/~/core-js/library/modules/$.shared.js","webpack:///../tooling/~/core-js/library/modules/$.string-at.js","webpack:///../tooling/~/core-js/library/modules/$.to-length.js","webpack:///../tooling/~/core-js/library/modules/$.uid.js","webpack:///../tooling/~/core-js/library/modules/core.get-iterator-method.js","webpack:///../tooling/~/core-js/library/modules/es6.array.from.js","webpack:///../tooling/~/core-js/library/modules/es6.object.assign.js","webpack:///../tooling/~/core-js/library/modules/es6.string.iterator.js","webpack:///./src/app.vue?499e","webpack:///./src/app.vue"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueTouch","_vueTouch2","_app","_app2","use","el","components","app","store","uid","Symbol","name","$Object","Object","create","getProto","getPrototypeOf","isEnum","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","defineProperty","setDescs","defineProperties","getKeys","keys","getNames","getOwnPropertyNames","getSymbols","getOwnPropertySymbols","each","forEach","core","version","__e","global","ctx","PROTOTYPE","$export","type","source","key","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","target","C","param","this","Function","window","Math","self","__g","$","createDesc","object","value","isValidKey","validKeys","indexOf","isFSA","action","_lodashIsplainobject2","every","isError","error","_lodashIsplainobject","baseProperty","undefined","isArguments","isArrayLikeObject","hasOwnProperty","objectToString","argsTag","isArrayLike","isFunction","isLength","getLength","isObjectLike","tag","isObject","funcTag","genTag","MAX_SAFE_INTEGER","objectProto","prototype","toString","isPlainObject","objectTag","isHostObject","proto","constructor","Ctor","funcToString","objectCtorString","val","handleAction","reducers","state","handlerKey","_fluxStandardAction","next","reducer","_createAction","_createAction2","_handleAction","_handleAction2","_handleActions","_handleActions2","createAction","handleActions","compose","_len","arguments","length","funcs","Array","_key","last","rest","slice","reduceRight","composed","f","apply","createStore","initialState","enhancer","ensureCanMutateNextListeners","nextListeners","currentListeners","getState","currentState","subscribe","listener","Error","isSubscribed","push","index","splice","dispatch","_isPlainObject2","isDispatching","currentReducer","listeners","i","replaceReducer","nextReducer","ActionTypes","INIT","_isPlainObject","applyMiddleware","bindActionCreators","combineReducers","_createStore","_createStore2","_combineReducers","_combineReducers2","_bindActionCreators","_bindActionCreators2","_applyMiddleware","_applyMiddleware2","_compose","_compose2","_warning","warning","message","console","e","it","aFunction","fn","that","a","b","TypeError","exec","bitmap","enumerable","configurable","writable","def","has","TAG","stat","ceil","floor","isNaN","defined","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toNumber","parsed","Number","toBoolean","stripQuotes","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind$1","l","toArray","list","start","ret","extend","to","from","OBJECT_STRING","_debounce","func","wait","timeout","args","context","timestamp","result","later","Date","now","setTimeout","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","_keymap","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","map","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE$1","appendWithTransition","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","query","document","querySelector","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on$1","event","useCapture","addEventListener","off","removeEventListener","setClass","cls","isIE9","SVGElement","setAttribute","className","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","content","DocumentFragment","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__vue_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","path","coerceProp","assertProp","raw","required","expectedType","valid","String","Boolean","isArray","validator","coerce","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","charAt","assertAsset","Dep","uid$3","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","getter","setter","convertAllProperties","property","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","user","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","prevError","twoWay","queued","shallow","traverse","normalize","propCache","prefix","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","getValue","multi","init","selected","_value","indexOf$1","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","suffix","innerHTML","nodeToFragment","textContent","clonedNode","cloneNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__vfrag__","withTransition","method","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","outerHTML","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","pushJob","job","queue$1","flush","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","offsetWidth","getClientRects","stringToObject","split","contains$1","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","getDefault","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","publicDirectives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","matched","parseModifiers","modifierRE","bind","transitionRE","bindRE","onRE","on","dirAttrRE","makeNodeLinkFn","directives","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","propsData","optionsDataFn","optionsData","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","j","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","contentLinkFn","rootLinker","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","globalAPI","createClass","util","compiler","parsers","text$1","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","mixin","definition","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE","$interpolate","$log","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","reduce","$value","$key","orderBy","sortKey","reverse","order","extractFragment","main","__v_selected","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","shift","entry","newer","older","returnEntry","freeze","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","paramAttributes","arrayProto","addSub","sub","removeSub","addDep","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","depIds","cloak","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","unbind","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","modelProps","true-value","false-value","invalid","modelProp","model","__v_model","setAttributeNS","esc","tab","enter","space","delete","up","right","down","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","checkbox","getBooleanValue","checked","_trueValue","_falseValue","params","_watcher","afterBind","select","forceUpdate","multiple","initValue","selectedIndex","radio","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","checkFilters","hasRead","hasWrite","_unbind","show","nextElementSibling","elseEl","toggle","display","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","rect","t","placeholder","vIf","elseFactory","elseFrag","uid$1","vFor","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","staggerAmount","getStagger","total","trans","stagger","_preProcess","_postProcess","swap","for","if","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","oldId","bindingModes","childKey","parentKey","parentWatcher","childWatcher","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHook","activate","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","transitionMode","vClass","handleArray","cleanup","prevKeys","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","called","unwatch","paramWatchers","_paramUnwatchFns","$event","unwatchFns","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","slot","fallback","slotName","selector","tryCompile","elseBlock","namedSlot","elementDirectives","_namedSlot","transitions","partials","__WEBPACK_AMD_DEFINE_RESULT__","exportName","setTimeoutContext","bindFn","invokeArrayArg","deprecate","deprecationMessage","stack","inherit","base","properties","childP","baseP","_super","assign","boolOrFn","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","inStr","find","inArray","findByKey","uniqueArray","results","values","camelProp","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","ownerDocument","defaultView","parentWindow","Input","manager","callback","inputTarget","domHandler","ev","enable","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offsetDelta","prevDelta","velocity","velocityX","velocityY","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","sqrt","atan2","PI","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","allow","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","TouchAction","cleanTouchActions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","defaults","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","recognizers","preset","Manager","touchAction","toggleCssProps","recognizeWith","requireFailure","cssProps","triggerDomEvent","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","output","nextKey","dest","merge","MOBILE_REGEX","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM",2,3,4,5,"MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","compute","getTouchAction","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","force","stopped","curRecognizer","existing","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","fetch","createBaseFor","fromRight","iteratee","keysFunc","iterable","baseFor","getNative","isNative","objToString","reIsNative","fnToString","reIsHostCtor","arrayTag","nativeIsArray","baseForIn","keysIn","subValue","isIndex","reIsUint","isProto","skipIndexes","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","root","isEmpty","_hasOwnProperty","toStr","isNumber","isBoolean","getKey","intKey","doNotReplace","currentPath","objectPath","proxy","ensureExists","at","coalesce","paths","defaultValue","len","reduceReducers","previous","r","identity","actionCreator","metaCreator","finalActionCreator","payload","meta","defaultState","_ownKeys2","_reduceReducers2","_ownKeys","_reduceReducers","ownKeys","Reflect","isPromise","then","promiseMiddleware","_extends","thunkMiddleware","middlewares","_dispatch","chain","middlewareAPI","middleware","bindActionCreator","actionCreators","boundActionCreators","getUndefinedStateErrorMessage","actionType","actionName","assertReducerSanity","random","substring","reducerKeys","finalReducers","sanityError","finalReducerKeys","hasChanged","nextState","previousStateForKey","nextStateForKey","errorMessage","shallowEqual","objA","objB","babelHelpers","keysA","keysB","bindVue","$subscribe","_this","_calledOnce","isDev","_unsubscribers","realProp","storeProp","re","_prop$match","_prop$match2","slicedToArray","currentValue","handleChange","previousValue","$unsubscribe","un","_loop","_len2","_key2","classCallCheck","instance","Constructor","protoProps","staticProps","sliceIterator","_arr","_n","_d","_e","_s","_i","err","Revue","reduxStore","reduxActions","_len3","_key3","guardDirections","directions","vueTouch","gestures","customeEvents","hammer","mc","recognizerType","custom","globalOptions","localOptions","hammerOptions","opts","registerCustomEvent","normalizeName","normalizeValue","Headers","headers","consumed","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","support","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","arrayBuffer","ArrayBuffer","rejected","decode","normalizeMethod","upcased","Request","url","credentials","referrer","form","bytes","decodeURIComponent","xhr","pairs","getAllResponseHeaders","header","Response","bodyInit","status","ok","statusText","getAll","thisArg","clone","response","redirectStatuses","redirect","RangeError","location","responseURL","getResponseHeader","request","XMLHttpRequest","responseText","withCredentials","responseType","setRequestHeader","send","polyfill","_interopRequireWildcard","newObj","fetchImages","page","fetchingImages","fetchedImages","_reduxActions","_api","api","_isomorphicFetch2","_isomorphicFetch","_toConsumableArray2","_toConsumableArray3","_extends2","_extends3","fetching","images","fetching images","fetched images","_redux","_images","_images2","_revue","_revue2","_reduxThunk","_reduxThunk2","_reduxPromise","_reduxPromise2","_reducers","_reducers2","_store","_store2","_actions","handleSwipe","_Object$assign","_from","_from2","arr2","cof","ARG","O","T","callee","Iterators","ITERATOR","ArrayProto","anObject","entries","setToStringTag","IteratorPrototype","NAME","LIBRARY","redefine","hide","$iterCreate","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","SAFE_CLOSING","riter","skipClosing","safe","iter","toObject","IObject","A","K","$$","$$len","SHARED","toInteger","TO_STRING","pos","min","px","classof","getIteratorMethod","isArrayIter","toLength","getIterFn","arrayLike","step","mapfn","mapping","iterFn","$at","iterated","_t","point","__vue_script__","__vue_template__"],"mappings":"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","file":"bundle.98fc2a338d525f462ea1.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(26);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueTouch = __webpack_require__(46);\n\t\n\tvar _vueTouch2 = _interopRequireDefault(_vueTouch);\n\t\n\tvar _app = __webpack_require__(84);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tif (false) {\n\t\t_vue2.default.config.debug = true;\n\t}\n\t\n\t_vue2.default.use(_vueTouch2.default);\n\t\n\tnew _vue2.default({\n\t\tel: 'body',\n\t\tcomponents: { app: _app2.default }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar store  = __webpack_require__(74)('wks')\n\t  , uid    = __webpack_require__(77)\n\t  , Symbol = __webpack_require__(5).Symbol;\n\tmodule.exports = function(name){\n\t  return store[name] || (store[name] =\n\t    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar $Object = Object;\n\tmodule.exports = {\n\t  create:     $Object.create,\n\t  getProto:   $Object.getPrototypeOf,\n\t  isEnum:     {}.propertyIsEnumerable,\n\t  getDesc:    $Object.getOwnPropertyDescriptor,\n\t  setDesc:    $Object.defineProperty,\n\t  setDescs:   $Object.defineProperties,\n\t  getKeys:    $Object.keys,\n\t  getNames:   $Object.getOwnPropertyNames,\n\t  getSymbols: $Object.getOwnPropertySymbols,\n\t  each:       [].forEach\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '1.2.6'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(5)\n\t  , core      = __webpack_require__(3)\n\t  , ctx       = __webpack_require__(18)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && key in target;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(param){\n\t        return this instanceof C ? new C(param) : C(param);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;  // forced\n\t$export.G = 2;  // global\n\t$export.S = 4;  // static\n\t$export.P = 8;  // proto\n\t$export.B = 16; // bind\n\t$export.W = 32; // wrap\n\tmodule.exports = $export;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $          = __webpack_require__(2)\n\t  , createDesc = __webpack_require__(22);\n\tmodule.exports = __webpack_require__(63) ? function(object, key, value){\n\t  return $.setDesc(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.isFSA = isFSA;\n\texports.isError = isError;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _lodashIsplainobject = __webpack_require__(31);\n\t\n\tvar _lodashIsplainobject2 = _interopRequireDefault(_lodashIsplainobject);\n\t\n\tvar validKeys = ['type', 'payload', 'error', 'meta'];\n\t\n\tfunction isValidKey(key) {\n\t  return validKeys.indexOf(key) > -1;\n\t}\n\t\n\tfunction isFSA(action) {\n\t  return _lodashIsplainobject2['default'](action) && typeof action.type !== 'undefined' && Object.keys(action).every(isValidKey);\n\t}\n\t\n\tfunction isError(action) {\n\t  return action.error === true;\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\n\t * lodash 3.0.6 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t\n\t/** Used as references for various `Number` constants. */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    funcTag = '[object Function]',\n\t    genTag = '[object GeneratorFunction]';\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/** Built-in value references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\t\n\t/**\n\t * The base implementation of `_.property` without support for deep paths.\n\t *\n\t * @private\n\t * @param {string} key The key of the property to get.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseProperty(key) {\n\t  return function(object) {\n\t    return object == null ? undefined : object[key];\n\t  };\n\t}\n\t\n\t/**\n\t * Gets the \"length\" property value of `object`.\n\t *\n\t * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {*} Returns the \"length\" value.\n\t */\n\tvar getLength = baseProperty('length');\n\t\n\t/**\n\t * Checks if `value` is likely an `arguments` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isArguments(function() { return arguments; }());\n\t * // => true\n\t *\n\t * _.isArguments([1, 2, 3]);\n\t * // => false\n\t */\n\tfunction isArguments(value) {\n\t  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t}\n\t\n\t/**\n\t * Checks if `value` is array-like. A value is considered array-like if it's\n\t * not a function and has a `value.length` that's an integer greater than or\n\t * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @type Function\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLike(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLike('abc');\n\t * // => true\n\t *\n\t * _.isArrayLike(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLike(value) {\n\t  return value != null &&\n\t    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n\t}\n\t\n\t/**\n\t * This method is like `_.isArrayLike` except that it also checks if `value`\n\t * is an object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @type Function\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLikeObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLikeObject('abc');\n\t * // => false\n\t *\n\t * _.isArrayLikeObject(_.noop);\n\t * // => false\n\t */\n\tfunction isArrayLikeObject(value) {\n\t  return isObjectLike(value) && isArrayLike(value);\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in Safari 8 which returns 'object' for typed array constructors, and\n\t  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t  var tag = isObject(value) ? objectToString.call(value) : '';\n\t  return tag == funcTag || tag == genTag;\n\t}\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t * @example\n\t *\n\t * _.isLength(3);\n\t * // => true\n\t *\n\t * _.isLength(Number.MIN_VALUE);\n\t * // => false\n\t *\n\t * _.isLength(Infinity);\n\t * // => false\n\t *\n\t * _.isLength('3');\n\t * // => false\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\tmodule.exports = isArguments;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isHostObject = __webpack_require__(33),\n\t    isObjectLike = __webpack_require__(34);\n\t\n\t/** `Object#toString` result references. */\n\tvar objectTag = '[object Object]';\n\t\n\t/** Used for built-in method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar funcToString = Function.prototype.toString;\n\t\n\t/** Used to infer the `Object` constructor. */\n\tvar objectCtorString = funcToString.call(Object);\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objectToString = objectProto.toString;\n\t\n\t/** Built-in value references. */\n\tvar getPrototypeOf = Object.getPrototypeOf;\n\t\n\t/**\n\t * Checks if `value` is a plain object, that is, an object created by the\n\t * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * _.isPlainObject(new Foo);\n\t * // => false\n\t *\n\t * _.isPlainObject([1, 2, 3]);\n\t * // => false\n\t *\n\t * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t * // => true\n\t *\n\t * _.isPlainObject(Object.create(null));\n\t * // => true\n\t */\n\tfunction isPlainObject(value) {\n\t  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n\t    return false;\n\t  }\n\t  var proto = objectProto;\n\t  if (typeof value.constructor == 'function') {\n\t    proto = getPrototypeOf(value);\n\t  }\n\t  if (proto === null) {\n\t    return true;\n\t  }\n\t  var Ctor = proto.constructor;\n\t  return (typeof Ctor == 'function' &&\n\t    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t}\n\t\n\tmodule.exports = isPlainObject;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = handleAction;\n\t\n\tvar _fluxStandardAction = __webpack_require__(8);\n\t\n\tfunction isFunction(val) {\n\t  return typeof val === 'function';\n\t}\n\t\n\tfunction handleAction(type, reducers) {\n\t  return function (state, action) {\n\t    // If action type does not match, return previous state\n\t    if (action.type !== type) return state;\n\t\n\t    var handlerKey = _fluxStandardAction.isError(action) ? 'throw' : 'next';\n\t\n\t    // If function is passed instead of map, use as reducer\n\t    if (isFunction(reducers)) {\n\t      reducers.next = reducers['throw'] = reducers;\n\t    }\n\t\n\t    // Otherwise, assume an action map was passed\n\t    var reducer = reducers[handlerKey];\n\t\n\t    return isFunction(reducer) ? reducer(state, action) : state;\n\t  };\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _createAction = __webpack_require__(37);\n\t\n\tvar _createAction2 = _interopRequireDefault(_createAction);\n\t\n\tvar _handleAction = __webpack_require__(11);\n\t\n\tvar _handleAction2 = _interopRequireDefault(_handleAction);\n\t\n\tvar _handleActions = __webpack_require__(38);\n\t\n\tvar _handleActions2 = _interopRequireDefault(_handleActions);\n\t\n\texports.createAction = _createAction2['default'];\n\texports.handleAction = _handleAction2['default'];\n\texports.handleActions = _handleActions2['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = compose;\n\t/**\n\t * Composes single-argument functions from right to left.\n\t *\n\t * @param {...Function} funcs The functions to compose.\n\t * @returns {Function} A function obtained by composing functions from right to\n\t * left. For example, compose(f, g, h) is identical to arg => f(g(h(arg))).\n\t */\n\tfunction compose() {\n\t  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n\t    funcs[_key] = arguments[_key];\n\t  }\n\t\n\t  return function () {\n\t    if (funcs.length === 0) {\n\t      return arguments.length <= 0 ? undefined : arguments[0];\n\t    }\n\t\n\t    var last = funcs[funcs.length - 1];\n\t    var rest = funcs.slice(0, -1);\n\t\n\t    return rest.reduceRight(function (composed, f) {\n\t      return f(composed);\n\t    }, last.apply(undefined, arguments));\n\t  };\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.ActionTypes = undefined;\n\texports[\"default\"] = createStore;\n\t\n\tvar _isPlainObject = __webpack_require__(10);\n\t\n\tvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t/**\n\t * These are private action types reserved by Redux.\n\t * For any unknown actions, you must return the current state.\n\t * If the current state is undefined, you must return the initial state.\n\t * Do not reference these action types directly in your code.\n\t */\n\tvar ActionTypes = exports.ActionTypes = {\n\t  INIT: '@@redux/INIT'\n\t};\n\t\n\t/**\n\t * Creates a Redux store that holds the state tree.\n\t * The only way to change the data in the store is to call `dispatch()` on it.\n\t *\n\t * There should only be a single store in your app. To specify how different\n\t * parts of the state tree respond to actions, you may combine several reducers\n\t * into a single reducer function by using `combineReducers`.\n\t *\n\t * @param {Function} reducer A function that returns the next state tree, given\n\t * the current state tree and the action to handle.\n\t *\n\t * @param {any} [initialState] The initial state. You may optionally specify it\n\t * to hydrate the state from the server in universal apps, or to restore a\n\t * previously serialized user session.\n\t * If you use `combineReducers` to produce the root reducer function, this must be\n\t * an object with the same shape as `combineReducers` keys.\n\t *\n\t * @param {Function} enhancer The store enhancer. You may optionally specify it\n\t * to enhance the store with third-party capabilities such as middleware,\n\t * time travel, persistence, etc. The only store enhancer that ships with Redux\n\t * is `applyMiddleware()`.\n\t *\n\t * @returns {Store} A Redux store that lets you read the state, dispatch actions\n\t * and subscribe to changes.\n\t */\n\tfunction createStore(reducer, initialState, enhancer) {\n\t  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n\t    enhancer = initialState;\n\t    initialState = undefined;\n\t  }\n\t\n\t  if (typeof enhancer !== 'undefined') {\n\t    if (typeof enhancer !== 'function') {\n\t      throw new Error('Expected the enhancer to be a function.');\n\t    }\n\t\n\t    return enhancer(createStore)(reducer, initialState);\n\t  }\n\t\n\t  if (typeof reducer !== 'function') {\n\t    throw new Error('Expected the reducer to be a function.');\n\t  }\n\t\n\t  var currentReducer = reducer;\n\t  var currentState = initialState;\n\t  var currentListeners = [];\n\t  var nextListeners = currentListeners;\n\t  var isDispatching = false;\n\t\n\t  function ensureCanMutateNextListeners() {\n\t    if (nextListeners === currentListeners) {\n\t      nextListeners = currentListeners.slice();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reads the state tree managed by the store.\n\t   *\n\t   * @returns {any} The current state tree of your application.\n\t   */\n\t  function getState() {\n\t    return currentState;\n\t  }\n\t\n\t  /**\n\t   * Adds a change listener. It will be called any time an action is dispatched,\n\t   * and some part of the state tree may potentially have changed. You may then\n\t   * call `getState()` to read the current state tree inside the callback.\n\t   *\n\t   * You may call `dispatch()` from a change listener, with the following\n\t   * caveats:\n\t   *\n\t   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n\t   * If you subscribe or unsubscribe while the listeners are being invoked, this\n\t   * will not have any effect on the `dispatch()` that is currently in progress.\n\t   * However, the next `dispatch()` call, whether nested or not, will use a more\n\t   * recent snapshot of the subscription list.\n\t   *\n\t   * 2. The listener should not expect to see all states changes, as the state\n\t   * might have been updated multiple times during a nested `dispatch()` before\n\t   * the listener is called. It is, however, guaranteed that all subscribers\n\t   * registered before the `dispatch()` started will be called with the latest\n\t   * state by the time it exits.\n\t   *\n\t   * @param {Function} listener A callback to be invoked on every dispatch.\n\t   * @returns {Function} A function to remove this change listener.\n\t   */\n\t  function subscribe(listener) {\n\t    if (typeof listener !== 'function') {\n\t      throw new Error('Expected listener to be a function.');\n\t    }\n\t\n\t    var isSubscribed = true;\n\t\n\t    ensureCanMutateNextListeners();\n\t    nextListeners.push(listener);\n\t\n\t    return function unsubscribe() {\n\t      if (!isSubscribed) {\n\t        return;\n\t      }\n\t\n\t      isSubscribed = false;\n\t\n\t      ensureCanMutateNextListeners();\n\t      var index = nextListeners.indexOf(listener);\n\t      nextListeners.splice(index, 1);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Dispatches an action. It is the only way to trigger a state change.\n\t   *\n\t   * The `reducer` function, used to create the store, will be called with the\n\t   * current state tree and the given `action`. Its return value will\n\t   * be considered the **next** state of the tree, and the change listeners\n\t   * will be notified.\n\t   *\n\t   * The base implementation only supports plain object actions. If you want to\n\t   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n\t   * wrap your store creating function into the corresponding middleware. For\n\t   * example, see the documentation for the `redux-thunk` package. Even the\n\t   * middleware will eventually dispatch plain object actions using this method.\n\t   *\n\t   * @param {Object} action A plain object representing “what changed”. It is\n\t   * a good idea to keep actions serializable so you can record and replay user\n\t   * sessions, or use the time travelling `redux-devtools`. An action must have\n\t   * a `type` property which may not be `undefined`. It is a good idea to use\n\t   * string constants for action types.\n\t   *\n\t   * @returns {Object} For convenience, the same action object you dispatched.\n\t   *\n\t   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n\t   * return something else (for example, a Promise you can await).\n\t   */\n\t  function dispatch(action) {\n\t    if (!(0, _isPlainObject2[\"default\"])(action)) {\n\t      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n\t    }\n\t\n\t    if (typeof action.type === 'undefined') {\n\t      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n\t    }\n\t\n\t    if (isDispatching) {\n\t      throw new Error('Reducers may not dispatch actions.');\n\t    }\n\t\n\t    try {\n\t      isDispatching = true;\n\t      currentState = currentReducer(currentState, action);\n\t    } finally {\n\t      isDispatching = false;\n\t    }\n\t\n\t    var listeners = currentListeners = nextListeners;\n\t    for (var i = 0; i < listeners.length; i++) {\n\t      listeners[i]();\n\t    }\n\t\n\t    return action;\n\t  }\n\t\n\t  /**\n\t   * Replaces the reducer currently used by the store to calculate the state.\n\t   *\n\t   * You might need this if your app implements code splitting and you want to\n\t   * load some of the reducers dynamically. You might also need this if you\n\t   * implement a hot reloading mechanism for Redux.\n\t   *\n\t   * @param {Function} nextReducer The reducer for the store to use instead.\n\t   * @returns {void}\n\t   */\n\t  function replaceReducer(nextReducer) {\n\t    if (typeof nextReducer !== 'function') {\n\t      throw new Error('Expected the nextReducer to be a function.');\n\t    }\n\t\n\t    currentReducer = nextReducer;\n\t    dispatch({ type: ActionTypes.INIT });\n\t  }\n\t\n\t  // When a store is created, an \"INIT\" action is dispatched so that every\n\t  // reducer returns their initial state. This effectively populates\n\t  // the initial state tree.\n\t  dispatch({ type: ActionTypes.INIT });\n\t\n\t  return {\n\t    dispatch: dispatch,\n\t    subscribe: subscribe,\n\t    getState: getState,\n\t    replaceReducer: replaceReducer\n\t  };\n\t}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\t\n\tvar _createStore = __webpack_require__(14);\n\t\n\tvar _createStore2 = _interopRequireDefault(_createStore);\n\t\n\tvar _combineReducers = __webpack_require__(44);\n\t\n\tvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\t\n\tvar _bindActionCreators = __webpack_require__(43);\n\t\n\tvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\t\n\tvar _applyMiddleware = __webpack_require__(42);\n\t\n\tvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\t\n\tvar _compose = __webpack_require__(13);\n\t\n\tvar _compose2 = _interopRequireDefault(_compose);\n\t\n\tvar _warning = __webpack_require__(16);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t/*\n\t* This is a dummy function to check if the function name has been altered by minification.\n\t* If the function has been minified and NODE_ENV !== 'production', warn the user.\n\t*/\n\tfunction isCrushed() {}\n\t\n\tif (false) {\n\t  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n\t}\n\t\n\texports.createStore = _createStore2[\"default\"];\n\texports.combineReducers = _combineReducers2[\"default\"];\n\texports.bindActionCreators = _bindActionCreators2[\"default\"];\n\texports.applyMiddleware = _applyMiddleware2[\"default\"];\n\texports.compose = _compose2[\"default\"];\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = warning;\n\t/**\n\t * Prints a warning in the console if it exists.\n\t *\n\t * @param {String} message The warning message.\n\t * @returns {void}\n\t */\n\tfunction warning(message) {\n\t  /* eslint-disable no-console */\n\t  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t    console.error(message);\n\t  }\n\t  /* eslint-enable no-console */\n\t  try {\n\t    // This error was thrown as a convenience so that you can use this stack\n\t    // to find the callsite that caused this warning to fire.\n\t    throw new Error(message);\n\t    /* eslint-disable no-empty */\n\t  } catch (e) {}\n\t  /* eslint-enable no-empty */\n\t}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(60);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar def = __webpack_require__(2).setDesc\n\t  , has = __webpack_require__(21)\n\t  , TAG = __webpack_require__(1)('toStringTag');\n\t\n\tmodule.exports = function(it, tag, stat){\n\t  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(19);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.16\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind$1(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a non-enumerable property\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\tvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\t\n\tvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE$1.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether or not to handle fully object properties which\n\t   * are already backed by getters and seters. Depending on\n\t   * use case and environment, this might introduce non-neglible\n\t   * performance penalties.\n\t   */\n\t  convertAllProperties: false,\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on$1(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !(el instanceof SVGElement)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__vue_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n\tvar reservedTagRE = /^(slot|partial|component)$/;\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  // if a prop is not provided and is not required,\n\t  // skip the check.\n\t  if (prop.raw === null && !prop.required) {\n\t    return true;\n\t  }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator.call(null, value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var def;\n\t    var ids = Object.keys(components);\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar uid$3 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$3++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  target.__proto__ = src;\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter, setter;\n\t  if (config.convertAllProperties) {\n\t    var property = Object.getOwnPropertyDescriptor(obj, key);\n\t    if (property && property.configurable === false) {\n\t      return;\n\t    }\n\t    getter = property && property.get;\n\t    setter = property && property.set;\n\t  }\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind$1,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on$1,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tinitProp: initProp,\n\t\tassertProp: assertProp,\n\t\tcoerceProp: coerceProp,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    if (false) {\n\t      this._runtimeData = options.data;\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    return new Function('scope', 'return ' + body + ';');\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // if an internal watcher is pushed, but the internal\n\t    // queue is already depleted, we run it immediately.\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      watcher.run();\n\t      return;\n\t    }\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = isFn ? expOrFn.toString() : expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = Object.create(null);\n\t  this.newDeps = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDeps[id]) {\n\t    this.newDeps[id] = dep;\n\t    if (!this.deps[id]) {\n\t      this.deps[id] = dep;\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDeps = Object.create(null);\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var ids = Object.keys(this.deps);\n\t  var i = ids.length;\n\t  while (i--) {\n\t    var id = ids[i];\n\t    if (!this.newDeps[id]) {\n\t      this.deps[id].removeSub(this);\n\t    }\n\t  }\n\t  this.deps = this.newDeps;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var depIds = Object.keys(this.deps);\n\t  var i = depIds.length;\n\t  while (i--) {\n\t    this.deps[depIds[i]].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var depIds = Object.keys(this.deps);\n\t    var i = depIds.length;\n\t    while (i--) {\n\t      this.deps[depIds[i]].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on = {\n\t\n\t  acceptStatement: true,\n\t  priority: ON,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on$1(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on$1(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.listener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && node.content instanceof DocumentFragment;\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (template instanceof DocumentFragment) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__vue_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__vfrag__ = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__vfrag__ = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : el.outerHTML);\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseFactory = new FragmentFactory(this.vm, next);\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t      this.factory = new FragmentFactory(this.vm, el);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseFactory && !this.elseFrag) {\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar uid$1 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in items\" syntax\n\t    var inMatch = this.expression.match(/(.*) in (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$1;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          frag.scope[alias] = value;\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t      return w.active;\n\t    });\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    defineReactive(scope, alias, value);\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__vfrag__ = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__vfrag__;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__vfrag__;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\tvar text = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar publicDirectives = {\n\t  text: text,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on,\n\t  bind: bind,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind$1(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t\n\t  // Important hack:\n\t  // in Chrome, if a just-entered element is applied the\n\t  // leave class while its interpolated property still has\n\t  // a very small value (within one frame), Chrome will\n\t  // skip the leave transition entirely and not firing the\n\t  // transtionend event. Therefore we need to protected\n\t  // against such cases using a one-frame timeout.\n\t  this.justEntered = true;\n\t  var self = this;\n\t  setTimeout(function () {\n\t    self.justEntered = false;\n\t  }, 17);\n\t\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on$1(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t}\n\t\n\tvar transition = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    // apply on closest vm\n\t    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        child[childKey] = val;\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(id, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || id;\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(id, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHook = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHook && !cached) {\n\t      this.waitingFor = newComponent;\n\t      activateHook.call(newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      this.waitingFor.$destroy();\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (false) {\n\t      if (current) current._inactive = true;\n\t      target._inactive = false;\n\t    }\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    var keys = this.prevKeys = Object.keys(value);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      if (value[key]) {\n\t        addClass(this.el, key);\n\t      } else {\n\t        removeClass(this.el, key);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      if (value[i]) {\n\t        addClass(this.el, value[i]);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (key && (!value || !contains$1(value, key))) {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tfunction contains$1(value, key) {\n\t  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t}\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition\n\t};\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (options.required) {\n\t      // warn missing required\n\t      (\"production\") !== 'production' && warn('Missing required prop: ' + name);\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, getDefault(vm, options));\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (vm._context) {\n\t          if (prop.mode === propBindingModes.ONE_TIME) {\n\t            // one time binding\n\t            value = (scope || vm._context).$get(prop.parentPath);\n\t            initProp(vm, prop, value);\n\t          } else {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          }\n\t        } else {\n\t            (\"production\") !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n\t          }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value\n\t        value = options.type === Boolean && raw === '' ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getDefault(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// terminal directives\n\tvar terminalDirectives = ['for', 'if'];\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(el.attributes, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: publicDirectives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) return;\n\t  // special case: give named slot a higher priority\n\t  // than unnamed slots\n\t  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n\t    tag = '_namedSlot';\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t  var value, dirName;\n\t  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t    dirName = terminalDirectives[i];\n\t    value = el.getAttribute('v-' + dirName);\n\t    if (value != null) {\n\t      return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t    }\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    // either an element directive, or if/for\n\t    def: def || publicDirectives[dirName]\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', publicDirectives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', publicDirectives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', publicDirectives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (el instanceof DocumentFragment) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\tterminalDirectives: terminalDirectives,\n\t\ttransclude: transclude\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var propsData = this._data;\n\t    var optionsDataFn = this.$options.data;\n\t    var optionsData = optionsDataFn && optionsDataFn();\n\t    var runtimeData;\n\t    if (false) {\n\t      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n\t      this._runtimeData = null;\n\t    }\n\t    if (optionsData) {\n\t      this._data = optionsData;\n\t      for (var prop in propsData) {\n\t        if (false) {\n\t          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t        }\n\t        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n\t          set(optionsData, prop, propsData[prop]);\n\t        }\n\t      }\n\t    }\n\t    var data = this._data;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      this._proxy(key);\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind$1(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} raw\n\t * @param {Object} def - directive definition object\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = params[i];\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on$1(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (el instanceof DocumentFragment) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {String} name - directive name\n\t   * @param {Node} node   - target node\n\t   * @param {Object} desc - parsed directive descriptor\n\t   * @param {Object} def  - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String} id\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (id, cb) {\n\t    var factory = resolveAsset(this.$options, 'components', id);\n\t    if (false) {\n\t      assertAsset(factory, 'component', id);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory(function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tfunction globalAPI (Vue) {\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text$1,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      for (var key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install APIs\n\tglobalAPI(Vue);\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\t// This is the elementDirective that handles <content>\n\t// transclusions. It relies on the raw content of an\n\t// instance being stored as `$options._content` during\n\t// the transclude phase.\n\t\n\t// We are exporting two versions, one for named and one\n\t// for unnamed, because the unnamed slots must be compiled\n\t// AFTER all named slots have selected their content. So\n\t// we need to give them different priorities in the compilation\n\t// process. (See #1965)\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t\n\t  bind: function bind() {\n\t    var host = this.vm;\n\t    var raw = host.$options._content;\n\t    if (!raw) {\n\t      this.fallback();\n\t      return;\n\t    }\n\t    var context = host._context;\n\t    var slotName = this.params && this.params.name;\n\t    if (!slotName) {\n\t      // Default slot\n\t      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n\t    } else {\n\t      // Named slot\n\t      var selector = '[slot=\"' + slotName + '\"]';\n\t      var nodes = raw.querySelectorAll(selector);\n\t      if (nodes.length) {\n\t        this.tryCompile(extractFragment(nodes, raw), context, host);\n\t      } else {\n\t        this.fallback();\n\t      }\n\t    }\n\t  },\n\t\n\t  tryCompile: function tryCompile(content, context, host) {\n\t    if (content.hasChildNodes()) {\n\t      this.compile(content, context, host);\n\t    } else {\n\t      this.fallback();\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar namedSlot = extend(extend({}, slot), {\n\t  priority: slot.priority + 1,\n\t  params: ['name']\n\t});\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @param {Element} parent\n\t * @param {Boolean} main\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent, main) {\n\t  var frag = document.createDocumentFragment();\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    // if this is the main outlet, we want to skip all\n\t    // previously selected nodes;\n\t    // otherwise, we want to mark the node as selected.\n\t    // clone the node so the original raw content remains\n\t    // intact. this ensures proper re-compilation in cases\n\t    // where the outlet is inside a conditional block\n\t    if (main && !node.__v_selected) {\n\t      append(node);\n\t    } else if (!main && node.parentNode === parent) {\n\t      node.__v_selected = true;\n\t      append(node);\n\t    }\n\t  }\n\t  return frag;\n\t\n\t  function append(node) {\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      node = parseTemplate(node);\n\t    }\n\t    node = cloneNode(node);\n\t    frag.appendChild(node);\n\t  }\n\t}\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  _namedSlot: namedSlot, // same as slot but with higher priority\n\t  partial: partial\n\t};\n\t\n\tVue.version = '1.0.16';\n\t\n\t/**\n\t * Vue and every constructor that extends Vue has an\n\t * associated options object, which can be accessed during\n\t * compilation steps as `this.constructor.options`.\n\t *\n\t * These can be seen as the default options of every\n\t * Vue instance.\n\t */\n\t\n\tVue.options = {\n\t  directives: publicDirectives,\n\t  elementDirectives: elementDirectives,\n\t  filters: filters,\n\t  transitions: {},\n\t  components: {},\n\t  partials: {},\n\t  replace: true\n\t};\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tif (devtools) {\n\t  devtools.emit('init', Vue);\n\t} else if (false) {\n\t  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t}\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.6 - 2015-12-23\n\t * http://hammerjs.github.io/\n\t *\n\t * Copyright (c) 2015 Jorik Tangelder;\n\t * Licensed under the  license */\n\t(function(window, document, exportName, undefined) {\n\t  'use strict';\n\t\n\tvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n\tvar TEST_ELEMENT = document.createElement('div');\n\t\n\tvar TYPE_FUNCTION = 'function';\n\t\n\tvar round = Math.round;\n\tvar abs = Math.abs;\n\tvar now = Date.now;\n\t\n\t/**\n\t * set a timeout with a given scope\n\t * @param {Function} fn\n\t * @param {Number} timeout\n\t * @param {Object} context\n\t * @returns {number}\n\t */\n\tfunction setTimeoutContext(fn, timeout, context) {\n\t    return setTimeout(bindFn(fn, context), timeout);\n\t}\n\t\n\t/**\n\t * if the argument is an array, we want to execute the fn on each entry\n\t * if it aint an array we don't want to do a thing.\n\t * this is used by all the methods that accept a single and array argument.\n\t * @param {*|Array} arg\n\t * @param {String} fn\n\t * @param {Object} [context]\n\t * @returns {Boolean}\n\t */\n\tfunction invokeArrayArg(arg, fn, context) {\n\t    if (Array.isArray(arg)) {\n\t        each(arg, context[fn], context);\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * walk objects and arrays\n\t * @param {Object} obj\n\t * @param {Function} iterator\n\t * @param {Object} context\n\t */\n\tfunction each(obj, iterator, context) {\n\t    var i;\n\t\n\t    if (!obj) {\n\t        return;\n\t    }\n\t\n\t    if (obj.forEach) {\n\t        obj.forEach(iterator, context);\n\t    } else if (obj.length !== undefined) {\n\t        i = 0;\n\t        while (i < obj.length) {\n\t            iterator.call(context, obj[i], i, obj);\n\t            i++;\n\t        }\n\t    } else {\n\t        for (i in obj) {\n\t            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * wrap a method with a deprecation warning and stack trace\n\t * @param {Function} method\n\t * @param {String} name\n\t * @param {String} message\n\t * @returns {Function} A new function wrapping the supplied method.\n\t */\n\tfunction deprecate(method, name, message) {\n\t    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n\t    return function() {\n\t        var e = new Error('get-stack-trace');\n\t        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n\t            .replace(/^\\s+at\\s+/gm, '')\n\t            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\t\n\t        var log = window.console && (window.console.warn || window.console.log);\n\t        if (log) {\n\t            log.call(window.console, deprecationMessage, stack);\n\t        }\n\t        return method.apply(this, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} target\n\t * @param {...Object} objects_to_assign\n\t * @returns {Object} target\n\t */\n\tvar assign;\n\tif (typeof Object.assign !== 'function') {\n\t    assign = function assign(target) {\n\t        if (target === undefined || target === null) {\n\t            throw new TypeError('Cannot convert undefined or null to object');\n\t        }\n\t\n\t        var output = Object(target);\n\t        for (var index = 1; index < arguments.length; index++) {\n\t            var source = arguments[index];\n\t            if (source !== undefined && source !== null) {\n\t                for (var nextKey in source) {\n\t                    if (source.hasOwnProperty(nextKey)) {\n\t                        output[nextKey] = source[nextKey];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return output;\n\t    };\n\t} else {\n\t    assign = Object.assign;\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @param {Boolean=false} [merge]\n\t * @returns {Object} dest\n\t */\n\tvar extend = deprecate(function extend(dest, src, merge) {\n\t    var keys = Object.keys(src);\n\t    var i = 0;\n\t    while (i < keys.length) {\n\t        if (!merge || (merge && dest[keys[i]] === undefined)) {\n\t            dest[keys[i]] = src[keys[i]];\n\t        }\n\t        i++;\n\t    }\n\t    return dest;\n\t}, 'extend', 'Use `assign`.');\n\t\n\t/**\n\t * merge the values from src in the dest.\n\t * means that properties that exist in dest will not be overwritten by src\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @returns {Object} dest\n\t */\n\tvar merge = deprecate(function merge(dest, src) {\n\t    return extend(dest, src, true);\n\t}, 'merge', 'Use `assign`.');\n\t\n\t/**\n\t * simple class inheritance\n\t * @param {Function} child\n\t * @param {Function} base\n\t * @param {Object} [properties]\n\t */\n\tfunction inherit(child, base, properties) {\n\t    var baseP = base.prototype,\n\t        childP;\n\t\n\t    childP = child.prototype = Object.create(baseP);\n\t    childP.constructor = child;\n\t    childP._super = baseP;\n\t\n\t    if (properties) {\n\t        assign(childP, properties);\n\t    }\n\t}\n\t\n\t/**\n\t * simple function bind\n\t * @param {Function} fn\n\t * @param {Object} context\n\t * @returns {Function}\n\t */\n\tfunction bindFn(fn, context) {\n\t    return function boundFn() {\n\t        return fn.apply(context, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * let a boolean value also be a function that must return a boolean\n\t * this first item in args will be used as the context\n\t * @param {Boolean|Function} val\n\t * @param {Array} [args]\n\t * @returns {Boolean}\n\t */\n\tfunction boolOrFn(val, args) {\n\t    if (typeof val == TYPE_FUNCTION) {\n\t        return val.apply(args ? args[0] || undefined : undefined, args);\n\t    }\n\t    return val;\n\t}\n\t\n\t/**\n\t * use the val2 when val1 is undefined\n\t * @param {*} val1\n\t * @param {*} val2\n\t * @returns {*}\n\t */\n\tfunction ifUndefined(val1, val2) {\n\t    return (val1 === undefined) ? val2 : val1;\n\t}\n\t\n\t/**\n\t * addEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction addEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.addEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * removeEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction removeEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.removeEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * find if a node is in the given parent\n\t * @method hasParent\n\t * @param {HTMLElement} node\n\t * @param {HTMLElement} parent\n\t * @return {Boolean} found\n\t */\n\tfunction hasParent(node, parent) {\n\t    while (node) {\n\t        if (node == parent) {\n\t            return true;\n\t        }\n\t        node = node.parentNode;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * small indexOf wrapper\n\t * @param {String} str\n\t * @param {String} find\n\t * @returns {Boolean} found\n\t */\n\tfunction inStr(str, find) {\n\t    return str.indexOf(find) > -1;\n\t}\n\t\n\t/**\n\t * split string on whitespace\n\t * @param {String} str\n\t * @returns {Array} words\n\t */\n\tfunction splitStr(str) {\n\t    return str.trim().split(/\\s+/g);\n\t}\n\t\n\t/**\n\t * find if a array contains the object using indexOf or a simple polyFill\n\t * @param {Array} src\n\t * @param {String} find\n\t * @param {String} [findByKey]\n\t * @return {Boolean|Number} false when not found, or the index\n\t */\n\tfunction inArray(src, find, findByKey) {\n\t    if (src.indexOf && !findByKey) {\n\t        return src.indexOf(find);\n\t    } else {\n\t        var i = 0;\n\t        while (i < src.length) {\n\t            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n\t                return i;\n\t            }\n\t            i++;\n\t        }\n\t        return -1;\n\t    }\n\t}\n\t\n\t/**\n\t * convert array-like objects to real arrays\n\t * @param {Object} obj\n\t * @returns {Array}\n\t */\n\tfunction toArray(obj) {\n\t    return Array.prototype.slice.call(obj, 0);\n\t}\n\t\n\t/**\n\t * unique array with objects based on a key (like 'id') or just by the array's value\n\t * @param {Array} src [{id:1},{id:2},{id:1}]\n\t * @param {String} [key]\n\t * @param {Boolean} [sort=False]\n\t * @returns {Array} [{id:1},{id:2}]\n\t */\n\tfunction uniqueArray(src, key, sort) {\n\t    var results = [];\n\t    var values = [];\n\t    var i = 0;\n\t\n\t    while (i < src.length) {\n\t        var val = key ? src[i][key] : src[i];\n\t        if (inArray(values, val) < 0) {\n\t            results.push(src[i]);\n\t        }\n\t        values[i] = val;\n\t        i++;\n\t    }\n\t\n\t    if (sort) {\n\t        if (!key) {\n\t            results = results.sort();\n\t        } else {\n\t            results = results.sort(function sortUniqueArray(a, b) {\n\t                return a[key] > b[key];\n\t            });\n\t        }\n\t    }\n\t\n\t    return results;\n\t}\n\t\n\t/**\n\t * get the prefixed property\n\t * @param {Object} obj\n\t * @param {String} property\n\t * @returns {String|Undefined} prefixed\n\t */\n\tfunction prefixed(obj, property) {\n\t    var prefix, prop;\n\t    var camelProp = property[0].toUpperCase() + property.slice(1);\n\t\n\t    var i = 0;\n\t    while (i < VENDOR_PREFIXES.length) {\n\t        prefix = VENDOR_PREFIXES[i];\n\t        prop = (prefix) ? prefix + camelProp : property;\n\t\n\t        if (prop in obj) {\n\t            return prop;\n\t        }\n\t        i++;\n\t    }\n\t    return undefined;\n\t}\n\t\n\t/**\n\t * get a unique id\n\t * @returns {number} uniqueId\n\t */\n\tvar _uniqueId = 1;\n\tfunction uniqueId() {\n\t    return _uniqueId++;\n\t}\n\t\n\t/**\n\t * get the window object of an element\n\t * @param {HTMLElement} element\n\t * @returns {DocumentView|Window}\n\t */\n\tfunction getWindowForElement(element) {\n\t    var doc = element.ownerDocument || element;\n\t    return (doc.defaultView || doc.parentWindow || window);\n\t}\n\t\n\tvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\t\n\tvar SUPPORT_TOUCH = ('ontouchstart' in window);\n\tvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n\tvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\t\n\tvar INPUT_TYPE_TOUCH = 'touch';\n\tvar INPUT_TYPE_PEN = 'pen';\n\tvar INPUT_TYPE_MOUSE = 'mouse';\n\tvar INPUT_TYPE_KINECT = 'kinect';\n\t\n\tvar COMPUTE_INTERVAL = 25;\n\t\n\tvar INPUT_START = 1;\n\tvar INPUT_MOVE = 2;\n\tvar INPUT_END = 4;\n\tvar INPUT_CANCEL = 8;\n\t\n\tvar DIRECTION_NONE = 1;\n\tvar DIRECTION_LEFT = 2;\n\tvar DIRECTION_RIGHT = 4;\n\tvar DIRECTION_UP = 8;\n\tvar DIRECTION_DOWN = 16;\n\t\n\tvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n\tvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n\tvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\t\n\tvar PROPS_XY = ['x', 'y'];\n\tvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\t\n\t/**\n\t * create new input type manager\n\t * @param {Manager} manager\n\t * @param {Function} callback\n\t * @returns {Input}\n\t * @constructor\n\t */\n\tfunction Input(manager, callback) {\n\t    var self = this;\n\t    this.manager = manager;\n\t    this.callback = callback;\n\t    this.element = manager.element;\n\t    this.target = manager.options.inputTarget;\n\t\n\t    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n\t    // so when disabled the input events are completely bypassed.\n\t    this.domHandler = function(ev) {\n\t        if (boolOrFn(manager.options.enable, [manager])) {\n\t            self.handler(ev);\n\t        }\n\t    };\n\t\n\t    this.init();\n\t\n\t}\n\t\n\tInput.prototype = {\n\t    /**\n\t     * should handle the inputEvent data and trigger the callback\n\t     * @virtual\n\t     */\n\t    handler: function() { },\n\t\n\t    /**\n\t     * bind the events\n\t     */\n\t    init: function() {\n\t        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    },\n\t\n\t    /**\n\t     * unbind the events\n\t     */\n\t    destroy: function() {\n\t        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    }\n\t};\n\t\n\t/**\n\t * create new input type manager\n\t * called by the Manager constructor\n\t * @param {Hammer} manager\n\t * @returns {Input}\n\t */\n\tfunction createInputInstance(manager) {\n\t    var Type;\n\t    var inputClass = manager.options.inputClass;\n\t\n\t    if (inputClass) {\n\t        Type = inputClass;\n\t    } else if (SUPPORT_POINTER_EVENTS) {\n\t        Type = PointerEventInput;\n\t    } else if (SUPPORT_ONLY_TOUCH) {\n\t        Type = TouchInput;\n\t    } else if (!SUPPORT_TOUCH) {\n\t        Type = MouseInput;\n\t    } else {\n\t        Type = TouchMouseInput;\n\t    }\n\t    return new (Type)(manager, inputHandler);\n\t}\n\t\n\t/**\n\t * handle input events\n\t * @param {Manager} manager\n\t * @param {String} eventType\n\t * @param {Object} input\n\t */\n\tfunction inputHandler(manager, eventType, input) {\n\t    var pointersLen = input.pointers.length;\n\t    var changedPointersLen = input.changedPointers.length;\n\t    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n\t    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\t\n\t    input.isFirst = !!isFirst;\n\t    input.isFinal = !!isFinal;\n\t\n\t    if (isFirst) {\n\t        manager.session = {};\n\t    }\n\t\n\t    // source event is the normalized value of the domEvents\n\t    // like 'touchstart, mouseup, pointerdown'\n\t    input.eventType = eventType;\n\t\n\t    // compute scale, rotation etc\n\t    computeInputData(manager, input);\n\t\n\t    // emit secret event\n\t    manager.emit('hammer.input', input);\n\t\n\t    manager.recognize(input);\n\t    manager.session.prevInput = input;\n\t}\n\t\n\t/**\n\t * extend the data with some usable properties like scale, rotate, velocity etc\n\t * @param {Object} manager\n\t * @param {Object} input\n\t */\n\tfunction computeInputData(manager, input) {\n\t    var session = manager.session;\n\t    var pointers = input.pointers;\n\t    var pointersLength = pointers.length;\n\t\n\t    // store the first input to calculate the distance and direction\n\t    if (!session.firstInput) {\n\t        session.firstInput = simpleCloneInputData(input);\n\t    }\n\t\n\t    // to compute scale and rotation we need to store the multiple touches\n\t    if (pointersLength > 1 && !session.firstMultiple) {\n\t        session.firstMultiple = simpleCloneInputData(input);\n\t    } else if (pointersLength === 1) {\n\t        session.firstMultiple = false;\n\t    }\n\t\n\t    var firstInput = session.firstInput;\n\t    var firstMultiple = session.firstMultiple;\n\t    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\t\n\t    var center = input.center = getCenter(pointers);\n\t    input.timeStamp = now();\n\t    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\t\n\t    input.angle = getAngle(offsetCenter, center);\n\t    input.distance = getDistance(offsetCenter, center);\n\t\n\t    computeDeltaXY(session, input);\n\t    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\t\n\t    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n\t    input.overallVelocityX = overallVelocity.x;\n\t    input.overallVelocityY = overallVelocity.y;\n\t    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\t\n\t    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n\t    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\t\n\t    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n\t        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\t\n\t    computeIntervalInputData(session, input);\n\t\n\t    // find the correct target\n\t    var target = manager.element;\n\t    if (hasParent(input.srcEvent.target, target)) {\n\t        target = input.srcEvent.target;\n\t    }\n\t    input.target = target;\n\t}\n\t\n\tfunction computeDeltaXY(session, input) {\n\t    var center = input.center;\n\t    var offset = session.offsetDelta || {};\n\t    var prevDelta = session.prevDelta || {};\n\t    var prevInput = session.prevInput || {};\n\t\n\t    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n\t        prevDelta = session.prevDelta = {\n\t            x: prevInput.deltaX || 0,\n\t            y: prevInput.deltaY || 0\n\t        };\n\t\n\t        offset = session.offsetDelta = {\n\t            x: center.x,\n\t            y: center.y\n\t        };\n\t    }\n\t\n\t    input.deltaX = prevDelta.x + (center.x - offset.x);\n\t    input.deltaY = prevDelta.y + (center.y - offset.y);\n\t}\n\t\n\t/**\n\t * velocity is calculated every x ms\n\t * @param {Object} session\n\t * @param {Object} input\n\t */\n\tfunction computeIntervalInputData(session, input) {\n\t    var last = session.lastInterval || input,\n\t        deltaTime = input.timeStamp - last.timeStamp,\n\t        velocity, velocityX, velocityY, direction;\n\t\n\t    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n\t        var deltaX = input.deltaX - last.deltaX;\n\t        var deltaY = input.deltaY - last.deltaY;\n\t\n\t        var v = getVelocity(deltaTime, deltaX, deltaY);\n\t        velocityX = v.x;\n\t        velocityY = v.y;\n\t        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n\t        direction = getDirection(deltaX, deltaY);\n\t\n\t        session.lastInterval = input;\n\t    } else {\n\t        // use latest velocity info if it doesn't overtake a minimum period\n\t        velocity = last.velocity;\n\t        velocityX = last.velocityX;\n\t        velocityY = last.velocityY;\n\t        direction = last.direction;\n\t    }\n\t\n\t    input.velocity = velocity;\n\t    input.velocityX = velocityX;\n\t    input.velocityY = velocityY;\n\t    input.direction = direction;\n\t}\n\t\n\t/**\n\t * create a simple clone from the input used for storage of firstInput and firstMultiple\n\t * @param {Object} input\n\t * @returns {Object} clonedInputData\n\t */\n\tfunction simpleCloneInputData(input) {\n\t    // make a simple copy of the pointers because we will get a reference if we don't\n\t    // we only need clientXY for the calculations\n\t    var pointers = [];\n\t    var i = 0;\n\t    while (i < input.pointers.length) {\n\t        pointers[i] = {\n\t            clientX: round(input.pointers[i].clientX),\n\t            clientY: round(input.pointers[i].clientY)\n\t        };\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        timeStamp: now(),\n\t        pointers: pointers,\n\t        center: getCenter(pointers),\n\t        deltaX: input.deltaX,\n\t        deltaY: input.deltaY\n\t    };\n\t}\n\t\n\t/**\n\t * get the center of all the pointers\n\t * @param {Array} pointers\n\t * @return {Object} center contains `x` and `y` properties\n\t */\n\tfunction getCenter(pointers) {\n\t    var pointersLength = pointers.length;\n\t\n\t    // no need to loop when only one touch\n\t    if (pointersLength === 1) {\n\t        return {\n\t            x: round(pointers[0].clientX),\n\t            y: round(pointers[0].clientY)\n\t        };\n\t    }\n\t\n\t    var x = 0, y = 0, i = 0;\n\t    while (i < pointersLength) {\n\t        x += pointers[i].clientX;\n\t        y += pointers[i].clientY;\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        x: round(x / pointersLength),\n\t        y: round(y / pointersLength)\n\t    };\n\t}\n\t\n\t/**\n\t * calculate the velocity between two points. unit is in px per ms.\n\t * @param {Number} deltaTime\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Object} velocity `x` and `y`\n\t */\n\tfunction getVelocity(deltaTime, x, y) {\n\t    return {\n\t        x: x / deltaTime || 0,\n\t        y: y / deltaTime || 0\n\t    };\n\t}\n\t\n\t/**\n\t * get the direction between two points\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Number} direction\n\t */\n\tfunction getDirection(x, y) {\n\t    if (x === y) {\n\t        return DIRECTION_NONE;\n\t    }\n\t\n\t    if (abs(x) >= abs(y)) {\n\t        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t    }\n\t    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n\t}\n\t\n\t/**\n\t * calculate the absolute distance between two points\n\t * @param {Object} p1 {x, y}\n\t * @param {Object} p2 {x, y}\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} distance\n\t */\n\tfunction getDistance(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t\n\t    return Math.sqrt((x * x) + (y * y));\n\t}\n\t\n\t/**\n\t * calculate the angle between two coordinates\n\t * @param {Object} p1\n\t * @param {Object} p2\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} angle\n\t */\n\tfunction getAngle(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t    return Math.atan2(y, x) * 180 / Math.PI;\n\t}\n\t\n\t/**\n\t * calculate the rotation degrees between two pointersets\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} rotation\n\t */\n\tfunction getRotation(start, end) {\n\t    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n\t}\n\t\n\t/**\n\t * calculate the scale factor between two pointersets\n\t * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} scale\n\t */\n\tfunction getScale(start, end) {\n\t    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n\t}\n\t\n\tvar MOUSE_INPUT_MAP = {\n\t    mousedown: INPUT_START,\n\t    mousemove: INPUT_MOVE,\n\t    mouseup: INPUT_END\n\t};\n\t\n\tvar MOUSE_ELEMENT_EVENTS = 'mousedown';\n\tvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\t\n\t/**\n\t * Mouse events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction MouseInput() {\n\t    this.evEl = MOUSE_ELEMENT_EVENTS;\n\t    this.evWin = MOUSE_WINDOW_EVENTS;\n\t\n\t    this.allow = true; // used by Input.TouchMouse to disable mouse events\n\t    this.pressed = false; // mousedown state\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(MouseInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function MEhandler(ev) {\n\t        var eventType = MOUSE_INPUT_MAP[ev.type];\n\t\n\t        // on start we want to have the left mouse button down\n\t        if (eventType & INPUT_START && ev.button === 0) {\n\t            this.pressed = true;\n\t        }\n\t\n\t        if (eventType & INPUT_MOVE && ev.which !== 1) {\n\t            eventType = INPUT_END;\n\t        }\n\t\n\t        // mouse must be down, and mouse events are allowed (see the TouchMouse input)\n\t        if (!this.pressed || !this.allow) {\n\t            return;\n\t        }\n\t\n\t        if (eventType & INPUT_END) {\n\t            this.pressed = false;\n\t        }\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: [ev],\n\t            changedPointers: [ev],\n\t            pointerType: INPUT_TYPE_MOUSE,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\tvar POINTER_INPUT_MAP = {\n\t    pointerdown: INPUT_START,\n\t    pointermove: INPUT_MOVE,\n\t    pointerup: INPUT_END,\n\t    pointercancel: INPUT_CANCEL,\n\t    pointerout: INPUT_CANCEL\n\t};\n\t\n\t// in IE10 the pointer types is defined as an enum\n\tvar IE10_POINTER_TYPE_ENUM = {\n\t    2: INPUT_TYPE_TOUCH,\n\t    3: INPUT_TYPE_PEN,\n\t    4: INPUT_TYPE_MOUSE,\n\t    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\t};\n\t\n\tvar POINTER_ELEMENT_EVENTS = 'pointerdown';\n\tvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\t\n\t// IE10 has prefixed support, and case-sensitive\n\tif (window.MSPointerEvent && !window.PointerEvent) {\n\t    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n\t    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n\t}\n\t\n\t/**\n\t * Pointer events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction PointerEventInput() {\n\t    this.evEl = POINTER_ELEMENT_EVENTS;\n\t    this.evWin = POINTER_WINDOW_EVENTS;\n\t\n\t    Input.apply(this, arguments);\n\t\n\t    this.store = (this.manager.session.pointerEvents = []);\n\t}\n\t\n\tinherit(PointerEventInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function PEhandler(ev) {\n\t        var store = this.store;\n\t        var removePointer = false;\n\t\n\t        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n\t        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n\t        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\t\n\t        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\t\n\t        // get index of the event in the store\n\t        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\t\n\t        // start and mouse must be down\n\t        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n\t            if (storeIndex < 0) {\n\t                store.push(ev);\n\t                storeIndex = store.length - 1;\n\t            }\n\t        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n\t            removePointer = true;\n\t        }\n\t\n\t        // it not found, so the pointer hasn't been down (so it's probably a hover)\n\t        if (storeIndex < 0) {\n\t            return;\n\t        }\n\t\n\t        // update the event in the store\n\t        store[storeIndex] = ev;\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: store,\n\t            changedPointers: [ev],\n\t            pointerType: pointerType,\n\t            srcEvent: ev\n\t        });\n\t\n\t        if (removePointer) {\n\t            // remove from the store\n\t            store.splice(storeIndex, 1);\n\t        }\n\t    }\n\t});\n\t\n\tvar SINGLE_TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n\tvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction SingleTouchInput() {\n\t    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n\t    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n\t    this.started = false;\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(SingleTouchInput, Input, {\n\t    handler: function TEhandler(ev) {\n\t        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\t\n\t        // should we handle the touch events?\n\t        if (type === INPUT_START) {\n\t            this.started = true;\n\t        }\n\t\n\t        if (!this.started) {\n\t            return;\n\t        }\n\t\n\t        var touches = normalizeSingleTouches.call(this, ev, type);\n\t\n\t        // when done, reset the started state\n\t        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n\t            this.started = false;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction normalizeSingleTouches(ev, type) {\n\t    var all = toArray(ev.touches);\n\t    var changed = toArray(ev.changedTouches);\n\t\n\t    if (type & (INPUT_END | INPUT_CANCEL)) {\n\t        all = uniqueArray(all.concat(changed), 'identifier', true);\n\t    }\n\t\n\t    return [all, changed];\n\t}\n\t\n\tvar TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Multi-user touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction TouchInput() {\n\t    this.evTarget = TOUCH_TARGET_EVENTS;\n\t    this.targetIds = {};\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(TouchInput, Input, {\n\t    handler: function MTEhandler(ev) {\n\t        var type = TOUCH_INPUT_MAP[ev.type];\n\t        var touches = getTouches.call(this, ev, type);\n\t        if (!touches) {\n\t            return;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction getTouches(ev, type) {\n\t    var allTouches = toArray(ev.touches);\n\t    var targetIds = this.targetIds;\n\t\n\t    // when there is only one touch, the process can be simplified\n\t    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n\t        targetIds[allTouches[0].identifier] = true;\n\t        return [allTouches, allTouches];\n\t    }\n\t\n\t    var i,\n\t        targetTouches,\n\t        changedTouches = toArray(ev.changedTouches),\n\t        changedTargetTouches = [],\n\t        target = this.target;\n\t\n\t    // get target touches from touches\n\t    targetTouches = allTouches.filter(function(touch) {\n\t        return hasParent(touch.target, target);\n\t    });\n\t\n\t    // collect touches\n\t    if (type === INPUT_START) {\n\t        i = 0;\n\t        while (i < targetTouches.length) {\n\t            targetIds[targetTouches[i].identifier] = true;\n\t            i++;\n\t        }\n\t    }\n\t\n\t    // filter changed touches to only contain touches that exist in the collected target ids\n\t    i = 0;\n\t    while (i < changedTouches.length) {\n\t        if (targetIds[changedTouches[i].identifier]) {\n\t            changedTargetTouches.push(changedTouches[i]);\n\t        }\n\t\n\t        // cleanup removed touches\n\t        if (type & (INPUT_END | INPUT_CANCEL)) {\n\t            delete targetIds[changedTouches[i].identifier];\n\t        }\n\t        i++;\n\t    }\n\t\n\t    if (!changedTargetTouches.length) {\n\t        return;\n\t    }\n\t\n\t    return [\n\t        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n\t        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n\t        changedTargetTouches\n\t    ];\n\t}\n\t\n\t/**\n\t * Combined touch and mouse input\n\t *\n\t * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n\t * This because touch devices also emit mouse events while doing a touch.\n\t *\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction TouchMouseInput() {\n\t    Input.apply(this, arguments);\n\t\n\t    var handler = bindFn(this.handler, this);\n\t    this.touch = new TouchInput(this.manager, handler);\n\t    this.mouse = new MouseInput(this.manager, handler);\n\t}\n\t\n\tinherit(TouchMouseInput, Input, {\n\t    /**\n\t     * handle mouse and touch events\n\t     * @param {Hammer} manager\n\t     * @param {String} inputEvent\n\t     * @param {Object} inputData\n\t     */\n\t    handler: function TMEhandler(manager, inputEvent, inputData) {\n\t        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n\t            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\t\n\t        // when we're in a touch event, so  block all upcoming mouse events\n\t        // most mobile browser also emit mouseevents, right after touchstart\n\t        if (isTouch) {\n\t            this.mouse.allow = false;\n\t        } else if (isMouse && !this.mouse.allow) {\n\t            return;\n\t        }\n\t\n\t        // reset the allowMouse when we're done\n\t        if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n\t            this.mouse.allow = true;\n\t        }\n\t\n\t        this.callback(manager, inputEvent, inputData);\n\t    },\n\t\n\t    /**\n\t     * remove the event listeners\n\t     */\n\t    destroy: function destroy() {\n\t        this.touch.destroy();\n\t        this.mouse.destroy();\n\t    }\n\t});\n\t\n\tvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n\tvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\t\n\t// magical touchAction value\n\tvar TOUCH_ACTION_COMPUTE = 'compute';\n\tvar TOUCH_ACTION_AUTO = 'auto';\n\tvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\tvar TOUCH_ACTION_NONE = 'none';\n\tvar TOUCH_ACTION_PAN_X = 'pan-x';\n\tvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\t\n\t/**\n\t * Touch Action\n\t * sets the touchAction property or uses the js alternative\n\t * @param {Manager} manager\n\t * @param {String} value\n\t * @constructor\n\t */\n\tfunction TouchAction(manager, value) {\n\t    this.manager = manager;\n\t    this.set(value);\n\t}\n\t\n\tTouchAction.prototype = {\n\t    /**\n\t     * set the touchAction value on the element or enable the polyfill\n\t     * @param {String} value\n\t     */\n\t    set: function(value) {\n\t        // find out the touch-action by the event handlers\n\t        if (value == TOUCH_ACTION_COMPUTE) {\n\t            value = this.compute();\n\t        }\n\t\n\t        if (NATIVE_TOUCH_ACTION && this.manager.element.style) {\n\t            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n\t        }\n\t        this.actions = value.toLowerCase().trim();\n\t    },\n\t\n\t    /**\n\t     * just re-set the touchAction value\n\t     */\n\t    update: function() {\n\t        this.set(this.manager.options.touchAction);\n\t    },\n\t\n\t    /**\n\t     * compute the value for the touchAction property based on the recognizer's settings\n\t     * @returns {String} value\n\t     */\n\t    compute: function() {\n\t        var actions = [];\n\t        each(this.manager.recognizers, function(recognizer) {\n\t            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n\t                actions = actions.concat(recognizer.getTouchAction());\n\t            }\n\t        });\n\t        return cleanTouchActions(actions.join(' '));\n\t    },\n\t\n\t    /**\n\t     * this method is called on each input cycle and provides the preventing of the browser behavior\n\t     * @param {Object} input\n\t     */\n\t    preventDefaults: function(input) {\n\t        // not needed with native support for the touchAction property\n\t        if (NATIVE_TOUCH_ACTION) {\n\t            return;\n\t        }\n\t\n\t        var srcEvent = input.srcEvent;\n\t        var direction = input.offsetDirection;\n\t\n\t        // if the touch action did prevented once this session\n\t        if (this.manager.session.prevented) {\n\t            srcEvent.preventDefault();\n\t            return;\n\t        }\n\t\n\t        var actions = this.actions;\n\t        var hasNone = inStr(actions, TOUCH_ACTION_NONE);\n\t        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\t        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\t\n\t        if (hasNone) {\n\t            //do not prevent defaults if this is a tap gesture\n\t\n\t            var isTapPointer = input.pointers.length === 1;\n\t            var isTapMovement = input.distance < 2;\n\t            var isTapTouchTime = input.deltaTime < 250;\n\t\n\t            if (isTapPointer && isTapMovement && isTapTouchTime) {\n\t                return;\n\t            }\n\t        }\n\t\n\t        if (hasPanX && hasPanY) {\n\t            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n\t            return;\n\t        }\n\t\n\t        if (hasNone ||\n\t            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n\t            (hasPanX && direction & DIRECTION_VERTICAL)) {\n\t            return this.preventSrc(srcEvent);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n\t     * @param {Object} srcEvent\n\t     */\n\t    preventSrc: function(srcEvent) {\n\t        this.manager.session.prevented = true;\n\t        srcEvent.preventDefault();\n\t    }\n\t};\n\t\n\t/**\n\t * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n\t * @param {String} actions\n\t * @returns {*}\n\t */\n\tfunction cleanTouchActions(actions) {\n\t    // none\n\t    if (inStr(actions, TOUCH_ACTION_NONE)) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\t    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\t\n\t    // if both pan-x and pan-y are set (different recognizers\n\t    // for different directions, e.g. horizontal pan but vertical swipe?)\n\t    // we need none (as otherwise with pan-x pan-y combined none of these\n\t    // recognizers will work, since the browser would handle all panning\n\t    if (hasPanX && hasPanY) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    // pan-x OR pan-y\n\t    if (hasPanX || hasPanY) {\n\t        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n\t    }\n\t\n\t    // manipulation\n\t    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n\t        return TOUCH_ACTION_MANIPULATION;\n\t    }\n\t\n\t    return TOUCH_ACTION_AUTO;\n\t}\n\t\n\t/**\n\t * Recognizer flow explained; *\n\t * All recognizers have the initial state of POSSIBLE when a input session starts.\n\t * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n\t * Example session for mouse-input: mousedown -> mousemove -> mouseup\n\t *\n\t * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n\t * which determines with state it should be.\n\t *\n\t * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n\t * POSSIBLE to give it another change on the next cycle.\n\t *\n\t *               Possible\n\t *                  |\n\t *            +-----+---------------+\n\t *            |                     |\n\t *      +-----+-----+               |\n\t *      |           |               |\n\t *   Failed      Cancelled          |\n\t *                          +-------+------+\n\t *                          |              |\n\t *                      Recognized       Began\n\t *                                         |\n\t *                                      Changed\n\t *                                         |\n\t *                                  Ended/Recognized\n\t */\n\tvar STATE_POSSIBLE = 1;\n\tvar STATE_BEGAN = 2;\n\tvar STATE_CHANGED = 4;\n\tvar STATE_ENDED = 8;\n\tvar STATE_RECOGNIZED = STATE_ENDED;\n\tvar STATE_CANCELLED = 16;\n\tvar STATE_FAILED = 32;\n\t\n\t/**\n\t * Recognizer\n\t * Every recognizer needs to extend from this class.\n\t * @constructor\n\t * @param {Object} options\n\t */\n\tfunction Recognizer(options) {\n\t    this.options = assign({}, this.defaults, options || {});\n\t\n\t    this.id = uniqueId();\n\t\n\t    this.manager = null;\n\t\n\t    // default is enable true\n\t    this.options.enable = ifUndefined(this.options.enable, true);\n\t\n\t    this.state = STATE_POSSIBLE;\n\t\n\t    this.simultaneous = {};\n\t    this.requireFail = [];\n\t}\n\t\n\tRecognizer.prototype = {\n\t    /**\n\t     * @virtual\n\t     * @type {Object}\n\t     */\n\t    defaults: {},\n\t\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @return {Recognizer}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // also update the touchAction, in case something changed about the directions/enabled state\n\t        this.manager && this.manager.touchAction.update();\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognize simultaneous with an other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    recognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        var simultaneous = this.simultaneous;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (!simultaneous[otherRecognizer.id]) {\n\t            simultaneous[otherRecognizer.id] = otherRecognizer;\n\t            otherRecognizer.recognizeWith(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRecognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        delete this.simultaneous[otherRecognizer.id];\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognizer can only run when an other is failing\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    requireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        var requireFail = this.requireFail;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (inArray(requireFail, otherRecognizer) === -1) {\n\t            requireFail.push(otherRecognizer);\n\t            otherRecognizer.requireFailure(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the requireFailure link. it does not remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRequireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        var index = inArray(this.requireFail, otherRecognizer);\n\t        if (index > -1) {\n\t            this.requireFail.splice(index, 1);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * has require failures boolean\n\t     * @returns {boolean}\n\t     */\n\t    hasRequireFailures: function() {\n\t        return this.requireFail.length > 0;\n\t    },\n\t\n\t    /**\n\t     * if the recognizer can recognize simultaneous with an other recognizer\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Boolean}\n\t     */\n\t    canRecognizeWith: function(otherRecognizer) {\n\t        return !!this.simultaneous[otherRecognizer.id];\n\t    },\n\t\n\t    /**\n\t     * You should use `tryEmit` instead of `emit` directly to check\n\t     * that all the needed recognizers has failed before emitting.\n\t     * @param {Object} input\n\t     */\n\t    emit: function(input) {\n\t        var self = this;\n\t        var state = this.state;\n\t\n\t        function emit(event) {\n\t            self.manager.emit(event, input);\n\t        }\n\t\n\t        // 'panstart' and 'panmove'\n\t        if (state < STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t\n\t        emit(self.options.event); // simple 'eventName' events\n\t\n\t        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n\t            emit(input.additionalEvent);\n\t        }\n\t\n\t        // panend and pancancel\n\t        if (state >= STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Check that all the require failure recognizers has failed,\n\t     * if true, it emits a gesture event,\n\t     * otherwise, setup the state to FAILED.\n\t     * @param {Object} input\n\t     */\n\t    tryEmit: function(input) {\n\t        if (this.canEmit()) {\n\t            return this.emit(input);\n\t        }\n\t        // it's failing anyway\n\t        this.state = STATE_FAILED;\n\t    },\n\t\n\t    /**\n\t     * can we emit?\n\t     * @returns {boolean}\n\t     */\n\t    canEmit: function() {\n\t        var i = 0;\n\t        while (i < this.requireFail.length) {\n\t            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n\t                return false;\n\t            }\n\t            i++;\n\t        }\n\t        return true;\n\t    },\n\t\n\t    /**\n\t     * update the recognizer\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        // make a new copy of the inputData\n\t        // so we can change the inputData without messing up the other recognizers\n\t        var inputDataClone = assign({}, inputData);\n\t\n\t        // is is enabled and allow recognizing?\n\t        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n\t            this.reset();\n\t            this.state = STATE_FAILED;\n\t            return;\n\t        }\n\t\n\t        // reset when we've reached the end\n\t        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n\t            this.state = STATE_POSSIBLE;\n\t        }\n\t\n\t        this.state = this.process(inputDataClone);\n\t\n\t        // the recognizer has recognized a gesture\n\t        // so trigger an event\n\t        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n\t            this.tryEmit(inputDataClone);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * return the state of the recognizer\n\t     * the actual recognizing happens in this method\n\t     * @virtual\n\t     * @param {Object} inputData\n\t     * @returns {Const} STATE\n\t     */\n\t    process: function(inputData) { }, // jshint ignore:line\n\t\n\t    /**\n\t     * return the preferred touch-action\n\t     * @virtual\n\t     * @returns {Array}\n\t     */\n\t    getTouchAction: function() { },\n\t\n\t    /**\n\t     * called when the gesture isn't allowed to recognize\n\t     * like when another is being recognized or it is disabled\n\t     * @virtual\n\t     */\n\t    reset: function() { }\n\t};\n\t\n\t/**\n\t * get a usable string, used as event postfix\n\t * @param {Const} state\n\t * @returns {String} state\n\t */\n\tfunction stateStr(state) {\n\t    if (state & STATE_CANCELLED) {\n\t        return 'cancel';\n\t    } else if (state & STATE_ENDED) {\n\t        return 'end';\n\t    } else if (state & STATE_CHANGED) {\n\t        return 'move';\n\t    } else if (state & STATE_BEGAN) {\n\t        return 'start';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * direction cons to string\n\t * @param {Const} direction\n\t * @returns {String}\n\t */\n\tfunction directionStr(direction) {\n\t    if (direction == DIRECTION_DOWN) {\n\t        return 'down';\n\t    } else if (direction == DIRECTION_UP) {\n\t        return 'up';\n\t    } else if (direction == DIRECTION_LEFT) {\n\t        return 'left';\n\t    } else if (direction == DIRECTION_RIGHT) {\n\t        return 'right';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * get a recognizer by name if it is bound to a manager\n\t * @param {Recognizer|String} otherRecognizer\n\t * @param {Recognizer} recognizer\n\t * @returns {Recognizer}\n\t */\n\tfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n\t    var manager = recognizer.manager;\n\t    if (manager) {\n\t        return manager.get(otherRecognizer);\n\t    }\n\t    return otherRecognizer;\n\t}\n\t\n\t/**\n\t * This recognizer is just used as a base for the simple attribute recognizers.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction AttrRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(AttrRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof AttrRecognizer\n\t     */\n\t    defaults: {\n\t        /**\n\t         * @type {Number}\n\t         * @default 1\n\t         */\n\t        pointers: 1\n\t    },\n\t\n\t    /**\n\t     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {Boolean} recognized\n\t     */\n\t    attrTest: function(input) {\n\t        var optionPointers = this.options.pointers;\n\t        return optionPointers === 0 || input.pointers.length === optionPointers;\n\t    },\n\t\n\t    /**\n\t     * Process the input and return the state for the recognizer\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {*} State\n\t     */\n\t    process: function(input) {\n\t        var state = this.state;\n\t        var eventType = input.eventType;\n\t\n\t        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n\t        var isValid = this.attrTest(input);\n\t\n\t        // on cancel input and we've recognized before, return STATE_CANCELLED\n\t        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n\t            return state | STATE_CANCELLED;\n\t        } else if (isRecognized || isValid) {\n\t            if (eventType & INPUT_END) {\n\t                return state | STATE_ENDED;\n\t            } else if (!(state & STATE_BEGAN)) {\n\t                return STATE_BEGAN;\n\t            }\n\t            return state | STATE_CHANGED;\n\t        }\n\t        return STATE_FAILED;\n\t    }\n\t});\n\t\n\t/**\n\t * Pan\n\t * Recognized when the pointer is down and moved in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PanRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t\n\t    this.pX = null;\n\t    this.pY = null;\n\t}\n\t\n\tinherit(PanRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PanRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pan',\n\t        threshold: 10,\n\t        pointers: 1,\n\t        direction: DIRECTION_ALL\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        var direction = this.options.direction;\n\t        var actions = [];\n\t        if (direction & DIRECTION_HORIZONTAL) {\n\t            actions.push(TOUCH_ACTION_PAN_Y);\n\t        }\n\t        if (direction & DIRECTION_VERTICAL) {\n\t            actions.push(TOUCH_ACTION_PAN_X);\n\t        }\n\t        return actions;\n\t    },\n\t\n\t    directionTest: function(input) {\n\t        var options = this.options;\n\t        var hasMoved = true;\n\t        var distance = input.distance;\n\t        var direction = input.direction;\n\t        var x = input.deltaX;\n\t        var y = input.deltaY;\n\t\n\t        // lock to axis?\n\t        if (!(direction & options.direction)) {\n\t            if (options.direction & DIRECTION_HORIZONTAL) {\n\t                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t                hasMoved = x != this.pX;\n\t                distance = Math.abs(input.deltaX);\n\t            } else {\n\t                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n\t                hasMoved = y != this.pY;\n\t                distance = Math.abs(input.deltaY);\n\t            }\n\t        }\n\t        input.direction = direction;\n\t        return hasMoved && distance > options.threshold && direction & options.direction;\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n\t            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n\t    },\n\t\n\t    emit: function(input) {\n\t\n\t        this.pX = input.deltaX;\n\t        this.pY = input.deltaY;\n\t\n\t        var direction = directionStr(input.direction);\n\t\n\t        if (direction) {\n\t            input.additionalEvent = this.options.event + direction;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Pinch\n\t * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PinchRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(PinchRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pinch',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (input.scale !== 1) {\n\t            var inOut = input.scale < 1 ? 'in' : 'out';\n\t            input.additionalEvent = this.options.event + inOut;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Press\n\t * Recognized when the pointer is down for x ms without any movement.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction PressRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t}\n\t\n\tinherit(PressRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PressRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'press',\n\t        pointers: 1,\n\t        time: 251, // minimal time of the pointer to be pressed\n\t        threshold: 9 // a minimal movement is ok, but keep it low\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_AUTO];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTime = input.deltaTime > options.time;\n\t\n\t        this._input = input;\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n\t            this.reset();\n\t        } else if (input.eventType & INPUT_START) {\n\t            this.reset();\n\t            this._timer = setTimeoutContext(function() {\n\t                this.state = STATE_RECOGNIZED;\n\t                this.tryEmit();\n\t            }, options.time, this);\n\t        } else if (input.eventType & INPUT_END) {\n\t            return STATE_RECOGNIZED;\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (this.state !== STATE_RECOGNIZED) {\n\t            return;\n\t        }\n\t\n\t        if (input && (input.eventType & INPUT_END)) {\n\t            this.manager.emit(this.options.event + 'up', input);\n\t        } else {\n\t            this._input.timeStamp = now();\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Rotate\n\t * Recognized when two or more pointer are moving in a circular motion.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction RotateRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(RotateRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof RotateRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'rotate',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n\t    }\n\t});\n\t\n\t/**\n\t * Swipe\n\t * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction SwipeRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(SwipeRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof SwipeRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'swipe',\n\t        threshold: 10,\n\t        velocity: 0.3,\n\t        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n\t        pointers: 1\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return PanRecognizer.prototype.getTouchAction.call(this);\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        var direction = this.options.direction;\n\t        var velocity;\n\t\n\t        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n\t            velocity = input.overallVelocity;\n\t        } else if (direction & DIRECTION_HORIZONTAL) {\n\t            velocity = input.overallVelocityX;\n\t        } else if (direction & DIRECTION_VERTICAL) {\n\t            velocity = input.overallVelocityY;\n\t        }\n\t\n\t        return this._super.attrTest.call(this, input) &&\n\t            direction & input.offsetDirection &&\n\t            input.distance > this.options.threshold &&\n\t            input.maxPointers == this.options.pointers &&\n\t            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n\t    },\n\t\n\t    emit: function(input) {\n\t        var direction = directionStr(input.offsetDirection);\n\t        if (direction) {\n\t            this.manager.emit(this.options.event + direction, input);\n\t        }\n\t\n\t        this.manager.emit(this.options.event, input);\n\t    }\n\t});\n\t\n\t/**\n\t * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n\t * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n\t * a single tap.\n\t *\n\t * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n\t * multi-taps being recognized.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction TapRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    // previous time and center,\n\t    // used for tap counting\n\t    this.pTime = false;\n\t    this.pCenter = false;\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t    this.count = 0;\n\t}\n\t\n\tinherit(TapRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'tap',\n\t        pointers: 1,\n\t        taps: 1,\n\t        interval: 300, // max time between the multi-tap taps\n\t        time: 250, // max time of the pointer to be down (like finger on the screen)\n\t        threshold: 9, // a minimal movement is ok, but keep it low\n\t        posThreshold: 10 // a multi-tap can be a bit off the initial position\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_MANIPULATION];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTouchTime = input.deltaTime < options.time;\n\t\n\t        this.reset();\n\t\n\t        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n\t            return this.failTimeout();\n\t        }\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (validMovement && validTouchTime && validPointers) {\n\t            if (input.eventType != INPUT_END) {\n\t                return this.failTimeout();\n\t            }\n\t\n\t            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n\t            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\t\n\t            this.pTime = input.timeStamp;\n\t            this.pCenter = input.center;\n\t\n\t            if (!validMultiTap || !validInterval) {\n\t                this.count = 1;\n\t            } else {\n\t                this.count += 1;\n\t            }\n\t\n\t            this._input = input;\n\t\n\t            // if tap count matches we have recognized it,\n\t            // else it has began recognizing...\n\t            var tapCount = this.count % options.taps;\n\t            if (tapCount === 0) {\n\t                // no failing requirements, immediately trigger the tap event\n\t                // or wait as long as the multitap interval to trigger\n\t                if (!this.hasRequireFailures()) {\n\t                    return STATE_RECOGNIZED;\n\t                } else {\n\t                    this._timer = setTimeoutContext(function() {\n\t                        this.state = STATE_RECOGNIZED;\n\t                        this.tryEmit();\n\t                    }, options.interval, this);\n\t                    return STATE_BEGAN;\n\t                }\n\t            }\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    failTimeout: function() {\n\t        this._timer = setTimeoutContext(function() {\n\t            this.state = STATE_FAILED;\n\t        }, this.options.interval, this);\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function() {\n\t        if (this.state == STATE_RECOGNIZED) {\n\t            this._input.tapCount = this.count;\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Simple way to create a manager with a default set of recognizers.\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Hammer(element, options) {\n\t    options = options || {};\n\t    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n\t    return new Manager(element, options);\n\t}\n\t\n\t/**\n\t * @const {string}\n\t */\n\tHammer.VERSION = '2.0.6';\n\t\n\t/**\n\t * default settings\n\t * @namespace\n\t */\n\tHammer.defaults = {\n\t    /**\n\t     * set if DOM events are being triggered.\n\t     * But this is slower and unused by simple implementations, so disabled by default.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\t    domEvents: false,\n\t\n\t    /**\n\t     * The value for the touchAction property/fallback.\n\t     * When set to `compute` it will magically set the correct value based on the added recognizers.\n\t     * @type {String}\n\t     * @default compute\n\t     */\n\t    touchAction: TOUCH_ACTION_COMPUTE,\n\t\n\t    /**\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\t    enable: true,\n\t\n\t    /**\n\t     * EXPERIMENTAL FEATURE -- can be removed/changed\n\t     * Change the parent input target element.\n\t     * If Null, then it is being set the to main element.\n\t     * @type {Null|EventTarget}\n\t     * @default null\n\t     */\n\t    inputTarget: null,\n\t\n\t    /**\n\t     * force an input class\n\t     * @type {Null|Function}\n\t     * @default null\n\t     */\n\t    inputClass: null,\n\t\n\t    /**\n\t     * Default recognizer setup when calling `Hammer()`\n\t     * When creating a new Manager these will be skipped.\n\t     * @type {Array}\n\t     */\n\t    preset: [\n\t        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n\t        [RotateRecognizer, {enable: false}],\n\t        [PinchRecognizer, {enable: false}, ['rotate']],\n\t        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n\t        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n\t        [TapRecognizer],\n\t        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n\t        [PressRecognizer]\n\t    ],\n\t\n\t    /**\n\t     * Some CSS properties can be used to improve the working of Hammer.\n\t     * Add them to this method and they will be set when creating a new Manager.\n\t     * @namespace\n\t     */\n\t    cssProps: {\n\t        /**\n\t         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userSelect: 'none',\n\t\n\t        /**\n\t         * Disable the Windows Phone grippers when pressing an element.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchSelect: 'none',\n\t\n\t        /**\n\t         * Disables the default callout shown when you touch and hold a touch target.\n\t         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n\t         * a callout containing information about the link. This property allows you to disable that callout.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchCallout: 'none',\n\t\n\t        /**\n\t         * Specifies whether zooming is enabled. Used by IE10>\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        contentZooming: 'none',\n\t\n\t        /**\n\t         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userDrag: 'none',\n\t\n\t        /**\n\t         * Overrides the highlight color shown when the user taps a link or a JavaScript\n\t         * clickable element in iOS. This property obeys the alpha value, if specified.\n\t         * @type {String}\n\t         * @default 'rgba(0,0,0,0)'\n\t         */\n\t        tapHighlightColor: 'rgba(0,0,0,0)'\n\t    }\n\t};\n\t\n\tvar STOP = 1;\n\tvar FORCED_STOP = 2;\n\t\n\t/**\n\t * Manager\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Manager(element, options) {\n\t    this.options = assign({}, Hammer.defaults, options || {});\n\t\n\t    this.options.inputTarget = this.options.inputTarget || element;\n\t\n\t    this.handlers = {};\n\t    this.session = {};\n\t    this.recognizers = [];\n\t\n\t    this.element = element;\n\t    this.input = createInputInstance(this);\n\t    this.touchAction = new TouchAction(this, this.options.touchAction);\n\t\n\t    toggleCssProps(this, true);\n\t\n\t    each(this.options.recognizers, function(item) {\n\t        var recognizer = this.add(new (item[0])(item[1]));\n\t        item[2] && recognizer.recognizeWith(item[2]);\n\t        item[3] && recognizer.requireFailure(item[3]);\n\t    }, this);\n\t}\n\t\n\tManager.prototype = {\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @returns {Manager}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // Options that need a little more setup\n\t        if (options.touchAction) {\n\t            this.touchAction.update();\n\t        }\n\t        if (options.inputTarget) {\n\t            // Clean up existing event listeners and reinitialize\n\t            this.input.destroy();\n\t            this.input.target = options.inputTarget;\n\t            this.input.init();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * stop recognizing for this session.\n\t     * This session will be discarded, when a new [input]start event is fired.\n\t     * When forced, the recognizer cycle is stopped immediately.\n\t     * @param {Boolean} [force]\n\t     */\n\t    stop: function(force) {\n\t        this.session.stopped = force ? FORCED_STOP : STOP;\n\t    },\n\t\n\t    /**\n\t     * run the recognizers!\n\t     * called by the inputHandler function on every movement of the pointers (touches)\n\t     * it walks through all the recognizers and tries to detect the gesture that is being made\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        var session = this.session;\n\t        if (session.stopped) {\n\t            return;\n\t        }\n\t\n\t        // run the touch-action polyfill\n\t        this.touchAction.preventDefaults(inputData);\n\t\n\t        var recognizer;\n\t        var recognizers = this.recognizers;\n\t\n\t        // this holds the recognizer that is being recognized.\n\t        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n\t        // if no recognizer is detecting a thing, it is set to `null`\n\t        var curRecognizer = session.curRecognizer;\n\t\n\t        // reset when the last recognizer is recognized\n\t        // or when we're in a new session\n\t        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n\t            curRecognizer = session.curRecognizer = null;\n\t        }\n\t\n\t        var i = 0;\n\t        while (i < recognizers.length) {\n\t            recognizer = recognizers[i];\n\t\n\t            // find out if we are allowed try to recognize the input for this one.\n\t            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n\t            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n\t            //      that is being recognized.\n\t            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n\t            //      this can be setup with the `recognizeWith()` method on the recognizer.\n\t            if (session.stopped !== FORCED_STOP && ( // 1\n\t                    !curRecognizer || recognizer == curRecognizer || // 2\n\t                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n\t                recognizer.recognize(inputData);\n\t            } else {\n\t                recognizer.reset();\n\t            }\n\t\n\t            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n\t            // current active recognizer. but only if we don't already have an active recognizer\n\t            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n\t                curRecognizer = session.curRecognizer = recognizer;\n\t            }\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * get a recognizer by its event name.\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Recognizer|Null}\n\t     */\n\t    get: function(recognizer) {\n\t        if (recognizer instanceof Recognizer) {\n\t            return recognizer;\n\t        }\n\t\n\t        var recognizers = this.recognizers;\n\t        for (var i = 0; i < recognizers.length; i++) {\n\t            if (recognizers[i].options.event == recognizer) {\n\t                return recognizers[i];\n\t            }\n\t        }\n\t        return null;\n\t    },\n\t\n\t    /**\n\t     * add a recognizer to the manager\n\t     * existing recognizers with the same event name will be removed\n\t     * @param {Recognizer} recognizer\n\t     * @returns {Recognizer|Manager}\n\t     */\n\t    add: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'add', this)) {\n\t            return this;\n\t        }\n\t\n\t        // remove existing\n\t        var existing = this.get(recognizer.options.event);\n\t        if (existing) {\n\t            this.remove(existing);\n\t        }\n\t\n\t        this.recognizers.push(recognizer);\n\t        recognizer.manager = this;\n\t\n\t        this.touchAction.update();\n\t        return recognizer;\n\t    },\n\t\n\t    /**\n\t     * remove a recognizer by name or instance\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Manager}\n\t     */\n\t    remove: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'remove', this)) {\n\t            return this;\n\t        }\n\t\n\t        recognizer = this.get(recognizer);\n\t\n\t        // let's make sure this recognizer exists\n\t        if (recognizer) {\n\t            var recognizers = this.recognizers;\n\t            var index = inArray(recognizers, recognizer);\n\t\n\t            if (index !== -1) {\n\t                recognizers.splice(index, 1);\n\t                this.touchAction.update();\n\t            }\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * bind event\n\t     * @param {String} events\n\t     * @param {Function} handler\n\t     * @returns {EventEmitter} this\n\t     */\n\t    on: function(events, handler) {\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            handlers[event] = handlers[event] || [];\n\t            handlers[event].push(handler);\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * unbind event, leave emit blank to remove all handlers\n\t     * @param {String} events\n\t     * @param {Function} [handler]\n\t     * @returns {EventEmitter} this\n\t     */\n\t    off: function(events, handler) {\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            if (!handler) {\n\t                delete handlers[event];\n\t            } else {\n\t                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n\t            }\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * emit event to the listeners\n\t     * @param {String} event\n\t     * @param {Object} data\n\t     */\n\t    emit: function(event, data) {\n\t        // we also want to trigger dom events\n\t        if (this.options.domEvents) {\n\t            triggerDomEvent(event, data);\n\t        }\n\t\n\t        // no handlers, so skip it all\n\t        var handlers = this.handlers[event] && this.handlers[event].slice();\n\t        if (!handlers || !handlers.length) {\n\t            return;\n\t        }\n\t\n\t        data.type = event;\n\t        data.preventDefault = function() {\n\t            data.srcEvent.preventDefault();\n\t        };\n\t\n\t        var i = 0;\n\t        while (i < handlers.length) {\n\t            handlers[i](data);\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * destroy the manager and unbinds all events\n\t     * it doesn't unbind dom events, that is the user own responsibility\n\t     */\n\t    destroy: function() {\n\t        this.element && toggleCssProps(this, false);\n\t\n\t        this.handlers = {};\n\t        this.session = {};\n\t        this.input.destroy();\n\t        this.element = null;\n\t    }\n\t};\n\t\n\t/**\n\t * add/remove the css properties as defined in manager.options.cssProps\n\t * @param {Manager} manager\n\t * @param {Boolean} add\n\t */\n\tfunction toggleCssProps(manager, add) {\n\t    var element = manager.element;\n\t    if (!element.style) {\n\t        return;\n\t    }\n\t    each(manager.options.cssProps, function(value, name) {\n\t        element.style[prefixed(element.style, name)] = add ? value : '';\n\t    });\n\t}\n\t\n\t/**\n\t * trigger dom event\n\t * @param {String} event\n\t * @param {Object} data\n\t */\n\tfunction triggerDomEvent(event, data) {\n\t    var gestureEvent = document.createEvent('Event');\n\t    gestureEvent.initEvent(event, true, true);\n\t    gestureEvent.gesture = data;\n\t    data.target.dispatchEvent(gestureEvent);\n\t}\n\t\n\tassign(Hammer, {\n\t    INPUT_START: INPUT_START,\n\t    INPUT_MOVE: INPUT_MOVE,\n\t    INPUT_END: INPUT_END,\n\t    INPUT_CANCEL: INPUT_CANCEL,\n\t\n\t    STATE_POSSIBLE: STATE_POSSIBLE,\n\t    STATE_BEGAN: STATE_BEGAN,\n\t    STATE_CHANGED: STATE_CHANGED,\n\t    STATE_ENDED: STATE_ENDED,\n\t    STATE_RECOGNIZED: STATE_RECOGNIZED,\n\t    STATE_CANCELLED: STATE_CANCELLED,\n\t    STATE_FAILED: STATE_FAILED,\n\t\n\t    DIRECTION_NONE: DIRECTION_NONE,\n\t    DIRECTION_LEFT: DIRECTION_LEFT,\n\t    DIRECTION_RIGHT: DIRECTION_RIGHT,\n\t    DIRECTION_UP: DIRECTION_UP,\n\t    DIRECTION_DOWN: DIRECTION_DOWN,\n\t    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n\t    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n\t    DIRECTION_ALL: DIRECTION_ALL,\n\t\n\t    Manager: Manager,\n\t    Input: Input,\n\t    TouchAction: TouchAction,\n\t\n\t    TouchInput: TouchInput,\n\t    MouseInput: MouseInput,\n\t    PointerEventInput: PointerEventInput,\n\t    TouchMouseInput: TouchMouseInput,\n\t    SingleTouchInput: SingleTouchInput,\n\t\n\t    Recognizer: Recognizer,\n\t    AttrRecognizer: AttrRecognizer,\n\t    Tap: TapRecognizer,\n\t    Pan: PanRecognizer,\n\t    Swipe: SwipeRecognizer,\n\t    Pinch: PinchRecognizer,\n\t    Rotate: RotateRecognizer,\n\t    Press: PressRecognizer,\n\t\n\t    on: addEventListeners,\n\t    off: removeEventListeners,\n\t    each: each,\n\t    merge: merge,\n\t    extend: extend,\n\t    assign: assign,\n\t    inherit: inherit,\n\t    bindFn: bindFn,\n\t    prefixed: prefixed\n\t});\n\t\n\t// this prevents errors when Hammer is loaded in the presence of an AMD\n\t//  style loader but by script tag, not by the loader.\n\tvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\n\tfreeGlobal.Hammer = Hammer;\n\t\n\tif (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t        return Hammer;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t    module.exports = Hammer;\n\t} else {\n\t    window[exportName] = Hammer;\n\t}\n\t\n\t})(window, document, 'Hammer');\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(47);\n\tmodule.exports = self.fetch.bind(self);\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\n\t * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modularize exports=\"npm\" -o ./`\n\t * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t\n\t/**\n\t * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t * each property. Iteratee functions may exit iteration early by explicitly\n\t * returning `false`.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @param {Function} keysFunc The function to get the keys of `object`.\n\t * @returns {Object} Returns `object`.\n\t */\n\tvar baseFor = createBaseFor();\n\t\n\t/**\n\t * Creates a base function for methods like `_.forIn`.\n\t *\n\t * @private\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {Function} Returns the new base function.\n\t */\n\tfunction createBaseFor(fromRight) {\n\t  return function(object, iteratee, keysFunc) {\n\t    var index = -1,\n\t        iterable = Object(object),\n\t        props = keysFunc(object),\n\t        length = props.length;\n\t\n\t    while (length--) {\n\t      var key = props[fromRight ? length : ++index];\n\t      if (iteratee(iterable[key], key, iterable) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return object;\n\t  };\n\t}\n\t\n\tmodule.exports = baseFor;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t/**\n\t * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern modularize exports=\"npm\" -o ./`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t\n\t/** `Object#toString` result references. */\n\tvar arrayTag = '[object Array]',\n\t    funcTag = '[object Function]';\n\t\n\t/** Used to detect host constructors (Safari > 5). */\n\tvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t/**\n\t * Checks if `value` is object-like.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar fnToString = Function.prototype.toString;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/** Used to detect if a method is native. */\n\tvar reIsNative = RegExp('^' +\n\t  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t);\n\t\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeIsArray = getNative(Array, 'isArray');\n\t\n\t/**\n\t * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t * of an array-like value.\n\t */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/**\n\t * Gets the native function at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {string} key The key of the method to get.\n\t * @returns {*} Returns the function if it's native, else `undefined`.\n\t */\n\tfunction getNative(object, key) {\n\t  var value = object == null ? undefined : object[key];\n\t  return isNative(value) ? value : undefined;\n\t}\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\t/**\n\t * Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(function() { return arguments; }());\n\t * // => false\n\t */\n\tvar isArray = nativeIsArray || function(value) {\n\t  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t};\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in older versions of Chrome and Safari which return 'function' for regexes\n\t  // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t  return isObject(value) && objToString.call(value) == funcTag;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(1);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Checks if `value` is a native function.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t * @example\n\t *\n\t * _.isNative(Array.prototype.push);\n\t * // => true\n\t *\n\t * _.isNative(_);\n\t * // => false\n\t */\n\tfunction isNative(value) {\n\t  if (value == null) {\n\t    return false;\n\t  }\n\t  if (isFunction(value)) {\n\t    return reIsNative.test(fnToString.call(value));\n\t  }\n\t  return isObjectLike(value) && reIsHostCtor.test(value);\n\t}\n\t\n\tmodule.exports = isArray;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * lodash 3.2.0 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern modularize exports=\"npm\" -o ./`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\tvar baseFor = __webpack_require__(29),\n\t    isArguments = __webpack_require__(9),\n\t    keysIn = __webpack_require__(32);\n\t\n\t/** `Object#toString` result references. */\n\tvar objectTag = '[object Object]';\n\t\n\t/**\n\t * Checks if `value` is object-like.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/**\n\t * The base implementation of `_.forIn` without support for callback\n\t * shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseForIn(object, iteratee) {\n\t  return baseFor(object, iteratee, keysIn);\n\t}\n\t\n\t/**\n\t * Checks if `value` is a plain object, that is, an object created by the\n\t * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t *\n\t * **Note:** This method assumes objects created by the `Object` constructor\n\t * have no inherited enumerable properties.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t * }\n\t *\n\t * _.isPlainObject(new Foo);\n\t * // => false\n\t *\n\t * _.isPlainObject([1, 2, 3]);\n\t * // => false\n\t *\n\t * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t * // => true\n\t *\n\t * _.isPlainObject(Object.create(null));\n\t * // => true\n\t */\n\tfunction isPlainObject(value) {\n\t  var Ctor;\n\t\n\t  // Exit early for non `Object` objects.\n\t  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n\t      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t    return false;\n\t  }\n\t  // IE < 9 iterates inherited properties before own properties. If the first\n\t  // iterated property is an object's own property then there are no inherited\n\t  // enumerable properties.\n\t  var result;\n\t  // In most environments an object's own properties are iterated before\n\t  // its inherited properties. If the last iterated property is an object's\n\t  // own property then there are no inherited enumerable properties.\n\t  baseForIn(value, function(subValue, key) {\n\t    result = key;\n\t  });\n\t  return result === undefined || hasOwnProperty.call(value, result);\n\t}\n\t\n\tmodule.exports = isPlainObject;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * lodash 3.0.8 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern modularize exports=\"npm\" -o ./`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\tvar isArguments = __webpack_require__(9),\n\t    isArray = __webpack_require__(30);\n\t\n\t/** Used to detect unsigned integer values. */\n\tvar reIsUint = /^\\d+$/;\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n\t * of an array-like value.\n\t */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t */\n\tfunction isIndex(value, length) {\n\t  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t  length = length == null ? MAX_SAFE_INTEGER : length;\n\t  return value > -1 && value % 1 == 0 && value < length;\n\t}\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\t/**\n\t * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(1);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\t/**\n\t * Creates an array of the own and inherited enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keysIn(new Foo);\n\t * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t */\n\tfunction keysIn(object) {\n\t  if (object == null) {\n\t    return [];\n\t  }\n\t  if (!isObject(object)) {\n\t    object = Object(object);\n\t  }\n\t  var length = object.length;\n\t  length = (length && isLength(length) &&\n\t    (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t  var Ctor = object.constructor,\n\t      index = -1,\n\t      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t      result = Array(length),\n\t      skipIndexes = length > 0;\n\t\n\t  while (++index < length) {\n\t    result[index] = (index + '');\n\t  }\n\t  for (var key in object) {\n\t    if (!(skipIndexes && isIndex(key, length)) &&\n\t        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = keysIn;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is a host object in IE < 9.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t */\n\tfunction isHostObject(value) {\n\t  // Many host objects are `Object` objects that can coerce to strings\n\t  // despite having improperly defined `toString` methods.\n\t  var result = false;\n\t  if (value != null && typeof value.toString != 'function') {\n\t    try {\n\t      result = !!(value + '');\n\t    } catch (e) {}\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = isHostObject;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\tmodule.exports = isObjectLike;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory){\n\t  'use strict';\n\t\n\t  /*istanbul ignore next:cant test*/\n\t  if (typeof module === 'object' && typeof module.exports === 'object') {\n\t    module.exports = factory();\n\t  } else if (true) {\n\t    // AMD. Register as an anonymous module.\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else {\n\t    // Browser globals\n\t    root.objectPath = factory();\n\t  }\n\t})(this, function(){\n\t  'use strict';\n\t\n\t  var\n\t    toStr = Object.prototype.toString,\n\t    _hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t  function isEmpty(value){\n\t    if (!value) {\n\t      return true;\n\t    }\n\t    if (isArray(value) && value.length === 0) {\n\t        return true;\n\t    } else if (!isString(value)) {\n\t        for (var i in value) {\n\t            if (_hasOwnProperty.call(value, i)) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function toString(type){\n\t    return toStr.call(type);\n\t  }\n\t\n\t  function isNumber(value){\n\t    return typeof value === 'number' || toString(value) === \"[object Number]\";\n\t  }\n\t\n\t  function isString(obj){\n\t    return typeof obj === 'string' || toString(obj) === \"[object String]\";\n\t  }\n\t\n\t  function isObject(obj){\n\t    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\n\t  }\n\t\n\t  function isArray(obj){\n\t    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';\n\t  }\n\t\n\t  function isBoolean(obj){\n\t    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\n\t  }\n\t\n\t  function getKey(key){\n\t    var intKey = parseInt(key);\n\t    if (intKey.toString() === key) {\n\t      return intKey;\n\t    }\n\t    return key;\n\t  }\n\t\n\t  function set(obj, path, value, doNotReplace){\n\t    if (isNumber(path)) {\n\t      path = [path];\n\t    }\n\t    if (isEmpty(path)) {\n\t      return obj;\n\t    }\n\t    if (isString(path)) {\n\t      return set(obj, path.split('.').map(getKey), value, doNotReplace);\n\t    }\n\t    var currentPath = path[0];\n\t\n\t    if (path.length === 1) {\n\t      var oldVal = obj[currentPath];\n\t      if (oldVal === void 0 || !doNotReplace) {\n\t        obj[currentPath] = value;\n\t      }\n\t      return oldVal;\n\t    }\n\t\n\t    if (obj[currentPath] === void 0) {\n\t      //check if we assume an array\n\t      if(isNumber(path[1])) {\n\t        obj[currentPath] = [];\n\t      } else {\n\t        obj[currentPath] = {};\n\t      }\n\t    }\n\t\n\t    return set(obj[currentPath], path.slice(1), value, doNotReplace);\n\t  }\n\t\n\t  function del(obj, path) {\n\t    if (isNumber(path)) {\n\t      path = [path];\n\t    }\n\t\n\t    if (isEmpty(obj)) {\n\t      return void 0;\n\t    }\n\t\n\t    if (isEmpty(path)) {\n\t      return obj;\n\t    }\n\t    if(isString(path)) {\n\t      return del(obj, path.split('.'));\n\t    }\n\t\n\t    var currentPath = getKey(path[0]);\n\t    var oldVal = obj[currentPath];\n\t\n\t    if(path.length === 1) {\n\t      if (oldVal !== void 0) {\n\t        if (isArray(obj)) {\n\t          obj.splice(currentPath, 1);\n\t        } else {\n\t          delete obj[currentPath];\n\t        }\n\t      }\n\t    } else {\n\t      if (obj[currentPath] !== void 0) {\n\t        return del(obj[currentPath], path.slice(1));\n\t      }\n\t    }\n\t\n\t    return obj;\n\t  }\n\t\n\t  var objectPath = function(obj) {\n\t    return Object.keys(objectPath).reduce(function(proxy, prop) {\n\t      if (typeof objectPath[prop] === 'function') {\n\t        proxy[prop] = objectPath[prop].bind(objectPath, obj);\n\t      }\n\t\n\t      return proxy;\n\t    }, {});\n\t  };\n\t\n\t  objectPath.has = function (obj, path) {\n\t    if (isEmpty(obj)) {\n\t      return false;\n\t    }\n\t\n\t    if (isNumber(path)) {\n\t      path = [path];\n\t    } else if (isString(path)) {\n\t      path = path.split('.');\n\t    }\n\t\n\t    if (isEmpty(path) || path.length === 0) {\n\t      return false;\n\t    }\n\t\n\t    for (var i = 0; i < path.length; i++) {\n\t      var j = path[i];\n\t      if ((isObject(obj) || isArray(obj)) && _hasOwnProperty.call(obj, j)) {\n\t        obj = obj[j];\n\t      } else {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  objectPath.ensureExists = function (obj, path, value){\n\t    return set(obj, path, value, true);\n\t  };\n\t\n\t  objectPath.set = function (obj, path, value, doNotReplace){\n\t    return set(obj, path, value, doNotReplace);\n\t  };\n\t\n\t  objectPath.insert = function (obj, path, value, at){\n\t    var arr = objectPath.get(obj, path);\n\t    at = ~~at;\n\t    if (!isArray(arr)) {\n\t      arr = [];\n\t      objectPath.set(obj, path, arr);\n\t    }\n\t    arr.splice(at, 0, value);\n\t  };\n\t\n\t  objectPath.empty = function(obj, path) {\n\t    if (isEmpty(path)) {\n\t      return obj;\n\t    }\n\t    if (isEmpty(obj)) {\n\t      return void 0;\n\t    }\n\t\n\t    var value, i;\n\t    if (!(value = objectPath.get(obj, path))) {\n\t      return obj;\n\t    }\n\t\n\t    if (isString(value)) {\n\t      return objectPath.set(obj, path, '');\n\t    } else if (isBoolean(value)) {\n\t      return objectPath.set(obj, path, false);\n\t    } else if (isNumber(value)) {\n\t      return objectPath.set(obj, path, 0);\n\t    } else if (isArray(value)) {\n\t      value.length = 0;\n\t    } else if (isObject(value)) {\n\t      for (i in value) {\n\t        if (_hasOwnProperty.call(value, i)) {\n\t          delete value[i];\n\t        }\n\t      }\n\t    } else {\n\t      return objectPath.set(obj, path, null);\n\t    }\n\t  };\n\t\n\t  objectPath.push = function (obj, path /*, values */){\n\t    var arr = objectPath.get(obj, path);\n\t    if (!isArray(arr)) {\n\t      arr = [];\n\t      objectPath.set(obj, path, arr);\n\t    }\n\t\n\t    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\n\t  };\n\t\n\t  objectPath.coalesce = function (obj, paths, defaultValue) {\n\t    var value;\n\t\n\t    for (var i = 0, len = paths.length; i < len; i++) {\n\t      if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n\t        return value;\n\t      }\n\t    }\n\t\n\t    return defaultValue;\n\t  };\n\t\n\t  objectPath.get = function (obj, path, defaultValue){\n\t    if (isNumber(path)) {\n\t      path = [path];\n\t    }\n\t    if (isEmpty(path)) {\n\t      return obj;\n\t    }\n\t    if (isEmpty(obj)) {\n\t      return defaultValue;\n\t    }\n\t    if (isString(path)) {\n\t      return objectPath.get(obj, path.split('.'), defaultValue);\n\t    }\n\t\n\t    var currentPath = getKey(path[0]);\n\t\n\t    if (path.length === 1) {\n\t      if (obj[currentPath] === void 0) {\n\t        return defaultValue;\n\t      }\n\t      return obj[currentPath];\n\t    }\n\t\n\t    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\n\t  };\n\t\n\t  objectPath.del = function(obj, path) {\n\t    return del(obj, path);\n\t  };\n\t\n\t  return objectPath;\n\t});\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = reduceReducers;\n\t\n\tfunction reduceReducers() {\n\t  for (var _len = arguments.length, reducers = Array(_len), _key = 0; _key < _len; _key++) {\n\t    reducers[_key] = arguments[_key];\n\t  }\n\t\n\t  return function (previous, current) {\n\t    return reducers.reduce(function (p, r) {\n\t      return r(p, current);\n\t    }, previous);\n\t  };\n\t}\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = createAction;\n\tfunction identity(t) {\n\t  return t;\n\t}\n\t\n\tfunction createAction(type, actionCreator, metaCreator) {\n\t  var finalActionCreator = typeof actionCreator === 'function' ? actionCreator : identity;\n\t\n\t  return function () {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    var action = {\n\t      type: type,\n\t      payload: finalActionCreator.apply(undefined, args)\n\t    };\n\t\n\t    if (args.length === 1 && args[0] instanceof Error) {\n\t      // Handle FSA errors where the payload is an Error object. Set error.\n\t      action.error = true;\n\t    }\n\t\n\t    if (typeof metaCreator === 'function') {\n\t      action.meta = metaCreator.apply(undefined, args);\n\t    }\n\t\n\t    return action;\n\t  };\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = handleActions;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _handleAction = __webpack_require__(11);\n\t\n\tvar _handleAction2 = _interopRequireDefault(_handleAction);\n\t\n\tvar _ownKeys = __webpack_require__(39);\n\t\n\tvar _ownKeys2 = _interopRequireDefault(_ownKeys);\n\t\n\tvar _reduceReducers = __webpack_require__(36);\n\t\n\tvar _reduceReducers2 = _interopRequireDefault(_reduceReducers);\n\t\n\tfunction handleActions(handlers, defaultState) {\n\t  var reducers = _ownKeys2['default'](handlers).map(function (type) {\n\t    return _handleAction2['default'](type, handlers[type]);\n\t  });\n\t\n\t  return typeof defaultState !== 'undefined' ? function (state, action) {\n\t    if (state === undefined) state = defaultState;\n\t    return _reduceReducers2['default'].apply(undefined, reducers)(state, action);\n\t  } : _reduceReducers2['default'].apply(undefined, reducers);\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports['default'] = ownKeys;\n\t\n\tfunction ownKeys(object) {\n\t  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n\t    return Reflect.ownKeys(object);\n\t  }\n\t\n\t  var keys = Object.getOwnPropertyNames(object);\n\t\n\t  if (typeof Object.getOwnPropertySymbols === 'function') {\n\t    keys = keys.concat(Object.getOwnPropertySymbols(object));\n\t  }\n\t\n\t  return keys;\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports['default'] = promiseMiddleware;\n\t\n\tvar _fluxStandardAction = __webpack_require__(8);\n\t\n\tfunction isPromise(val) {\n\t  return val && typeof val.then === 'function';\n\t}\n\t\n\tfunction promiseMiddleware(_ref) {\n\t  var dispatch = _ref.dispatch;\n\t\n\t  return function (next) {\n\t    return function (action) {\n\t      if (!_fluxStandardAction.isFSA(action)) {\n\t        return isPromise(action) ? action.then(dispatch) : next(action);\n\t      }\n\t\n\t      return isPromise(action.payload) ? action.payload.then(function (result) {\n\t        return dispatch(_extends({}, action, { payload: result }));\n\t      }, function (error) {\n\t        return dispatch(_extends({}, action, { payload: error, error: true }));\n\t      }) : next(action);\n\t    };\n\t  };\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction thunkMiddleware(_ref) {\n\t  var dispatch = _ref.dispatch;\n\t  var getState = _ref.getState;\n\t\n\t  return function (next) {\n\t    return function (action) {\n\t      return typeof action === 'function' ? action(dispatch, getState) : next(action);\n\t    };\n\t  };\n\t}\n\t\n\tmodule.exports = thunkMiddleware;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = applyMiddleware;\n\t\n\tvar _compose = __webpack_require__(13);\n\t\n\tvar _compose2 = _interopRequireDefault(_compose);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\t/**\n\t * Creates a store enhancer that applies middleware to the dispatch method\n\t * of the Redux store. This is handy for a variety of tasks, such as expressing\n\t * asynchronous actions in a concise manner, or logging every action payload.\n\t *\n\t * See `redux-thunk` package as an example of the Redux middleware.\n\t *\n\t * Because middleware is potentially asynchronous, this should be the first\n\t * store enhancer in the composition chain.\n\t *\n\t * Note that each middleware will be given the `dispatch` and `getState` functions\n\t * as named arguments.\n\t *\n\t * @param {...Function} middlewares The middleware chain to be applied.\n\t * @returns {Function} A store enhancer applying the middleware.\n\t */\n\tfunction applyMiddleware() {\n\t  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n\t    middlewares[_key] = arguments[_key];\n\t  }\n\t\n\t  return function (createStore) {\n\t    return function (reducer, initialState, enhancer) {\n\t      var store = createStore(reducer, initialState, enhancer);\n\t      var _dispatch = store.dispatch;\n\t      var chain = [];\n\t\n\t      var middlewareAPI = {\n\t        getState: store.getState,\n\t        dispatch: function dispatch(action) {\n\t          return _dispatch(action);\n\t        }\n\t      };\n\t      chain = middlewares.map(function (middleware) {\n\t        return middleware(middlewareAPI);\n\t      });\n\t      _dispatch = _compose2[\"default\"].apply(undefined, chain)(store.dispatch);\n\t\n\t      return _extends({}, store, {\n\t        dispatch: _dispatch\n\t      });\n\t    };\n\t  };\n\t}\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = bindActionCreators;\n\tfunction bindActionCreator(actionCreator, dispatch) {\n\t  return function () {\n\t    return dispatch(actionCreator.apply(undefined, arguments));\n\t  };\n\t}\n\t\n\t/**\n\t * Turns an object whose values are action creators, into an object with the\n\t * same keys, but with every function wrapped into a `dispatch` call so they\n\t * may be invoked directly. This is just a convenience method, as you can call\n\t * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n\t *\n\t * For convenience, you can also pass a single function as the first argument,\n\t * and get a function in return.\n\t *\n\t * @param {Function|Object} actionCreators An object whose values are action\n\t * creator functions. One handy way to obtain it is to use ES6 `import * as`\n\t * syntax. You may also pass a single function.\n\t *\n\t * @param {Function} dispatch The `dispatch` function available on your Redux\n\t * store.\n\t *\n\t * @returns {Function|Object} The object mimicking the original object, but with\n\t * every action creator wrapped into the `dispatch` call. If you passed a\n\t * function as `actionCreators`, the return value will also be a single\n\t * function.\n\t */\n\tfunction bindActionCreators(actionCreators, dispatch) {\n\t  if (typeof actionCreators === 'function') {\n\t    return bindActionCreator(actionCreators, dispatch);\n\t  }\n\t\n\t  if (typeof actionCreators !== 'object' || actionCreators === null) {\n\t    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n\t  }\n\t\n\t  var keys = Object.keys(actionCreators);\n\t  var boundActionCreators = {};\n\t  for (var i = 0; i < keys.length; i++) {\n\t    var key = keys[i];\n\t    var actionCreator = actionCreators[key];\n\t    if (typeof actionCreator === 'function') {\n\t      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n\t    }\n\t  }\n\t  return boundActionCreators;\n\t}\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports[\"default\"] = combineReducers;\n\t\n\tvar _createStore = __webpack_require__(14);\n\t\n\tvar _isPlainObject = __webpack_require__(10);\n\t\n\tvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\t\n\tvar _warning = __webpack_require__(16);\n\t\n\tvar _warning2 = _interopRequireDefault(_warning);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction getUndefinedStateErrorMessage(key, action) {\n\t  var actionType = action && action.type;\n\t  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\t\n\t  return 'Reducer \"' + key + '\" returned undefined handling ' + actionName + '. ' + 'To ignore an action, you must explicitly return the previous state.';\n\t}\n\t\n\tfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n\t  var reducerKeys = Object.keys(reducers);\n\t  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\t\n\t  if (reducerKeys.length === 0) {\n\t    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n\t  }\n\t\n\t  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n\t    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n\t  }\n\t\n\t  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n\t    return !reducers.hasOwnProperty(key);\n\t  });\n\t\n\t  if (unexpectedKeys.length > 0) {\n\t    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n\t  }\n\t}\n\t\n\tfunction assertReducerSanity(reducers) {\n\t  Object.keys(reducers).forEach(function (key) {\n\t    var reducer = reducers[key];\n\t    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\t\n\t    if (typeof initialState === 'undefined') {\n\t      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n\t    }\n\t\n\t    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n\t    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n\t      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Turns an object whose values are different reducer functions, into a single\n\t * reducer function. It will call every child reducer, and gather their results\n\t * into a single state object, whose keys correspond to the keys of the passed\n\t * reducer functions.\n\t *\n\t * @param {Object} reducers An object whose values correspond to different\n\t * reducer functions that need to be combined into one. One handy way to obtain\n\t * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n\t * undefined for any action. Instead, they should return their initial state\n\t * if the state passed to them was undefined, and the current state for any\n\t * unrecognized action.\n\t *\n\t * @returns {Function} A reducer function that invokes every reducer inside the\n\t * passed object, and builds a state object with the same shape.\n\t */\n\tfunction combineReducers(reducers) {\n\t  var reducerKeys = Object.keys(reducers);\n\t  var finalReducers = {};\n\t  for (var i = 0; i < reducerKeys.length; i++) {\n\t    var key = reducerKeys[i];\n\t    if (typeof reducers[key] === 'function') {\n\t      finalReducers[key] = reducers[key];\n\t    }\n\t  }\n\t  var finalReducerKeys = Object.keys(finalReducers);\n\t\n\t  var sanityError;\n\t  try {\n\t    assertReducerSanity(finalReducers);\n\t  } catch (e) {\n\t    sanityError = e;\n\t  }\n\t\n\t  return function combination() {\n\t    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t    var action = arguments[1];\n\t\n\t    if (sanityError) {\n\t      throw sanityError;\n\t    }\n\t\n\t    if (false) {\n\t      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n\t      if (warningMessage) {\n\t        (0, _warning2[\"default\"])(warningMessage);\n\t      }\n\t    }\n\t\n\t    var hasChanged = false;\n\t    var nextState = {};\n\t    for (var i = 0; i < finalReducerKeys.length; i++) {\n\t      var key = finalReducerKeys[i];\n\t      var reducer = finalReducers[key];\n\t      var previousStateForKey = state[key];\n\t      var nextStateForKey = reducer(previousStateForKey, action);\n\t      if (typeof nextStateForKey === 'undefined') {\n\t        var errorMessage = getUndefinedStateErrorMessage(key, action);\n\t        throw new Error(errorMessage);\n\t      }\n\t      nextState[key] = nextStateForKey;\n\t      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n\t    }\n\t    return hasChanged ? nextState : state;\n\t  };\n\t}\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar objectPath = __webpack_require__(35);\n\t\n\tvar babelHelpers = {};\n\tbabelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t  return typeof obj;\n\t} : function (obj) {\n\t  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t};\n\t\n\tbabelHelpers.classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\tbabelHelpers.createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\t\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\t\n\tbabelHelpers.slicedToArray = function () {\n\t  function sliceIterator(arr, i) {\n\t    var _arr = [];\n\t    var _n = true;\n\t    var _d = false;\n\t    var _e = undefined;\n\t\n\t    try {\n\t      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n\t        _arr.push(_s.value);\n\t\n\t        if (i && _arr.length === i) break;\n\t      }\n\t    } catch (err) {\n\t      _d = true;\n\t      _e = err;\n\t    } finally {\n\t      try {\n\t        if (!_n && _i[\"return\"]) _i[\"return\"]();\n\t      } finally {\n\t        if (_d) throw _e;\n\t      }\n\t    }\n\t\n\t    return _arr;\n\t  }\n\t\n\t  return function (arr, i) {\n\t    if (Array.isArray(arr)) {\n\t      return arr;\n\t    } else if (Symbol.iterator in Object(arr)) {\n\t      return sliceIterator(arr, i);\n\t    } else {\n\t      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n\t    }\n\t  };\n\t}();\n\t\n\tbabelHelpers;\n\t\n\t// credit: @gaearon\n\t// borrowed from https://github.com/rackt/react-redux/blob/master/src%2Futils%2FshallowEqual.js\n\t// with some modifications.\n\t\n\tfunction shallowEqual(objA, objB) {\n\t  // objA and objB is the same type\n\t  if ((typeof objA === 'undefined' ? 'undefined' : babelHelpers.typeof(objA)) === 'object') {\n\t    if (objA === objB) {\n\t      return true;\n\t    }\n\t\n\t    var keysA = Object.keys(objA);\n\t    var keysB = Object.keys(objB);\n\t\n\t    if (keysA.length !== keysB.length) {\n\t      return false;\n\t    }\n\t\n\t    // Test for A's keys different from B.\n\t    var hasOwn = Object.prototype.hasOwnProperty;\n\t    for (var i = 0; i < keysA.length; i++) {\n\t      if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n\t        return false;\n\t      }\n\t    }\n\t\n\t    return true;\n\t  } else {\n\t    return objA === objB;\n\t  }\n\t}\n\t\n\t// to valid and match like `a.b.c as x.y.z`\n\tvar re = /^([a-zA-Z0-9\\._-]+)\\s{1,2}as\\s{1,2}([a-zA-Z0-9\\._-]+)$/i;\n\t\n\tvar isDev = (\"production\") !== 'production';\n\t\n\t/**\n\t * Bind reduxStore to Vue instance\n\t *\n\t * @param {Vue} Vue\n\t * @param {object} store - redux store\n\t */\n\tfunction bindVue(Vue, store) {\n\t  Vue.prototype.$subscribe = function () {\n\t    var _this = this;\n\t\n\t    if (this._calledOnce) {\n\t      if (isDev) {\n\t        throw new Error('[Revue] You can only subscribe once, pass multi args to subscribe more than one state.');\n\t      }\n\t      return false;\n\t    }\n\t    this._calledOnce = true;\n\t    this._unsubscribers = [];\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    args.forEach(function (prop) {\n\t      // realProp: property name/path in your instance\n\t      // storeProp: property name/path in Redux store\n\t      var realProp = prop,\n\t          storeProp = prop;\n\t      if (re.test(prop)) {\n\t        var _prop$match = prop.match(re);\n\t\n\t        var _prop$match2 = babelHelpers.slicedToArray(_prop$match, 3);\n\t\n\t        storeProp = _prop$match2[1];\n\t        realProp = _prop$match2[2];\n\t      }\n\t      var currentValue = objectPath.get(store.getState(), storeProp);\n\t      var handleChange = function handleChange() {\n\t        var previousValue = currentValue;\n\t        currentValue = objectPath.get(store.getState(), storeProp);\n\t        if (!shallowEqual(previousValue, currentValue)) {\n\t          objectPath.set(_this._data, realProp, currentValue);\n\t        }\n\t      };\n\t      _this._unsubscribers.push(store.subscribe(handleChange));\n\t    });\n\t  };\n\t  Vue.prototype.$unsubscribe = function () {\n\t    if (this._unsubscribers && this._unsubscribers.length > 0) {\n\t      this._calledOnce = false;\n\t      this._unsubscribers.forEach(function (un) {\n\t        return un();\n\t      });\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Wrap redux actions (both action creators and async action)\n\t *\n\t * @param {Redux Store} - store\n\t * @param {object} - actions\n\t * @returns {Object}\n\t */\n\tfunction wrap(store, actions) {\n\t  if (isDev && (typeof actions === 'undefined' ? 'undefined' : babelHelpers.typeof(actions)) !== 'object') {\n\t    throw new TypeError('[Revue] Expected an Object');\n\t  }\n\t  // an action tree\n\t\n\t  var _loop = function _loop(name) {\n\t    var action = actions[name];\n\t    actions[name] = function () {\n\t      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        args[_key2] = arguments[_key2];\n\t      }\n\t\n\t      store.dispatch(action.apply(null, args));\n\t    };\n\t  };\n\t\n\t  for (var name in actions) {\n\t    _loop(name);\n\t  }\n\t  return actions;\n\t}\n\t\n\tvar Revue = function () {\n\t  function Revue(Vue, reduxStore, reduxActions) {\n\t    babelHelpers.classCallCheck(this, Revue);\n\t\n\t    this.store = reduxStore;\n\t    bindVue(Vue, this.store);\n\t    if (reduxActions) {\n\t      this.reduxActions = wrap(this.store, reduxActions);\n\t    }\n\t  }\n\t\n\t  babelHelpers.createClass(Revue, [{\n\t    key: 'dispatch',\n\t    value: function dispatch() {\n\t      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t        args[_key3] = arguments[_key3];\n\t      }\n\t\n\t      this.store.dispatch.apply(null, args);\n\t    }\n\t  }, {\n\t    key: 'state',\n\t    get: function get() {\n\t      return this.store.getState();\n\t    }\n\t  }, {\n\t    key: 'actions',\n\t    get: function get() {\n\t      if (isDev && !this.reduxActions) {\n\t        throw new Error('[Revue] Bind actions to Revue before calling them!');\n\t      }\n\t      return this.reduxActions;\n\t    }\n\t  }]);\n\t  return Revue;\n\t}();\n\t\n\tmodule.exports = Revue;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var vueTouch = {}\n\t  var Hammer =  true\n\t    ? __webpack_require__(27)\n\t    : window.Hammer\n\t  var gestures = ['tap', 'pan', 'pinch', 'press', 'rotate', 'swipe']\n\t  var directions = ['up', 'down', 'left', 'right', 'horizontal', 'vertical']\n\t  var customeEvents = {}\n\t\n\t  if (!Hammer) {\n\t    throw new Error('[vue-touch] cannot locate Hammer.js.')\n\t  }\n\t\n\t  // exposed global options\n\t  vueTouch.config = {}\n\t\n\t  vueTouch.install = function (Vue) {\n\t\n\t    Vue.directive('touch', {\n\t\n\t      isFn: true,\n\t      acceptStatement: true,\n\t      priority: Vue.directive('on').priority,\n\t\n\t      bind: function () {\n\t        if (!this.el.hammer) {\n\t          this.el.hammer = new Hammer.Manager(this.el)\n\t        }\n\t        var mc = this.mc = this.el.hammer\n\t        // determine event type\n\t        var event = this.arg\n\t        if (!event) {\n\t          console.warn('[vue-touch] event type argument is required.')\n\t        }\n\t        var recognizerType, recognizer\n\t\n\t        if (customeEvents[event]) {\n\t          // custom event\n\t          var custom = customeEvents[event]\n\t          recognizerType = custom.type\n\t          recognizer = new Hammer[capitalize(recognizerType)](custom)\n\t          recognizer.recognizeWith(mc.recognizers)\n\t          mc.add(recognizer)\n\t        } else {\n\t          // built-in event\n\t          for (var i = 0; i < gestures.length; i++) {\n\t            if (event.indexOf(gestures[i]) === 0) {\n\t              recognizerType = gestures[i]\n\t              break\n\t            }\n\t          }\n\t          if (!recognizerType) {\n\t            console.warn('[vue-touch] invalid event type: ' + event)\n\t            return\n\t          }\n\t          recognizer = mc.get(recognizerType)\n\t          if (!recognizer) {\n\t            // add recognizer\n\t            recognizer = new Hammer[capitalize(recognizerType)]()\n\t            // make sure multiple recognizers work together...\n\t            recognizer.recognizeWith(mc.recognizers)\n\t            mc.add(recognizer)\n\t          }\n\t          // apply global options\n\t          var globalOptions = vueTouch.config[recognizerType]\n\t          if (globalOptions) {\n\t            guardDirections(globalOptions)\n\t            recognizer.set(globalOptions)\n\t          }\n\t          // apply local options\n\t          var localOptions =\n\t            this.el.hammerOptions &&\n\t            this.el.hammerOptions[recognizerType]\n\t          if (localOptions) {\n\t            guardDirections(localOptions)\n\t            recognizer.set(localOptions)\n\t          }\n\t        }\n\t        this.recognizer = recognizer\n\t      },\n\t\n\t      update: function (fn) {\n\t        var mc = this.mc\n\t        var vm = this.vm\n\t        var event = this.arg\n\t        // teardown old handler\n\t        if (this.handler) {\n\t          mc.off(event, this.handler)\n\t        }\n\t        if (typeof fn !== 'function') {\n\t          console.warn(\n\t            '[vue-touch] invalid handler function for v-touch: ' +\n\t            this.arg + '=\"' + this.descriptor.raw\n\t          )\n\t        } else {\n\t          mc.on(event, fn)\n\t        }\n\t      },\n\t\n\t      unbind: function () {\n\t        this.mc.off(this.arg, this.handler)\n\t        if (!Object.keys(this.mc.handlers).length) {\n\t          this.mc.destroy()\n\t          this.el.hammer = null\n\t        }\n\t      }\n\t    })\n\t\n\t    Vue.directive('touch-options', {\n\t      priority: Vue.directive('on').priority + 1,\n\t      update: function (options) {\n\t        var opts = this.el.hammerOptions || (this.el.hammerOptions = {})\n\t        if (!this.arg) {\n\t          console.warn('[vue-touch] recognizer type argument for v-touch-options is required.')\n\t        } else {\n\t          opts[this.arg] = options\n\t        }\n\t      }\n\t    })\n\t  }\n\t\n\t  /**\n\t   * Register a custom event.\n\t   *\n\t   * @param {String} event\n\t   * @param {Object} options - a Hammer.js recognizer option object.\n\t   *                           required fields:\n\t   *                           - type: the base recognizer to use for this event\n\t   */\n\t\n\t  vueTouch.registerCustomEvent = function (event, options) {\n\t    options.event = event\n\t    customeEvents[event] = options\n\t  }\n\t\n\t  function capitalize (str) {\n\t    return str.charAt(0).toUpperCase() + str.slice(1)\n\t  }\n\t\n\t  function guardDirections (options) {\n\t    var dir = options.direction\n\t    if (typeof dir === 'string') {\n\t      if (directions.indexOf(dir) > -1) {\n\t        options.direction = Hammer['DIRECTION_' + dir.toUpperCase()]\n\t      } else {\n\t        console.warn('[vue-touch] invalid direction: ' + dir)\n\t      }\n\t    }\n\t  }\n\t\n\t  if (true) {\n\t    module.exports = vueTouch\n\t  } else if (typeof define == \"function\" && define.amd) {\n\t    define([], function(){ return vueTouch })\n\t  } else if (window.Vue) {\n\t    window.VueTouch = vueTouch\n\t    Vue.use(vueTouch)\n\t  }\n\t\n\t})()\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  var support = {\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob();\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers;\n\t  self.Request = Request;\n\t  self.Response = Response;\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return;\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var status = (xhr.status === 1223) ? 204 : xhr.status\n\t        if (status < 100 || status > 599) {\n\t          reject(new TypeError('Network request failed'))\n\t          return\n\t        }\n\t        var options = {\n\t          status: status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.fetchedImages = exports.fetchingImages = undefined;\n\texports.fetchImages = fetchImages;\n\t\n\tvar _reduxActions = __webpack_require__(12);\n\t\n\tvar _api = __webpack_require__(49);\n\t\n\tvar api = _interopRequireWildcard(_api);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar fetchingImages = exports.fetchingImages = (0, _reduxActions.createAction)('fetchingImages');\n\tvar fetchedImages = exports.fetchedImages = (0, _reduxActions.createAction)('fetched images', api.fetchImages);\n\t\n\tfunction fetchImages(page) {\n\t\treturn function (dispatch, getState) {\n\t\t\tdispatch(fetchingImages);\n\t\t\tdispatch(fetchedImages(page));\n\t\t};\n\t}\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.fetchImages = fetchImages;\n\t\n\tvar _isomorphicFetch = __webpack_require__(28);\n\t\n\tvar _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction fetchImages() {\n\t\tvar page = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\t\tvar limit = arguments.length <= 1 || arguments[1] === undefined ? 10 : arguments[1];\n\t\n\t\treturn (0, _isomorphicFetch2.default)('https://gank.avosapps.com/api/data/%E7%A6%8F%E5%88%A9/' + limit + '/' + page).then(function (data) {\n\t\t\treturn data.json();\n\t\t});\n\t}\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _toConsumableArray2 = __webpack_require__(57);\n\t\n\tvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\t\n\tvar _extends2 = __webpack_require__(56);\n\t\n\tvar _extends3 = _interopRequireDefault(_extends2);\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _reduxActions = __webpack_require__(12);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar initialState = {\n\t\tpage: 1,\n\t\tfetching: false,\n\t\timages: []\n\t};\n\t\n\texports.default = (0, _reduxActions.handleActions)({\n\t\t'fetching images': function fetchingImages(state, action) {\n\t\t\treturn (0, _extends3.default)({}, state, {\n\t\t\t\tfetching: true\n\t\t\t});\n\t\t},\n\t\t'fetched images': function fetchedImages(state, action) {\n\t\t\treturn {\n\t\t\t\tfetching: false,\n\t\t\t\tpage: state.page + 1,\n\t\t\t\timages: [].concat((0, _toConsumableArray3.default)(state.images), (0, _toConsumableArray3.default)(action.payload.results))\n\t\t\t};\n\t\t}\n\t}, initialState);\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _redux = __webpack_require__(15);\n\t\n\tvar _images = __webpack_require__(50);\n\t\n\tvar _images2 = _interopRequireDefault(_images);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = (0, _redux.combineReducers)({\n\t\timages: _images2.default\n\t});\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vue = __webpack_require__(26);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _revue = __webpack_require__(45);\n\t\n\tvar _revue2 = _interopRequireDefault(_revue);\n\t\n\tvar _redux = __webpack_require__(15);\n\t\n\tvar _reduxThunk = __webpack_require__(41);\n\t\n\tvar _reduxThunk2 = _interopRequireDefault(_reduxThunk);\n\t\n\tvar _reduxPromise = __webpack_require__(40);\n\t\n\tvar _reduxPromise2 = _interopRequireDefault(_reduxPromise);\n\t\n\tvar _reducers = __webpack_require__(51);\n\t\n\tvar _reducers2 = _interopRequireDefault(_reducers);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar store = (0, _redux.createStore)(_reducers2.default, (0, _redux.applyMiddleware)(_reduxPromise2.default, _reduxThunk2.default));\n\texports.default = new _revue2.default(_vue2.default, store);\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _store = __webpack_require__(52);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _actions = __webpack_require__(48);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// <style>\n\t// \tbody {\n\t// \t\tfont: 16px/1.7 \"lucida grande\" ,\"lucida sans unicode\",lucida,\"Helvetica Neue\",helvetica,\"Hiragino Sans GB\",\"Microsoft YaHei\",\"WenQuanYi Micro Hei\",sans-serif;\n\t// \t}\n\t// \tbody, ul, h1, h2, h3, h4 {\n\t// \t\tmargin: 0;\n\t// \t}\n\t// \tul {\n\t// \t\tpadding-left: 0;\n\t// \t\tlist-style: none;\n\t// \t}\n\t// \t.main {\n\t// \t\tmax-width: 400px;\n\t// \t\tmargin: 20px auto;\n\t// \t\toverflow: hidden;\n\t// \t}\n\t// \t.images-wrapper {\n\t// \t\twidth: 400px;\n\t// \t\theight: 600px;\n\t// \t\toverflow: hidden;\n\t// \t\twhite-space: nowrap;\n\t// \t\tposition: relative;\n\t// \t}\n\t// \t.images {\n\t// \t\tposition: absolute;\n\t// \t\tleft: 0;\n\t// \t\twidth: 400px;\n\t// \t\theight: 600px;\n\t// \t\t.image {\n\t// \t\t\tdisplay: inline-block;\n\t// \t\t\t.cover {\n\t// \t\t\t\twidth: 400px;\n\t// \t\t\t\theight: 400px;\n\t// \t\t\t\tbackground-size: cover;\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// </style>\n\t//\n\t// <template>\n\t// \t<div class=\"main\">\n\t// \t\t<div class=\"images-wrapper\">\n\t// \t\t\t<ul class=\"images\" :style=\"{left: '-' + index * 400 + 'px'}\">\n\t// \t\t\t\t<li\n\t// \t\t\t\t\tclass=\"image\"\n\t// \t\t\t\t\tv-for=\"image in images.images\"\n\t// \t\t\t\t\ttrack-by=\"$index\"\n\t// \t\t\t\t\tv-touch:swipeleft=\"handleSwipe($index + 1)\"\n\t// \t\t\t\t\tv-touch:swiperight=\"handleSwipe($index - 1)\">\n\t// \t\t\t\t\t<div class=\"cover\" :style=\"{backgroundImage: 'url(' + image.url + ')'}\"></div>\n\t// \t\t\t\t\t<h2 class=\"name\">{{ image.who }}</h2>\n\t// \t\t\t\t</li>\n\t// \t\t\t</ul>\n\t// \t\t</div>\n\t// \t</div>\n\t// </template>\n\t//\n\t// <script>\n\texports.default = {\n\t\tdata: function data() {\n\t\t\treturn {\n\t\t\t\timages: _store2.default.state.images,\n\t\t\t\tindex: 0\n\t\t\t};\n\t\t},\n\t\tcreated: function created() {\n\t\t\tthis.$subscribe('images');\n\t\t},\n\t\tready: function ready() {\n\t\t\t_store2.default.dispatch((0, _actions.fetchImages)(this.images.page));\n\t\t},\n\t\n\t\tmethods: {\n\t\t\thandleSwipe: function handleSwipe(index) {\n\t\t\t\tif (index % 5 === 0) {\n\t\t\t\t\t_store2.default.dispatch((0, _actions.fetchImages)(this.images.page));\n\t\t\t\t}\n\t\t\t\tthis.index = index;\n\t\t\t}\n\t\t}\n\t};\n\t// </script>\n\t//\n\t/* generated by vue-loader */\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(58), __esModule: true };\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(59), __esModule: true };\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _Object$assign = __webpack_require__(55)[\"default\"];\n\t\n\texports[\"default\"] = _Object$assign || function (target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i];\n\t\n\t    for (var key in source) {\n\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  return target;\n\t};\n\t\n\texports.__esModule = true;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _from = __webpack_require__(54);\n\t\n\tvar _from2 = _interopRequireDefault(_from);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (arr) {\n\t  if (Array.isArray(arr)) {\n\t    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n\t      arr2[i] = arr[i];\n\t    }\n\t\n\t    return arr2;\n\t  } else {\n\t    return (0, _from2.default)(arr);\n\t  }\n\t};\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(81);\n\t__webpack_require__(79);\n\tmodule.exports = __webpack_require__(3).Array.from;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(80);\n\tmodule.exports = __webpack_require__(3).Object.assign;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(66);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// getting tag from 19.1.3.6 Object.prototype.toString()\n\tvar cof = __webpack_require__(17)\n\t  , TAG = __webpack_require__(1)('toStringTag')\n\t  // ES3 wrong here\n\t  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\t\n\tmodule.exports = function(it){\n\t  var O, T, B;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null'\n\t    // @@toStringTag case\n\t    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n\t    // builtinTag case\n\t    : ARG ? cof(O)\n\t    // ES3 arguments fallback\n\t    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n\t};\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(20)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(17);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// check on default Array iterator\n\tvar Iterators  = __webpack_require__(7)\n\t  , ITERATOR   = __webpack_require__(1)('iterator')\n\t  , ArrayProto = Array.prototype;\n\t\n\tmodule.exports = function(it){\n\t  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n\t};\n\n/***/ },\n/* 66 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// call something on iterator step with safe closing on error\n\tvar anObject = __webpack_require__(61);\n\tmodule.exports = function(iterator, fn, value, entries){\n\t  try {\n\t    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n\t  // 7.4.6 IteratorClose(iterator, completion)\n\t  } catch(e){\n\t    var ret = iterator['return'];\n\t    if(ret !== undefined)anObject(ret.call(iterator));\n\t    throw e;\n\t  }\n\t};\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $              = __webpack_require__(2)\n\t  , descriptor     = __webpack_require__(22)\n\t  , setToStringTag = __webpack_require__(23)\n\t  , IteratorPrototype = {};\n\t\n\t// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\t__webpack_require__(6)(IteratorPrototype, __webpack_require__(1)('iterator'), function(){ return this; });\n\t\n\tmodule.exports = function(Constructor, NAME, next){\n\t  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n\t  setToStringTag(Constructor, NAME + ' Iterator');\n\t};\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar LIBRARY        = __webpack_require__(71)\n\t  , $export        = __webpack_require__(4)\n\t  , redefine       = __webpack_require__(73)\n\t  , hide           = __webpack_require__(6)\n\t  , has            = __webpack_require__(21)\n\t  , Iterators      = __webpack_require__(7)\n\t  , $iterCreate    = __webpack_require__(68)\n\t  , setToStringTag = __webpack_require__(23)\n\t  , getProto       = __webpack_require__(2).getProto\n\t  , ITERATOR       = __webpack_require__(1)('iterator')\n\t  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n\t  , FF_ITERATOR    = '@@iterator'\n\t  , KEYS           = 'keys'\n\t  , VALUES         = 'values';\n\t\n\tvar returnThis = function(){ return this; };\n\t\n\tmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n\t  $iterCreate(Constructor, NAME, next);\n\t  var getMethod = function(kind){\n\t    if(!BUGGY && kind in proto)return proto[kind];\n\t    switch(kind){\n\t      case KEYS: return function keys(){ return new Constructor(this, kind); };\n\t      case VALUES: return function values(){ return new Constructor(this, kind); };\n\t    } return function entries(){ return new Constructor(this, kind); };\n\t  };\n\t  var TAG        = NAME + ' Iterator'\n\t    , DEF_VALUES = DEFAULT == VALUES\n\t    , VALUES_BUG = false\n\t    , proto      = Base.prototype\n\t    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n\t    , $default   = $native || getMethod(DEFAULT)\n\t    , methods, key;\n\t  // Fix native\n\t  if($native){\n\t    var IteratorPrototype = getProto($default.call(new Base));\n\t    // Set @@toStringTag to native iterators\n\t    setToStringTag(IteratorPrototype, TAG, true);\n\t    // FF fix\n\t    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n\t    // fix Array#{values, @@iterator}.name in V8 / FF\n\t    if(DEF_VALUES && $native.name !== VALUES){\n\t      VALUES_BUG = true;\n\t      $default = function values(){ return $native.call(this); };\n\t    }\n\t  }\n\t  // Define iterator\n\t  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n\t    hide(proto, ITERATOR, $default);\n\t  }\n\t  // Plug for library\n\t  Iterators[NAME] = $default;\n\t  Iterators[TAG]  = returnThis;\n\t  if(DEFAULT){\n\t    methods = {\n\t      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n\t      keys:    IS_SET      ? $default : getMethod(KEYS),\n\t      entries: !DEF_VALUES ? $default : getMethod('entries')\n\t    };\n\t    if(FORCED)for(key in methods){\n\t      if(!(key in proto))redefine(proto, key, methods[key]);\n\t    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n\t  }\n\t  return methods;\n\t};\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ITERATOR     = __webpack_require__(1)('iterator')\n\t  , SAFE_CLOSING = false;\n\t\n\ttry {\n\t  var riter = [7][ITERATOR]();\n\t  riter['return'] = function(){ SAFE_CLOSING = true; };\n\t  Array.from(riter, function(){ throw 2; });\n\t} catch(e){ /* empty */ }\n\t\n\tmodule.exports = function(exec, skipClosing){\n\t  if(!skipClosing && !SAFE_CLOSING)return false;\n\t  var safe = false;\n\t  try {\n\t    var arr  = [7]\n\t      , iter = arr[ITERATOR]();\n\t    iter.next = function(){ safe = true; };\n\t    arr[ITERATOR] = function(){ return iter; };\n\t    exec(arr);\n\t  } catch(e){ /* empty */ }\n\t  return safe;\n\t};\n\n/***/ },\n/* 71 */\n/***/ function(module, exports) {\n\n\tmodule.exports = true;\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar $        = __webpack_require__(2)\n\t  , toObject = __webpack_require__(25)\n\t  , IObject  = __webpack_require__(64);\n\t\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = __webpack_require__(20)(function(){\n\t  var a = Object.assign\n\t    , A = {}\n\t    , B = {}\n\t    , S = Symbol()\n\t    , K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function(k){ B[k] = k; });\n\t  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n\t}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n\t  var T     = toObject(target)\n\t    , $$    = arguments\n\t    , $$len = $$.length\n\t    , index = 1\n\t    , getKeys    = $.getKeys\n\t    , getSymbols = $.getSymbols\n\t    , isEnum     = $.isEnum;\n\t  while($$len > index){\n\t    var S      = IObject($$[index++])\n\t      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n\t      , length = keys.length\n\t      , j      = 0\n\t      , key;\n\t    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n\t  }\n\t  return T;\n\t} : Object.assign;\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(6);\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(5)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(24)\n\t  , defined   = __webpack_require__(19);\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tmodule.exports = function(TO_STRING){\n\t  return function(that, pos){\n\t    var s = String(defined(that))\n\t      , i = toInteger(pos)\n\t      , l = s.length\n\t      , a, b;\n\t    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(24)\n\t  , min       = Math.min;\n\tmodule.exports = function(it){\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n/***/ },\n/* 77 */\n/***/ function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar classof   = __webpack_require__(62)\n\t  , ITERATOR  = __webpack_require__(1)('iterator')\n\t  , Iterators = __webpack_require__(7);\n\tmodule.exports = __webpack_require__(3).getIteratorMethod = function(it){\n\t  if(it != undefined)return it[ITERATOR]\n\t    || it['@@iterator']\n\t    || Iterators[classof(it)];\n\t};\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ctx         = __webpack_require__(18)\n\t  , $export     = __webpack_require__(4)\n\t  , toObject    = __webpack_require__(25)\n\t  , call        = __webpack_require__(67)\n\t  , isArrayIter = __webpack_require__(65)\n\t  , toLength    = __webpack_require__(76)\n\t  , getIterFn   = __webpack_require__(78);\n\t$export($export.S + $export.F * !__webpack_require__(70)(function(iter){ Array.from(iter); }), 'Array', {\n\t  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n\t  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n\t    var O       = toObject(arrayLike)\n\t      , C       = typeof this == 'function' ? this : Array\n\t      , $$      = arguments\n\t      , $$len   = $$.length\n\t      , mapfn   = $$len > 1 ? $$[1] : undefined\n\t      , mapping = mapfn !== undefined\n\t      , index   = 0\n\t      , iterFn  = getIterFn(O)\n\t      , length, result, step, iterator;\n\t    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);\n\t    // if object isn't iterable or it's array with default iterator - use simple case\n\t    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n\t      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n\t        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;\n\t      }\n\t    } else {\n\t      length = toLength(O.length);\n\t      for(result = new C(length); length > index; index++){\n\t        result[index] = mapping ? mapfn(O[index], index) : O[index];\n\t      }\n\t    }\n\t    result.length = index;\n\t    return result;\n\t  }\n\t});\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(4);\n\t\n\t$export($export.S + $export.F, 'Object', {assign: __webpack_require__(72)});\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $at  = __webpack_require__(75)(true);\n\t\n\t// 21.1.3.27 String.prototype[@@iterator]()\n\t__webpack_require__(69)(String, 'String', function(iterated){\n\t  this._t = String(iterated); // target\n\t  this._i = 0;                // next index\n\t// 21.1.5.2.1 %StringIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , index = this._i\n\t    , point;\n\t  if(index >= O.length)return {value: undefined, done: true};\n\t  point = $at(O, index);\n\t  this._i += point.length;\n\t  return {value: point, done: false};\n\t});\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 83 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=main><div class=images-wrapper><ul class=images :style=\\\"{left: '-' + index * 400 + 'px'}\\\"><li class=image v-for=\\\"image in images.images\\\" track-by=$index v-touch:swipeleft=\\\"handleSwipe($index + 1)\\\" v-touch:swiperight=\\\"handleSwipe($index - 1)\\\"><div class=cover :style=\\\"{backgroundImage: 'url(' + image.url + ')'}\\\"></div><h2 class=name>{{ image.who }}</h2></li></ul></div></div>\";\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(82)\n\t__vue_script__ = __webpack_require__(53)\n\t__vue_template__ = __webpack_require__(83)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/egoist/dev/fuli/src/app.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.98fc2a338d525f462ea1.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a5b2fe9dc8cb8141395f\n **/","import Vue from 'vue'\nimport touch from 'vue-touch'\nimport app from './app'\n\nif (__DEV__) {\n\tVue.config.debug = true\n}\n\nVue.use(touch)\n\nnew Vue({\n\tel: 'body',\n\tcomponents: {app}\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","var store  = require('./$.shared')('wks')\n  , uid    = require('./$.uid')\n  , Symbol = require('./$.global').Symbol;\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.wks.js\n ** module id = 1\n ** module chunks = 0\n **/","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.js\n ** module id = 2\n ** module chunks = 0\n **/","var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.core.js\n ** module id = 3\n ** module chunks = 0\n **/","var global    = require('./$.global')\n  , core      = require('./$.core')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.export.js\n ** module id = 4\n ** module chunks = 0\n **/","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.global.js\n ** module id = 5\n ** module chunks = 0\n **/","var $          = require('./$')\n  , createDesc = require('./$.property-desc');\nmodule.exports = require('./$.descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.hide.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = {};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.iterators.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports.isFSA = isFSA;\nexports.isError = isError;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lodashIsplainobject = require('lodash.isplainobject');\n\nvar _lodashIsplainobject2 = _interopRequireDefault(_lodashIsplainobject);\n\nvar validKeys = ['type', 'payload', 'error', 'meta'];\n\nfunction isValidKey(key) {\n  return validKeys.indexOf(key) > -1;\n}\n\nfunction isFSA(action) {\n  return _lodashIsplainobject2['default'](action) && typeof action.type !== 'undefined' && Object.keys(action).every(isValidKey);\n}\n\nfunction isError(action) {\n  return action.error === true;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flux-standard-action/lib/index.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * lodash 3.0.6 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null &&\n    !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8 which returns 'object' for typed array constructors, and\n  // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isArguments;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.isarguments/index.js\n ** module id = 9\n ** module chunks = 0\n **/","var isHostObject = require('./_isHostObject'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = Function.prototype.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototypeOf = Object.getPrototypeOf;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = objectProto;\n  if (typeof value.constructor == 'function') {\n    proto = getPrototypeOf(value);\n  }\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isPlainObject.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports['default'] = handleAction;\n\nvar _fluxStandardAction = require('flux-standard-action');\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\n\nfunction handleAction(type, reducers) {\n  return function (state, action) {\n    // If action type does not match, return previous state\n    if (action.type !== type) return state;\n\n    var handlerKey = _fluxStandardAction.isError(action) ? 'throw' : 'next';\n\n    // If function is passed instead of map, use as reducer\n    if (isFunction(reducers)) {\n      reducers.next = reducers['throw'] = reducers;\n    }\n\n    // Otherwise, assume an action map was passed\n    var reducer = reducers[handlerKey];\n\n    return isFunction(reducer) ? reducer(state, action) : state;\n  };\n}\n\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux-actions/lib/handleAction.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _createAction = require('./createAction');\n\nvar _createAction2 = _interopRequireDefault(_createAction);\n\nvar _handleAction = require('./handleAction');\n\nvar _handleAction2 = _interopRequireDefault(_handleAction);\n\nvar _handleActions = require('./handleActions');\n\nvar _handleActions2 = _interopRequireDefault(_handleActions);\n\nexports.createAction = _createAction2['default'];\nexports.handleAction = _handleAction2['default'];\nexports.handleActions = _handleActions2['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux-actions/lib/index.js\n ** module id = 12\n ** module chunks = 0\n **/","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = compose;\n/**\n * Composes single-argument functions from right to left.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing functions from right to\n * left. For example, compose(f, g, h) is identical to arg => f(g(h(arg))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return function () {\n    if (funcs.length === 0) {\n      return arguments.length <= 0 ? undefined : arguments[0];\n    }\n\n    var last = funcs[funcs.length - 1];\n    var rest = funcs.slice(0, -1);\n\n    return rest.reduceRight(function (composed, f) {\n      return f(composed);\n    }, last.apply(undefined, arguments));\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/compose.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports.ActionTypes = undefined;\nexports[\"default\"] = createStore;\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = exports.ActionTypes = {\n  INIT: '@@redux/INIT'\n};\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [initialState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} enhancer The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, initialState, enhancer) {\n  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = initialState;\n    initialState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, initialState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = initialState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all states changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!(0, _isPlainObject2[\"default\"])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/createStore.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;\n\nvar _createStore = require('./createStore');\n\nvar _createStore2 = _interopRequireDefault(_createStore);\n\nvar _combineReducers = require('./combineReducers');\n\nvar _combineReducers2 = _interopRequireDefault(_combineReducers);\n\nvar _bindActionCreators = require('./bindActionCreators');\n\nvar _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);\n\nvar _applyMiddleware = require('./applyMiddleware');\n\nvar _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  (0, _warning2[\"default\"])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexports.createStore = _createStore2[\"default\"];\nexports.combineReducers = _combineReducers2[\"default\"];\nexports.bindActionCreators = _bindActionCreators2[\"default\"];\nexports.applyMiddleware = _applyMiddleware2[\"default\"];\nexports.compose = _compose2[\"default\"];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/index.js\n ** module id = 15\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/utils/warning.js\n ** module id = 16\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.cof.js\n ** module id = 17\n ** module chunks = 0\n **/","// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.ctx.js\n ** module id = 18\n ** module chunks = 0\n **/","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.defined.js\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.fails.js\n ** module id = 20\n ** module chunks = 0\n **/","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.has.js\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.property-desc.js\n ** module id = 22\n ** module chunks = 0\n **/","var def = require('./$').setDesc\n  , has = require('./$.has')\n  , TAG = require('./$.wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.set-to-string-tag.js\n ** module id = 23\n ** module chunks = 0\n **/","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.to-integer.js\n ** module id = 24\n ** module chunks = 0\n **/","// 7.1.13 ToObject(argument)\nvar defined = require('./$.defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.to-object.js\n ** module id = 25\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.16\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind$1(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a non-enumerable property\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nvar isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\nvar isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} str\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE$1 = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE$1.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text$1 = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether or not to handle fully object properties which\n   * are already backed by getters and seters. Depending on\n   * use case and environment, this might introduce non-neglible\n   * performance penalties.\n   */\n  convertAllProperties: false,\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on$1(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !(el instanceof SVGElement)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && el.content instanceof DocumentFragment) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__vue_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\nvar reservedTagRE = /^(slot|partial|component)$/;\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  // if a prop is not provided and is not required,\n  // skip the check.\n  if (prop.raw === null && !prop.required) {\n    return true;\n  }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator.call(null, value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var def;\n    var ids = Object.keys(components);\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar uid$3 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$3++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction protoAugment(target, src) {\n  target.__proto__ = src;\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  // cater for pre-defined getter/setters\n  var getter, setter;\n  if (config.convertAllProperties) {\n    var property = Object.getOwnPropertyDescriptor(obj, key);\n    if (property && property.configurable === false) {\n      return;\n    }\n    getter = property && property.get;\n    setter = property && property.set;\n  }\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind$1,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on$1,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tinitProp: initProp,\n\tassertProp: assertProp,\n\tcoerceProp: coerceProp,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    if (process.env.NODE_ENV !== 'production') {\n      this._runtimeData = options.data;\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    return new Function('scope', 'return ' + body + ';');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // if an internal watcher is pushed, but the internal\n    // queue is already depleted, we run it immediately.\n    if (internalQueueDepleted && !watcher.user) {\n      watcher.run();\n      return;\n    }\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String} expression\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = isFn ? expOrFn.toString() : expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = Object.create(null);\n  this.newDeps = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDeps[id]) {\n    this.newDeps[id] = dep;\n    if (!this.deps[id]) {\n      this.deps[id] = dep;\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDeps = Object.create(null);\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var ids = Object.keys(this.deps);\n  var i = ids.length;\n  while (i--) {\n    var id = ids[i];\n    if (!this.newDeps[id]) {\n      this.deps[id].removeSub(this);\n    }\n  }\n  this.deps = this.newDeps;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var depIds = Object.keys(this.deps);\n  var i = depIds.length;\n  while (i--) {\n    this.deps[depIds[i]].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var depIds = Object.keys(this.deps);\n    var i = depIds.length;\n    while (i--) {\n      this.deps[depIds[i]].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on = {\n\n  acceptStatement: true,\n  priority: ON,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on$1(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on$1(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.listener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.listener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && node.content instanceof DocumentFragment;\n}\n\nvar tagRE$1 = /<([\\w:]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (template instanceof DocumentFragment) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__vue_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__vfrag__ = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__vfrag__ = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : el.outerHTML);\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar vIf = {\n\n  priority: IF,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseFactory = new FragmentFactory(this.vm, next);\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n      this.factory = new FragmentFactory(this.vm, el);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseFactory && !this.elseFrag) {\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar uid$1 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in items\" syntax\n    var inMatch = this.expression.match(/(.*) in (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$1;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          frag.scope[alias] = value;\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    this.vm._watchers = this.vm._watchers.filter(function (w) {\n      return w.active;\n    });\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    defineReactive(scope, alias, value);\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__vfrag__ = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__vfrag__;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__vfrag__;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\nvar text = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\n// must export plain object\nvar publicDirectives = {\n  text: text,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on,\n  bind: bind,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind$1(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n\n  // Important hack:\n  // in Chrome, if a just-entered element is applied the\n  // leave class while its interpolated property still has\n  // a very small value (within one frame), Chrome will\n  // skip the leave transition entirely and not firing the\n  // transtionend event. Therefore we need to protected\n  // against such cases using a one-frame timeout.\n  this.justEntered = true;\n  var self = this;\n  setTimeout(function () {\n    self.justEntered = false;\n  }, 17);\n\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on$1(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nvar transition = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    // apply on closest vm\n    el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        child[childKey] = val;\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   */\n\n  resolveComponent: function resolveComponent(id, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || id;\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(id, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHook = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHook && !cached) {\n      this.waitingFor = newComponent;\n      activateHook.call(newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      this.waitingFor.$destroy();\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (process.env.NODE_ENV !== 'production') {\n      if (current) current._inactive = true;\n      target._inactive = false;\n    }\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    var keys = this.prevKeys = Object.keys(value);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      if (value[key]) {\n        addClass(this.el, key);\n      } else {\n        removeClass(this.el, key);\n      }\n    }\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        addClass(this.el, value[i]);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (key && (!value || !contains$1(value, key))) {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nfunction contains$1(value, key) {\n  return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n}\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition\n};\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (options.required) {\n      // warn missing required\n      process.env.NODE_ENV !== 'production' && warn('Missing required prop: ' + name);\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, getDefault(vm, options));\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (vm._context) {\n          if (prop.mode === propBindingModes.ONE_TIME) {\n            // one time binding\n            value = (scope || vm._context).$get(prop.parentPath);\n            initProp(vm, prop, value);\n          } else {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          }\n        } else {\n            process.env.NODE_ENV !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n          }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value\n        value = options.type === Boolean && raw === '' ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getDefault(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// terminal directives\nvar terminalDirectives = ['for', 'if'];\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(el.attributes, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: publicDirectives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) return;\n  // special case: give named slot a higher priority\n  // than unnamed slots\n  if (tag === 'slot' && hasBindAttr(el, 'name')) {\n    tag = '_namedSlot';\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n  var value, dirName;\n  for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n    dirName = terminalDirectives[i];\n    value = el.getAttribute('v-' + dirName);\n    if (value != null) {\n      return makeTerminalNodeLinkFn(el, dirName, value, options);\n    }\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} [def]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    // either an element directive, or if/for\n    def: def || publicDirectives[dirName]\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', publicDirectives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', publicDirectives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', publicDirectives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (el instanceof DocumentFragment) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\tterminalDirectives: terminalDirectives,\n\ttransclude: transclude\n});\n\nfunction stateMixin (Vue) {\n\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var propsData = this._data;\n    var optionsDataFn = this.$options.data;\n    var optionsData = optionsDataFn && optionsDataFn();\n    var runtimeData;\n    if (process.env.NODE_ENV !== 'production') {\n      runtimeData = (typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData) || {};\n      this._runtimeData = null;\n    }\n    if (optionsData) {\n      this._data = optionsData;\n      for (var prop in propsData) {\n        if (process.env.NODE_ENV !== 'production' && hasOwn(optionsData, prop) && !hasOwn(runtimeData, prop)) {\n          warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n        }\n        if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n          set(optionsData, prop, propsData[prop]);\n        }\n      }\n    }\n    var data = this._data;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      this._proxy(key);\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n          def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind$1(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {String} name\n * @param {Node} el\n * @param {Vue} vm\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} raw\n * @param {Object} def - directive definition object\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n *\n * @param {Object} def\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = params[i];\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on$1(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (el instanceof DocumentFragment) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {String} name - directive name\n   * @param {Node} node   - target node\n   * @param {Object} desc - parsed directive descriptor\n   * @param {Object} def  - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String} id\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (id, cb) {\n    var factory = resolveAsset(this.$options, 'components', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(factory, 'component', id);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory(function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nfunction globalAPI (Vue) {\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text$1,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n}\n\nvar filterRE = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      for (var key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install APIs\nglobalAPI(Vue);\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\n// This is the elementDirective that handles <content>\n// transclusions. It relies on the raw content of an\n// instance being stored as `$options._content` during\n// the transclude phase.\n\n// We are exporting two versions, one for named and one\n// for unnamed, because the unnamed slots must be compiled\n// AFTER all named slots have selected their content. So\n// we need to give them different priorities in the compilation\n// process. (See #1965)\n\nvar slot = {\n\n  priority: SLOT,\n\n  bind: function bind() {\n    var host = this.vm;\n    var raw = host.$options._content;\n    if (!raw) {\n      this.fallback();\n      return;\n    }\n    var context = host._context;\n    var slotName = this.params && this.params.name;\n    if (!slotName) {\n      // Default slot\n      this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n    } else {\n      // Named slot\n      var selector = '[slot=\"' + slotName + '\"]';\n      var nodes = raw.querySelectorAll(selector);\n      if (nodes.length) {\n        this.tryCompile(extractFragment(nodes, raw), context, host);\n      } else {\n        this.fallback();\n      }\n    }\n  },\n\n  tryCompile: function tryCompile(content, context, host) {\n    if (content.hasChildNodes()) {\n      this.compile(content, context, host);\n    } else {\n      this.fallback();\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar namedSlot = extend(extend({}, slot), {\n  priority: slot.priority + 1,\n  params: ['name']\n});\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @param {Element} parent\n * @param {Boolean} main\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent, main) {\n  var frag = document.createDocumentFragment();\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    // if this is the main outlet, we want to skip all\n    // previously selected nodes;\n    // otherwise, we want to mark the node as selected.\n    // clone the node so the original raw content remains\n    // intact. this ensures proper re-compilation in cases\n    // where the outlet is inside a conditional block\n    if (main && !node.__v_selected) {\n      append(node);\n    } else if (!main && node.parentNode === parent) {\n      node.__v_selected = true;\n      append(node);\n    }\n  }\n  return frag;\n\n  function append(node) {\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      node = parseTemplate(node);\n    }\n    node = cloneNode(node);\n    frag.appendChild(node);\n  }\n}\n\nvar elementDirectives = {\n  slot: slot,\n  _namedSlot: namedSlot, // same as slot but with higher priority\n  partial: partial\n};\n\nVue.version = '1.0.16';\n\n/**\n * Vue and every constructor that extends Vue has an\n * associated options object, which can be accessed during\n * compilation steps as `this.constructor.options`.\n *\n * These can be seen as the default options of every\n * Vue instance.\n */\n\nVue.options = {\n  directives: publicDirectives,\n  elementDirectives: elementDirectives,\n  filters: filters,\n  transitions: {},\n  components: {},\n  partials: {},\n  replace: true\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (devtools) {\n  devtools.emit('init', Vue);\n} else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(navigator.userAgent)) {\n  console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/vue/dist/vue.common.js\n ** module id = 26\n ** module chunks = 0\n **/","/*! Hammer.JS - v2.0.6 - 2015-12-23\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2015 Jorik Tangelder;\n * Licensed under the  license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean=false} [merge]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.allow = true; // used by Input.TouchMouse to disable mouse events\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down, and mouse events are allowed (see the TouchMouse input)\n        if (!this.pressed || !this.allow) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        // when we're in a touch event, so  block all upcoming mouse events\n        // most mobile browser also emit mouseevents, right after touchstart\n        if (isTouch) {\n            this.mouse.allow = false;\n        } else if (isMouse && !this.mouse.allow) {\n            return;\n        }\n\n        // reset the allowMouse when we're done\n        if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n            this.mouse.allow = true;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        // not needed with native support for the touchAction property\n        if (NATIVE_TOUCH_ACTION) {\n            return;\n        }\n\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE);\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.6';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    each(manager.options.cssProps, function(value, name) {\n        element.style[prefixed(element.style, name)] = add ? value : '';\n    });\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hammerjs/hammer.js\n ** module id = 27\n ** module chunks = 0\n **/","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isomorphic-fetch/fetch-npm-browserify.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * Creates a base function for methods like `_.forIn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = baseFor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash._basefor/index.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]',\n    funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.isarray/index.js\n ** module id = 30\n ** module chunks = 0\n **/","/**\n * lodash 3.2.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseFor = require('lodash._basefor'),\n    isArguments = require('lodash.isarguments'),\n    keysIn = require('lodash.keysin');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * The base implementation of `_.forIn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForIn(object, iteratee) {\n  return baseFor(object, iteratee, keysIn);\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * **Note:** This method assumes objects created by the `Object` constructor\n * have no inherited enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  var Ctor;\n\n  // Exit early for non `Object` objects.\n  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n    return false;\n  }\n  // IE < 9 iterates inherited properties before own properties. If the first\n  // iterated property is an object's own property then there are no inherited\n  // enumerable properties.\n  var result;\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  baseForIn(value, function(subValue, key) {\n    result = key;\n  });\n  return result === undefined || hasOwnProperty.call(value, result);\n}\n\nmodule.exports = isPlainObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.isplainobject/index.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * lodash 3.0.8 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar isArguments = require('lodash.isarguments'),\n    isArray = require('lodash.isarray');\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash.keysin/index.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\nmodule.exports = isHostObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/_isHostObject.js\n ** module id = 33\n ** module chunks = 0\n **/","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/isObjectLike.js\n ** module id = 34\n ** module chunks = 0\n **/","(function (root, factory){\n  'use strict';\n\n  /*istanbul ignore next:cant test*/\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else {\n    // Browser globals\n    root.objectPath = factory();\n  }\n})(this, function(){\n  'use strict';\n\n  var\n    toStr = Object.prototype.toString,\n    _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  function isEmpty(value){\n    if (!value) {\n      return true;\n    }\n    if (isArray(value) && value.length === 0) {\n        return true;\n    } else if (!isString(value)) {\n        for (var i in value) {\n            if (_hasOwnProperty.call(value, i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n  }\n\n  function toString(type){\n    return toStr.call(type);\n  }\n\n  function isNumber(value){\n    return typeof value === 'number' || toString(value) === \"[object Number]\";\n  }\n\n  function isString(obj){\n    return typeof obj === 'string' || toString(obj) === \"[object String]\";\n  }\n\n  function isObject(obj){\n    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\n  }\n\n  function isArray(obj){\n    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';\n  }\n\n  function isBoolean(obj){\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\n  }\n\n  function getKey(key){\n    var intKey = parseInt(key);\n    if (intKey.toString() === key) {\n      return intKey;\n    }\n    return key;\n  }\n\n  function set(obj, path, value, doNotReplace){\n    if (isNumber(path)) {\n      path = [path];\n    }\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if (isString(path)) {\n      return set(obj, path.split('.').map(getKey), value, doNotReplace);\n    }\n    var currentPath = path[0];\n\n    if (path.length === 1) {\n      var oldVal = obj[currentPath];\n      if (oldVal === void 0 || !doNotReplace) {\n        obj[currentPath] = value;\n      }\n      return oldVal;\n    }\n\n    if (obj[currentPath] === void 0) {\n      //check if we assume an array\n      if(isNumber(path[1])) {\n        obj[currentPath] = [];\n      } else {\n        obj[currentPath] = {};\n      }\n    }\n\n    return set(obj[currentPath], path.slice(1), value, doNotReplace);\n  }\n\n  function del(obj, path) {\n    if (isNumber(path)) {\n      path = [path];\n    }\n\n    if (isEmpty(obj)) {\n      return void 0;\n    }\n\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if(isString(path)) {\n      return del(obj, path.split('.'));\n    }\n\n    var currentPath = getKey(path[0]);\n    var oldVal = obj[currentPath];\n\n    if(path.length === 1) {\n      if (oldVal !== void 0) {\n        if (isArray(obj)) {\n          obj.splice(currentPath, 1);\n        } else {\n          delete obj[currentPath];\n        }\n      }\n    } else {\n      if (obj[currentPath] !== void 0) {\n        return del(obj[currentPath], path.slice(1));\n      }\n    }\n\n    return obj;\n  }\n\n  var objectPath = function(obj) {\n    return Object.keys(objectPath).reduce(function(proxy, prop) {\n      if (typeof objectPath[prop] === 'function') {\n        proxy[prop] = objectPath[prop].bind(objectPath, obj);\n      }\n\n      return proxy;\n    }, {});\n  };\n\n  objectPath.has = function (obj, path) {\n    if (isEmpty(obj)) {\n      return false;\n    }\n\n    if (isNumber(path)) {\n      path = [path];\n    } else if (isString(path)) {\n      path = path.split('.');\n    }\n\n    if (isEmpty(path) || path.length === 0) {\n      return false;\n    }\n\n    for (var i = 0; i < path.length; i++) {\n      var j = path[i];\n      if ((isObject(obj) || isArray(obj)) && _hasOwnProperty.call(obj, j)) {\n        obj = obj[j];\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  objectPath.ensureExists = function (obj, path, value){\n    return set(obj, path, value, true);\n  };\n\n  objectPath.set = function (obj, path, value, doNotReplace){\n    return set(obj, path, value, doNotReplace);\n  };\n\n  objectPath.insert = function (obj, path, value, at){\n    var arr = objectPath.get(obj, path);\n    at = ~~at;\n    if (!isArray(arr)) {\n      arr = [];\n      objectPath.set(obj, path, arr);\n    }\n    arr.splice(at, 0, value);\n  };\n\n  objectPath.empty = function(obj, path) {\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if (isEmpty(obj)) {\n      return void 0;\n    }\n\n    var value, i;\n    if (!(value = objectPath.get(obj, path))) {\n      return obj;\n    }\n\n    if (isString(value)) {\n      return objectPath.set(obj, path, '');\n    } else if (isBoolean(value)) {\n      return objectPath.set(obj, path, false);\n    } else if (isNumber(value)) {\n      return objectPath.set(obj, path, 0);\n    } else if (isArray(value)) {\n      value.length = 0;\n    } else if (isObject(value)) {\n      for (i in value) {\n        if (_hasOwnProperty.call(value, i)) {\n          delete value[i];\n        }\n      }\n    } else {\n      return objectPath.set(obj, path, null);\n    }\n  };\n\n  objectPath.push = function (obj, path /*, values */){\n    var arr = objectPath.get(obj, path);\n    if (!isArray(arr)) {\n      arr = [];\n      objectPath.set(obj, path, arr);\n    }\n\n    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\n  };\n\n  objectPath.coalesce = function (obj, paths, defaultValue) {\n    var value;\n\n    for (var i = 0, len = paths.length; i < len; i++) {\n      if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n        return value;\n      }\n    }\n\n    return defaultValue;\n  };\n\n  objectPath.get = function (obj, path, defaultValue){\n    if (isNumber(path)) {\n      path = [path];\n    }\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if (isEmpty(obj)) {\n      return defaultValue;\n    }\n    if (isString(path)) {\n      return objectPath.get(obj, path.split('.'), defaultValue);\n    }\n\n    var currentPath = getKey(path[0]);\n\n    if (path.length === 1) {\n      if (obj[currentPath] === void 0) {\n        return defaultValue;\n      }\n      return obj[currentPath];\n    }\n\n    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\n  };\n\n  objectPath.del = function(obj, path) {\n    return del(obj, path);\n  };\n\n  return objectPath;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-path/index.js\n ** module id = 35\n ** module chunks = 0\n **/","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = reduceReducers;\n\nfunction reduceReducers() {\n  for (var _len = arguments.length, reducers = Array(_len), _key = 0; _key < _len; _key++) {\n    reducers[_key] = arguments[_key];\n  }\n\n  return function (previous, current) {\n    return reducers.reduce(function (p, r) {\n      return r(p, current);\n    }, previous);\n  };\n}\n\nmodule.exports = exports[\"default\"];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/reduce-reducers/lib/index.js\n ** module id = 36\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports['default'] = createAction;\nfunction identity(t) {\n  return t;\n}\n\nfunction createAction(type, actionCreator, metaCreator) {\n  var finalActionCreator = typeof actionCreator === 'function' ? actionCreator : identity;\n\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var action = {\n      type: type,\n      payload: finalActionCreator.apply(undefined, args)\n    };\n\n    if (args.length === 1 && args[0] instanceof Error) {\n      // Handle FSA errors where the payload is an Error object. Set error.\n      action.error = true;\n    }\n\n    if (typeof metaCreator === 'function') {\n      action.meta = metaCreator.apply(undefined, args);\n    }\n\n    return action;\n  };\n}\n\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux-actions/lib/createAction.js\n ** module id = 37\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports['default'] = handleActions;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _handleAction = require('./handleAction');\n\nvar _handleAction2 = _interopRequireDefault(_handleAction);\n\nvar _ownKeys = require('./ownKeys');\n\nvar _ownKeys2 = _interopRequireDefault(_ownKeys);\n\nvar _reduceReducers = require('reduce-reducers');\n\nvar _reduceReducers2 = _interopRequireDefault(_reduceReducers);\n\nfunction handleActions(handlers, defaultState) {\n  var reducers = _ownKeys2['default'](handlers).map(function (type) {\n    return _handleAction2['default'](type, handlers[type]);\n  });\n\n  return typeof defaultState !== 'undefined' ? function (state, action) {\n    if (state === undefined) state = defaultState;\n    return _reduceReducers2['default'].apply(undefined, reducers)(state, action);\n  } : _reduceReducers2['default'].apply(undefined, reducers);\n}\n\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux-actions/lib/handleActions.js\n ** module id = 38\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports['default'] = ownKeys;\n\nfunction ownKeys(object) {\n  if (typeof Reflect !== 'undefined' && typeof Reflect.ownKeys === 'function') {\n    return Reflect.ownKeys(object);\n  }\n\n  var keys = Object.getOwnPropertyNames(object);\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    keys = keys.concat(Object.getOwnPropertySymbols(object));\n  }\n\n  return keys;\n}\n\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux-actions/lib/ownKeys.js\n ** module id = 39\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = promiseMiddleware;\n\nvar _fluxStandardAction = require('flux-standard-action');\n\nfunction isPromise(val) {\n  return val && typeof val.then === 'function';\n}\n\nfunction promiseMiddleware(_ref) {\n  var dispatch = _ref.dispatch;\n\n  return function (next) {\n    return function (action) {\n      if (!_fluxStandardAction.isFSA(action)) {\n        return isPromise(action) ? action.then(dispatch) : next(action);\n      }\n\n      return isPromise(action.payload) ? action.payload.then(function (result) {\n        return dispatch(_extends({}, action, { payload: result }));\n      }, function (error) {\n        return dispatch(_extends({}, action, { payload: error, error: true }));\n      }) : next(action);\n    };\n  };\n}\n\nmodule.exports = exports['default'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux-promise/lib/index.js\n ** module id = 40\n ** module chunks = 0\n **/","'use strict';\n\nfunction thunkMiddleware(_ref) {\n  var dispatch = _ref.dispatch;\n  var getState = _ref.getState;\n\n  return function (next) {\n    return function (action) {\n      return typeof action === 'function' ? action(dispatch, getState) : next(action);\n    };\n  };\n}\n\nmodule.exports = thunkMiddleware;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux-thunk/lib/index.js\n ** module id = 41\n ** module chunks = 0\n **/","'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.__esModule = true;\nexports[\"default\"] = applyMiddleware;\n\nvar _compose = require('./compose');\n\nvar _compose2 = _interopRequireDefault(_compose);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, initialState, enhancer) {\n      var store = createStore(reducer, initialState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = _compose2[\"default\"].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/applyMiddleware.js\n ** module id = 42\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = bindActionCreators;\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/bindActionCreators.js\n ** module id = 43\n ** module chunks = 0\n **/","'use strict';\n\nexports.__esModule = true;\nexports[\"default\"] = combineReducers;\n\nvar _createStore = require('./createStore');\n\nvar _isPlainObject = require('lodash/isPlainObject');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _warning = require('./utils/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Reducer \"' + key + '\" returned undefined handling ' + actionName + '. ' + 'To ignore an action, you must explicitly return the previous state.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!(0, _isPlainObject2[\"default\"])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key);\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerSanity(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var sanityError;\n  try {\n    assertReducerSanity(finalReducers);\n  } catch (e) {\n    sanityError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var action = arguments[1];\n\n    if (sanityError) {\n      throw sanityError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);\n      if (warningMessage) {\n        (0, _warning2[\"default\"])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var i = 0; i < finalReducerKeys.length; i++) {\n      var key = finalReducerKeys[i];\n      var reducer = finalReducers[key];\n      var previousStateForKey = state[key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/redux/lib/combineReducers.js\n ** module id = 44\n ** module chunks = 0\n **/","'use strict';\n\nvar objectPath = require('object-path');\n\nvar babelHelpers = {};\nbabelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n\nbabelHelpers.classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nbabelHelpers.createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nbabelHelpers.slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nbabelHelpers;\n\n// credit: @gaearon\n// borrowed from https://github.com/rackt/react-redux/blob/master/src%2Futils%2FshallowEqual.js\n// with some modifications.\n\nfunction shallowEqual(objA, objB) {\n  // objA and objB is the same type\n  if ((typeof objA === 'undefined' ? 'undefined' : babelHelpers.typeof(objA)) === 'object') {\n    if (objA === objB) {\n      return true;\n    }\n\n    var keysA = Object.keys(objA);\n    var keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n\n    // Test for A's keys different from B.\n    var hasOwn = Object.prototype.hasOwnProperty;\n    for (var i = 0; i < keysA.length; i++) {\n      if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return objA === objB;\n  }\n}\n\n// to valid and match like `a.b.c as x.y.z`\nvar re = /^([a-zA-Z0-9\\._-]+)\\s{1,2}as\\s{1,2}([a-zA-Z0-9\\._-]+)$/i;\n\nvar isDev = process.env.NODE_ENV !== 'production';\n\n/**\n * Bind reduxStore to Vue instance\n *\n * @param {Vue} Vue\n * @param {object} store - redux store\n */\nfunction bindVue(Vue, store) {\n  Vue.prototype.$subscribe = function () {\n    var _this = this;\n\n    if (this._calledOnce) {\n      if (isDev) {\n        throw new Error('[Revue] You can only subscribe once, pass multi args to subscribe more than one state.');\n      }\n      return false;\n    }\n    this._calledOnce = true;\n    this._unsubscribers = [];\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    args.forEach(function (prop) {\n      // realProp: property name/path in your instance\n      // storeProp: property name/path in Redux store\n      var realProp = prop,\n          storeProp = prop;\n      if (re.test(prop)) {\n        var _prop$match = prop.match(re);\n\n        var _prop$match2 = babelHelpers.slicedToArray(_prop$match, 3);\n\n        storeProp = _prop$match2[1];\n        realProp = _prop$match2[2];\n      }\n      var currentValue = objectPath.get(store.getState(), storeProp);\n      var handleChange = function handleChange() {\n        var previousValue = currentValue;\n        currentValue = objectPath.get(store.getState(), storeProp);\n        if (!shallowEqual(previousValue, currentValue)) {\n          objectPath.set(_this._data, realProp, currentValue);\n        }\n      };\n      _this._unsubscribers.push(store.subscribe(handleChange));\n    });\n  };\n  Vue.prototype.$unsubscribe = function () {\n    if (this._unsubscribers && this._unsubscribers.length > 0) {\n      this._calledOnce = false;\n      this._unsubscribers.forEach(function (un) {\n        return un();\n      });\n    }\n  };\n}\n\n/**\n * Wrap redux actions (both action creators and async action)\n *\n * @param {Redux Store} - store\n * @param {object} - actions\n * @returns {Object}\n */\nfunction wrap(store, actions) {\n  if (isDev && (typeof actions === 'undefined' ? 'undefined' : babelHelpers.typeof(actions)) !== 'object') {\n    throw new TypeError('[Revue] Expected an Object');\n  }\n  // an action tree\n\n  var _loop = function _loop(name) {\n    var action = actions[name];\n    actions[name] = function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      store.dispatch(action.apply(null, args));\n    };\n  };\n\n  for (var name in actions) {\n    _loop(name);\n  }\n  return actions;\n}\n\nvar Revue = function () {\n  function Revue(Vue, reduxStore, reduxActions) {\n    babelHelpers.classCallCheck(this, Revue);\n\n    this.store = reduxStore;\n    bindVue(Vue, this.store);\n    if (reduxActions) {\n      this.reduxActions = wrap(this.store, reduxActions);\n    }\n  }\n\n  babelHelpers.createClass(Revue, [{\n    key: 'dispatch',\n    value: function dispatch() {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this.store.dispatch.apply(null, args);\n    }\n  }, {\n    key: 'state',\n    get: function get() {\n      return this.store.getState();\n    }\n  }, {\n    key: 'actions',\n    get: function get() {\n      if (isDev && !this.reduxActions) {\n        throw new Error('[Revue] Bind actions to Revue before calling them!');\n      }\n      return this.reduxActions;\n    }\n  }]);\n  return Revue;\n}();\n\nmodule.exports = Revue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/revue/revue.common.js\n ** module id = 45\n ** module chunks = 0\n **/",";(function () {\n\n  var vueTouch = {}\n  var Hammer = typeof require === 'function'\n    ? require('hammerjs')\n    : window.Hammer\n  var gestures = ['tap', 'pan', 'pinch', 'press', 'rotate', 'swipe']\n  var directions = ['up', 'down', 'left', 'right', 'horizontal', 'vertical']\n  var customeEvents = {}\n\n  if (!Hammer) {\n    throw new Error('[vue-touch] cannot locate Hammer.js.')\n  }\n\n  // exposed global options\n  vueTouch.config = {}\n\n  vueTouch.install = function (Vue) {\n\n    Vue.directive('touch', {\n\n      isFn: true,\n      acceptStatement: true,\n      priority: Vue.directive('on').priority,\n\n      bind: function () {\n        if (!this.el.hammer) {\n          this.el.hammer = new Hammer.Manager(this.el)\n        }\n        var mc = this.mc = this.el.hammer\n        // determine event type\n        var event = this.arg\n        if (!event) {\n          console.warn('[vue-touch] event type argument is required.')\n        }\n        var recognizerType, recognizer\n\n        if (customeEvents[event]) {\n          // custom event\n          var custom = customeEvents[event]\n          recognizerType = custom.type\n          recognizer = new Hammer[capitalize(recognizerType)](custom)\n          recognizer.recognizeWith(mc.recognizers)\n          mc.add(recognizer)\n        } else {\n          // built-in event\n          for (var i = 0; i < gestures.length; i++) {\n            if (event.indexOf(gestures[i]) === 0) {\n              recognizerType = gestures[i]\n              break\n            }\n          }\n          if (!recognizerType) {\n            console.warn('[vue-touch] invalid event type: ' + event)\n            return\n          }\n          recognizer = mc.get(recognizerType)\n          if (!recognizer) {\n            // add recognizer\n            recognizer = new Hammer[capitalize(recognizerType)]()\n            // make sure multiple recognizers work together...\n            recognizer.recognizeWith(mc.recognizers)\n            mc.add(recognizer)\n          }\n          // apply global options\n          var globalOptions = vueTouch.config[recognizerType]\n          if (globalOptions) {\n            guardDirections(globalOptions)\n            recognizer.set(globalOptions)\n          }\n          // apply local options\n          var localOptions =\n            this.el.hammerOptions &&\n            this.el.hammerOptions[recognizerType]\n          if (localOptions) {\n            guardDirections(localOptions)\n            recognizer.set(localOptions)\n          }\n        }\n        this.recognizer = recognizer\n      },\n\n      update: function (fn) {\n        var mc = this.mc\n        var vm = this.vm\n        var event = this.arg\n        // teardown old handler\n        if (this.handler) {\n          mc.off(event, this.handler)\n        }\n        if (typeof fn !== 'function') {\n          console.warn(\n            '[vue-touch] invalid handler function for v-touch: ' +\n            this.arg + '=\"' + this.descriptor.raw\n          )\n        } else {\n          mc.on(event, fn)\n        }\n      },\n\n      unbind: function () {\n        this.mc.off(this.arg, this.handler)\n        if (!Object.keys(this.mc.handlers).length) {\n          this.mc.destroy()\n          this.el.hammer = null\n        }\n      }\n    })\n\n    Vue.directive('touch-options', {\n      priority: Vue.directive('on').priority + 1,\n      update: function (options) {\n        var opts = this.el.hammerOptions || (this.el.hammerOptions = {})\n        if (!this.arg) {\n          console.warn('[vue-touch] recognizer type argument for v-touch-options is required.')\n        } else {\n          opts[this.arg] = options\n        }\n      }\n    })\n  }\n\n  /**\n   * Register a custom event.\n   *\n   * @param {String} event\n   * @param {Object} options - a Hammer.js recognizer option object.\n   *                           required fields:\n   *                           - type: the base recognizer to use for this event\n   */\n\n  vueTouch.registerCustomEvent = function (event, options) {\n    options.event = event\n    customeEvents[event] = options\n  }\n\n  function capitalize (str) {\n    return str.charAt(0).toUpperCase() + str.slice(1)\n  }\n\n  function guardDirections (options) {\n    var dir = options.direction\n    if (typeof dir === 'string') {\n      if (directions.indexOf(dir) > -1) {\n        options.direction = Hammer['DIRECTION_' + dir.toUpperCase()]\n      } else {\n        console.warn('[vue-touch] invalid direction: ' + dir)\n      }\n    }\n  }\n\n  if (typeof exports == \"object\") {\n    module.exports = vueTouch\n  } else if (typeof define == \"function\" && define.amd) {\n    define([], function(){ return vueTouch })\n  } else if (window.Vue) {\n    window.VueTouch = vueTouch\n    Vue.use(vueTouch)\n  }\n\n})()\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-touch/vue-touch.js\n ** module id = 46\n ** module chunks = 0\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  var support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = xhr.getAllResponseHeaders().trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        var status = (xhr.status === 1223) ? 204 : xhr.status\n        if (status < 100 || status > 599) {\n          reject(new TypeError('Network request failed'))\n          return\n        }\n        var options = {\n          status: status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 47\n ** module chunks = 0\n **/","import {createAction} from 'redux-actions'\nimport * as api from './api'\n\nexport const fetchingImages = createAction('fetchingImages')\nexport const fetchedImages = createAction('fetched images', api.fetchImages)\n\nexport function fetchImages(page) {\n\treturn (dispatch, getState) => {\n\t\tdispatch(fetchingImages)\n\t\tdispatch(fetchedImages(page))\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/actions.js\n **/","import fetch from 'isomorphic-fetch'\n\nexport function fetchImages(page = 1, limit = 10) {\n\treturn fetch(`https://gank.avosapps.com/api/data/%E7%A6%8F%E5%88%A9/${limit}/${page}`)\n\t\t.then(data => data.json())\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api.js\n **/","import {handleActions} from 'redux-actions'\n\nconst initialState = {\n\tpage: 1,\n\tfetching: false,\n\timages: []\n}\n\nexport default handleActions({\n\t'fetching images'(state, action) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tfetching: true\n\t\t}\n\t},\n\t'fetched images'(state, action) {\n\t\treturn {\n\t\t\tfetching: false,\n\t\t\tpage: state.page + 1,\n\t\t\timages: [\n\t\t\t\t...state.images,\n\t\t\t\t...action.payload.results\n\t\t\t]\n\t\t}\n\t}\n}, initialState)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/reducers/images.js\n **/","import {combineReducers} from 'redux'\nimport images from './images'\n\nexport default combineReducers({\n\timages\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/reducers/index.js\n **/","import Vue from 'vue'\nimport Revue from 'revue'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport promise from 'redux-promise'\nimport reducer from './reducers'\n\nconst store = createStore(reducer, applyMiddleware(promise, thunk))\nexport default new Revue(Vue, store)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/store.js\n **/","<style>\n\tbody {\n\t\tfont: 16px/1.7 \"lucida grande\" ,\"lucida sans unicode\",lucida,\"Helvetica Neue\",helvetica,\"Hiragino Sans GB\",\"Microsoft YaHei\",\"WenQuanYi Micro Hei\",sans-serif;\n\t}\n\tbody, ul, h1, h2, h3, h4 {\n\t\tmargin: 0;\n\t}\n\tul {\n\t\tpadding-left: 0;\n\t\tlist-style: none;\n\t}\n\t.main {\n\t\tmax-width: 400px;\n\t\tmargin: 20px auto;\n\t\toverflow: hidden;\n\t}\n\t.images-wrapper {\n\t\twidth: 400px;\n\t\theight: 600px;\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\tposition: relative;\n\t}\n\t.images {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\twidth: 400px;\n\t\theight: 600px;\n\t\t.image {\n\t\t\tdisplay: inline-block;\n\t\t\t.cover {\n\t\t\t\twidth: 400px;\n\t\t\t\theight: 400px;\n\t\t\t\tbackground-size: cover;\n\t\t\t}\n\t\t}\n\t}\n</style>\n\n<template>\n\t<div class=\"main\">\n\t\t<div class=\"images-wrapper\">\n\t\t\t<ul class=\"images\" :style=\"{left: '-' + index * 400 + 'px'}\">\n\t\t\t\t<li\n\t\t\t\t\tclass=\"image\"\n\t\t\t\t\tv-for=\"image in images.images\"\n\t\t\t\t\ttrack-by=\"$index\"\n\t\t\t\t\tv-touch:swipeleft=\"handleSwipe($index + 1)\"\n\t\t\t\t\tv-touch:swiperight=\"handleSwipe($index - 1)\">\n\t\t\t\t\t<div class=\"cover\" :style=\"{backgroundImage: 'url(' + image.url + ')'}\"></div>\n\t\t\t\t\t<h2 class=\"name\">{{ image.who }}</h2>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\timport store from './store'\n\timport {fetchImages} from './actions'\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\timages: store.state.images,\n\t\t\t\tindex: 0\n\t\t\t}\n\t\t},\n\t\tcreated() {\n\t\t\tthis.$subscribe('images')\n\t\t},\n\t\tready() {\n\t\t\tstore.dispatch(fetchImages(this.images.page))\n\t\t},\n\t\tmethods: {\n\t\t\thandleSwipe(index) {\n\t\t\t\tif (index % 5 === 0) {\n\t\t\t\t\tstore.dispatch(fetchImages(this.images.page))\n\t\t\t\t}\n\t\t\t\tthis.index = index\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** app.vue?7c381d9d\n **/","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/babel-runtime/core-js/array/from.js\n ** module id = 54\n ** module chunks = 0\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/babel-runtime/core-js/object/assign.js\n ** module id = 55\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];\n\nexports[\"default\"] = _Object$assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.__esModule = true;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/babel-runtime/helpers/extends.js\n ** module id = 56\n ** module chunks = 0\n **/","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/babel-runtime/helpers/toConsumableArray.js\n ** module id = 57\n ** module chunks = 0\n **/","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/$.core').Array.from;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/fn/array/from.js\n ** module id = 58\n ** module chunks = 0\n **/","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/$.core').Object.assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/fn/object/assign.js\n ** module id = 59\n ** module chunks = 0\n **/","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.a-function.js\n ** module id = 60\n ** module chunks = 0\n **/","var isObject = require('./$.is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.an-object.js\n ** module id = 61\n ** module chunks = 0\n **/","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./$.cof')\n  , TAG = require('./$.wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.classof.js\n ** module id = 62\n ** module chunks = 0\n **/","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./$.fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.descriptors.js\n ** module id = 63\n ** module chunks = 0\n **/","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.iobject.js\n ** module id = 64\n ** module chunks = 0\n **/","// check on default Array iterator\nvar Iterators  = require('./$.iterators')\n  , ITERATOR   = require('./$.wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.is-array-iter.js\n ** module id = 65\n ** module chunks = 0\n **/","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.is-object.js\n ** module id = 66\n ** module chunks = 0\n **/","// call something on iterator step with safe closing on error\nvar anObject = require('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.iter-call.js\n ** module id = 67\n ** module chunks = 0\n **/","'use strict';\nvar $              = require('./$')\n  , descriptor     = require('./$.property-desc')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./$.hide')(IteratorPrototype, require('./$.wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.iter-create.js\n ** module id = 68\n ** module chunks = 0\n **/","'use strict';\nvar LIBRARY        = require('./$.library')\n  , $export        = require('./$.export')\n  , redefine       = require('./$.redefine')\n  , hide           = require('./$.hide')\n  , has            = require('./$.has')\n  , Iterators      = require('./$.iterators')\n  , $iterCreate    = require('./$.iter-create')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , getProto       = require('./$').getProto\n  , ITERATOR       = require('./$.wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.iter-define.js\n ** module id = 69\n ** module chunks = 0\n **/","var ITERATOR     = require('./$.wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ safe = true; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.iter-detect.js\n ** module id = 70\n ** module chunks = 0\n **/","module.exports = true;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.library.js\n ** module id = 71\n ** module chunks = 0\n **/","// 19.1.2.1 Object.assign(target, source, ...)\nvar $        = require('./$')\n  , toObject = require('./$.to-object')\n  , IObject  = require('./$.iobject');\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = require('./$.fails')(function(){\n  var a = Object.assign\n    , A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , $$    = arguments\n    , $$len = $$.length\n    , index = 1\n    , getKeys    = $.getKeys\n    , getSymbols = $.getSymbols\n    , isEnum     = $.isEnum;\n  while($$len > index){\n    var S      = IObject($$[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  }\n  return T;\n} : Object.assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.object-assign.js\n ** module id = 72\n ** module chunks = 0\n **/","module.exports = require('./$.hide');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.redefine.js\n ** module id = 73\n ** module chunks = 0\n **/","var global = require('./$.global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.shared.js\n ** module id = 74\n ** module chunks = 0\n **/","var toInteger = require('./$.to-integer')\n  , defined   = require('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.string-at.js\n ** module id = 75\n ** module chunks = 0\n **/","// 7.1.15 ToLength\nvar toInteger = require('./$.to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.to-length.js\n ** module id = 76\n ** module chunks = 0\n **/","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/$.uid.js\n ** module id = 77\n ** module chunks = 0\n **/","var classof   = require('./$.classof')\n  , ITERATOR  = require('./$.wks')('iterator')\n  , Iterators = require('./$.iterators');\nmodule.exports = require('./$.core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/core.get-iterator-method.js\n ** module id = 78\n ** module chunks = 0\n **/","'use strict';\nvar ctx         = require('./$.ctx')\n  , $export     = require('./$.export')\n  , toObject    = require('./$.to-object')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\n$export($export.S + $export.F * !require('./$.iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , $$      = arguments\n      , $$len   = $$.length\n      , mapfn   = $$len > 1 ? $$[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        result[index] = mapping ? mapfn(O[index], index) : O[index];\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/es6.array.from.js\n ** module id = 79\n ** module chunks = 0\n **/","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./$.export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./$.object-assign')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/es6.object.assign.js\n ** module id = 80\n ** module chunks = 0\n **/","'use strict';\nvar $at  = require('./$.string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./$.iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/core-js/library/modules/es6.string.iterator.js\n ** module id = 81\n ** module chunks = 0\n **/","module.exports = \"<div class=main><div class=images-wrapper><ul class=images :style=\\\"{left: '-' + index * 400 + 'px'}\\\"><li class=image v-for=\\\"image in images.images\\\" track-by=$index v-touch:swipeleft=\\\"handleSwipe($index + 1)\\\" v-touch:swiperight=\\\"handleSwipe($index - 1)\\\"><div class=cover :style=\\\"{backgroundImage: 'url(' + image.url + ')'}\\\"></div><h2 class=name>{{ image.who }}</h2></li></ul></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../tooling/~/vue-html-loader!../tooling/~/vue-loader/lib/selector.js?type=template&index=0!./src/app.vue\n ** module id = 83\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!./../../tooling/node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!style-loader!css-loader!./../../tooling/node_modules/vue-loader/lib/style-rewriter.js?id=_v-60b084b7&file=app.vue!postcss-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\")\n__vue_script__ = require(\"-!babel-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=script&index=0!./app.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../tooling/node_modules/vue-loader/lib/selector.js?type=template&index=0!./app.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/egoist/dev/fuli/src/app.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.vue\n ** module id = 84\n ** module chunks = 0\n **/"],"sourceRoot":""}